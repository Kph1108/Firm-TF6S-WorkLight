

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Mon Feb 04 18:32:14 2019

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	12F683
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	pa_nodes0,global,class=CODE,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC12F683 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  008C                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0092                     	;# 
   101  0095                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0096                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  0081                     	;# 
   138  0085                     	;# 
   139  008C                     	;# 
   140  008E                     	;# 
   141  008F                     	;# 
   142  0090                     	;# 
   143  0092                     	;# 
   144  0095                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0096                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  008C                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0092                     	;# 
   187  0095                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0096                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  000A                     	;# 
   206  000B                     	;# 
   207  000C                     	;# 
   208  000E                     	;# 
   209  000E                     	;# 
   210  000F                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0013                     	;# 
   216  0014                     	;# 
   217  0015                     	;# 
   218  0018                     	;# 
   219  0019                     	;# 
   220  001A                     	;# 
   221  001E                     	;# 
   222  001F                     	;# 
   223  0081                     	;# 
   224  0085                     	;# 
   225  008C                     	;# 
   226  008E                     	;# 
   227  008F                     	;# 
   228  0090                     	;# 
   229  0092                     	;# 
   230  0095                     	;# 
   231  0095                     	;# 
   232  0096                     	;# 
   233  0096                     	;# 
   234  0099                     	;# 
   235  009A                     	;# 
   236  009A                     	;# 
   237  009B                     	;# 
   238  009C                     	;# 
   239  009D                     	;# 
   240  009E                     	;# 
   241  009F                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  000A                     	;# 
   249  000B                     	;# 
   250  000C                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0013                     	;# 
   259  0014                     	;# 
   260  0015                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  008C                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0092                     	;# 
   273  0095                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0096                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285                           
   286                           	psect	stringtext
   287  0100                     __pstringtext:	
   288  0100                     stringtab:	
   289  0100                     __stringtab:	
   290                           
   291                           ;	String table - string pointers are 2 bytes each
   292  0100  1BFF               	btfsc	btemp+1,7
   293  0101  290A               	ljmp	stringcode
   294  0102  1383               	bcf	3,7
   295  0103  187F               	btfsc	btemp+1,0
   296  0104  1783               	bsf	3,7
   297  0105  0800               	movf	0,w
   298  0106  0A84               	incf	4,f
   299  0107  1903               	skipnz
   300  0108  0AFF               	incf	btemp+1,f
   301  0109  0008               	return
   302  010A                     stringcode:	
   303  010A  087F               	movf	btemp+1,w
   304  010B  397F               	andlw	127
   305  010C  008A               	movwf	10
   306  010D  0804               	movf	4,w
   307  010E  0A84               	incf	4,f
   308  010F  1903               	skipnz
   309  0110  0AFF               	incf	btemp+1,f
   310  0111  0082               	movwf	2
   311  0112                     __stringbase:	
   312  0112                     __end_of__stringtab:	
   313  0112                     _ROM_COMBO_Patterns:	
   314  0112  3403               	retlw	3
   315  0113  3402               	retlw	2
   316  0114  3403               	retlw	3
   317  0115  3402               	retlw	2
   318  0116  3463               	retlw	99
   319  0117  3463               	retlw	99
   320  0118  3463               	retlw	99
   321  0119  3463               	retlw	99
   322  011A  3463               	retlw	99
   323  011B  3463               	retlw	99
   324  011C  3463               	retlw	99
   325  011D  3463               	retlw	99
   326  011E  3463               	retlw	99
   327  011F  3463               	retlw	99
   328  0120  3463               	retlw	99
   329  0121  3463               	retlw	99
   330  0122  3463               	retlw	99
   331  0123  3463               	retlw	99
   332  0124  3463               	retlw	99
   333  0125  3463               	retlw	99
   334  0126  3463               	retlw	99
   335  0127  3463               	retlw	99
   336  0128  3401               	retlw	1
   337  0129  3400               	retlw	0
   338  012A  3401               	retlw	1
   339  012B  3400               	retlw	0
   340  012C  3463               	retlw	99
   341  012D  3463               	retlw	99
   342  012E  3463               	retlw	99
   343  012F  3463               	retlw	99
   344  0130  3463               	retlw	99
   345  0131  3463               	retlw	99
   346  0132  3463               	retlw	99
   347  0133  3463               	retlw	99
   348  0134  3463               	retlw	99
   349  0135  3463               	retlw	99
   350  0136  3463               	retlw	99
   351  0137  3463               	retlw	99
   352  0138  3463               	retlw	99
   353  0139  3463               	retlw	99
   354  013A  3463               	retlw	99
   355  013B  3463               	retlw	99
   356  013C  3463               	retlw	99
   357  013D  3463               	retlw	99
   358  013E  3403               	retlw	3
   359  013F  3402               	retlw	2
   360  0140  3403               	retlw	3
   361  0141  3402               	retlw	2
   362  0142  3403               	retlw	3
   363  0143  3402               	retlw	2
   364  0144  3401               	retlw	1
   365  0145  3400               	retlw	0
   366  0146  3401               	retlw	1
   367  0147  3400               	retlw	0
   368  0148  3401               	retlw	1
   369  0149  3400               	retlw	0
   370  014A  3401               	retlw	1
   371  014B  3400               	retlw	0
   372  014C  3463               	retlw	99
   373  014D  3463               	retlw	99
   374  014E  3463               	retlw	99
   375  014F  3463               	retlw	99
   376  0150  3463               	retlw	99
   377  0151  3463               	retlw	99
   378  0152  3463               	retlw	99
   379  0153  3463               	retlw	99
   380  0154  3404               	retlw	4
   381  0155  3402               	retlw	2
   382  0156  3404               	retlw	4
   383  0157  3402               	retlw	2
   384  0158  3463               	retlw	99
   385  0159  3463               	retlw	99
   386  015A  3463               	retlw	99
   387  015B  3463               	retlw	99
   388  015C  3463               	retlw	99
   389  015D  3463               	retlw	99
   390  015E  3463               	retlw	99
   391  015F  3463               	retlw	99
   392  0160  3463               	retlw	99
   393  0161  3463               	retlw	99
   394  0162  3463               	retlw	99
   395  0163  3463               	retlw	99
   396  0164  3463               	retlw	99
   397  0165  3463               	retlw	99
   398  0166  3463               	retlw	99
   399  0167  3463               	retlw	99
   400  0168  3463               	retlw	99
   401  0169  3463               	retlw	99
   402  016A  3406               	retlw	6
   403  016B  3400               	retlw	0
   404  016C  3406               	retlw	6
   405  016D  3400               	retlw	0
   406  016E  3463               	retlw	99
   407  016F  3463               	retlw	99
   408  0170  3463               	retlw	99
   409  0171  3463               	retlw	99
   410  0172  3463               	retlw	99
   411  0173  3463               	retlw	99
   412  0174  3463               	retlw	99
   413  0175  3463               	retlw	99
   414  0176  3463               	retlw	99
   415  0177  3463               	retlw	99
   416  0178  3463               	retlw	99
   417  0179  3463               	retlw	99
   418  017A  3463               	retlw	99
   419  017B  3463               	retlw	99
   420  017C  3463               	retlw	99
   421  017D  3463               	retlw	99
   422  017E  3463               	retlw	99
   423  017F  3463               	retlw	99
   424  0180  3404               	retlw	4
   425  0181  3402               	retlw	2
   426  0182  3404               	retlw	4
   427  0183  3402               	retlw	2
   428  0184  3404               	retlw	4
   429  0185  3402               	retlw	2
   430  0186  3406               	retlw	6
   431  0187  3400               	retlw	0
   432  0188  3406               	retlw	6
   433  0189  3400               	retlw	0
   434  018A  3406               	retlw	6
   435  018B  3400               	retlw	0
   436  018C  3406               	retlw	6
   437  018D  3400               	retlw	0
   438  018E  3463               	retlw	99
   439  018F  3463               	retlw	99
   440  0190  3463               	retlw	99
   441  0191  3463               	retlw	99
   442  0192  3463               	retlw	99
   443  0193  3463               	retlw	99
   444  0194  3463               	retlw	99
   445  0195  3463               	retlw	99
   446  0196  3405               	retlw	5
   447  0197  3402               	retlw	2
   448  0198  3405               	retlw	5
   449  0199  3402               	retlw	2
   450  019A  3463               	retlw	99
   451  019B  3463               	retlw	99
   452  019C  3463               	retlw	99
   453  019D  3463               	retlw	99
   454  019E  3463               	retlw	99
   455  019F  3463               	retlw	99
   456  01A0  3463               	retlw	99
   457  01A1  3463               	retlw	99
   458  01A2  3463               	retlw	99
   459  01A3  3463               	retlw	99
   460  01A4  3463               	retlw	99
   461  01A5  3463               	retlw	99
   462  01A6  3463               	retlw	99
   463  01A7  3463               	retlw	99
   464  01A8  3463               	retlw	99
   465  01A9  3463               	retlw	99
   466  01AA  3463               	retlw	99
   467  01AB  3463               	retlw	99
   468  01AC  3407               	retlw	7
   469  01AD  3400               	retlw	0
   470  01AE  3407               	retlw	7
   471  01AF  3400               	retlw	0
   472  01B0  3463               	retlw	99
   473  01B1  3463               	retlw	99
   474  01B2  3463               	retlw	99
   475  01B3  3463               	retlw	99
   476  01B4  3463               	retlw	99
   477  01B5  3463               	retlw	99
   478  01B6  3463               	retlw	99
   479  01B7  3463               	retlw	99
   480  01B8  3463               	retlw	99
   481  01B9  3463               	retlw	99
   482  01BA  3463               	retlw	99
   483  01BB  3463               	retlw	99
   484  01BC  3463               	retlw	99
   485  01BD  3463               	retlw	99
   486  01BE  3463               	retlw	99
   487  01BF  3463               	retlw	99
   488  01C0  3463               	retlw	99
   489  01C1  3463               	retlw	99
   490  01C2  3405               	retlw	5
   491  01C3  3402               	retlw	2
   492  01C4  3405               	retlw	5
   493  01C5  3402               	retlw	2
   494  01C6  3405               	retlw	5
   495  01C7  3402               	retlw	2
   496  01C8  3407               	retlw	7
   497  01C9  3400               	retlw	0
   498  01CA  3407               	retlw	7
   499  01CB  3400               	retlw	0
   500  01CC  3407               	retlw	7
   501  01CD  3400               	retlw	0
   502  01CE  3407               	retlw	7
   503  01CF  3400               	retlw	0
   504  01D0  3463               	retlw	99
   505  01D1  3463               	retlw	99
   506  01D2  3463               	retlw	99
   507  01D3  3463               	retlw	99
   508  01D4  3463               	retlw	99
   509  01D5  3463               	retlw	99
   510  01D6  3463               	retlw	99
   511  01D7  3463               	retlw	99
   512  01D8  340D               	retlw	13
   513  01D9  340E               	retlw	14
   514  01DA  340D               	retlw	13
   515  01DB  340E               	retlw	14
   516  01DC  340F               	retlw	15
   517  01DD  340F               	retlw	15
   518  01DE  3410               	retlw	16
   519  01DF  3410               	retlw	16
   520  01E0  340F               	retlw	15
   521  01E1  340F               	retlw	15
   522  01E2  3410               	retlw	16
   523  01E3  3410               	retlw	16
   524  01E4  340B               	retlw	11
   525  01E5  340C               	retlw	12
   526  01E6  340B               	retlw	11
   527  01E7  340C               	retlw	12
   528  01E8  340A               	retlw	10
   529  01E9  3409               	retlw	9
   530  01EA  340A               	retlw	10
   531  01EB  3409               	retlw	9
   532  01EC  340A               	retlw	10
   533  01ED  3409               	retlw	9
   534  01EE  340A               	retlw	10
   535  01EF  3409               	retlw	9
   536  01F0  340A               	retlw	10
   537  01F1  3409               	retlw	9
   538  01F2  340D               	retlw	13
   539  01F3  340D               	retlw	13
   540  01F4  3410               	retlw	16
   541  01F5  3410               	retlw	16
   542  01F6  340F               	retlw	15
   543  01F7  340F               	retlw	15
   544  01F8  3410               	retlw	16
   545  01F9  3410               	retlw	16
   546  01FA  340F               	retlw	15
   547  01FB  340F               	retlw	15
   548  01FC  3410               	retlw	16
   549  01FD  3410               	retlw	16
   550  01FE  340F               	retlw	15
   551  01FF  340F               	retlw	15
   552  0200  340D               	retlw	13
   553  0201  340E               	retlw	14
   554  0202  340D               	retlw	13
   555  0203  340E               	retlw	14
   556  0204  3407               	retlw	7
   557  0205  3408               	retlw	8
   558  0206  3408               	retlw	8
   559  0207  3408               	retlw	8
   560  0208  3463               	retlw	99
   561  0209  3463               	retlw	99
   562  020A  3463               	retlw	99
   563  020B  3463               	retlw	99
   564  020C  3463               	retlw	99
   565  020D  3463               	retlw	99
   566  020E  3463               	retlw	99
   567  020F  3463               	retlw	99
   568  0210  3463               	retlw	99
   569  0211  3463               	retlw	99
   570  0212  3463               	retlw	99
   571  0213  3463               	retlw	99
   572  0214  3463               	retlw	99
   573  0215  3463               	retlw	99
   574  0216  3463               	retlw	99
   575  0217  3463               	retlw	99
   576  0218  3463               	retlw	99
   577  0219  3463               	retlw	99
   578  021A  3408               	retlw	8
   579  021B  3408               	retlw	8
   580  021C  3408               	retlw	8
   581  021D  3408               	retlw	8
   582  021E  3463               	retlw	99
   583  021F  3463               	retlw	99
   584  0220  3463               	retlw	99
   585  0221  3463               	retlw	99
   586  0222  3463               	retlw	99
   587  0223  3463               	retlw	99
   588  0224  3463               	retlw	99
   589  0225  3463               	retlw	99
   590  0226  3463               	retlw	99
   591  0227  3463               	retlw	99
   592  0228  3463               	retlw	99
   593  0229  3463               	retlw	99
   594  022A  3463               	retlw	99
   595  022B  3463               	retlw	99
   596  022C  3463               	retlw	99
   597  022D  3463               	retlw	99
   598  022E  3463               	retlw	99
   599  022F  3463               	retlw	99
   600  0230  3408               	retlw	8
   601  0231  3408               	retlw	8
   602  0232  3408               	retlw	8
   603  0233  3408               	retlw	8
   604  0234  3463               	retlw	99
   605  0235  3463               	retlw	99
   606  0236  3463               	retlw	99
   607  0237  3463               	retlw	99
   608  0238  3463               	retlw	99
   609  0239  3463               	retlw	99
   610  023A  3463               	retlw	99
   611  023B  3463               	retlw	99
   612  023C  3463               	retlw	99
   613  023D  3463               	retlw	99
   614  023E  3463               	retlw	99
   615  023F  3463               	retlw	99
   616  0240  3463               	retlw	99
   617  0241  3463               	retlw	99
   618  0242  3463               	retlw	99
   619  0243  3463               	retlw	99
   620  0244  3463               	retlw	99
   621  0245  3463               	retlw	99
   622  0246                     __end_of_ROM_COMBO_Patterns:	
   623  0246                     _ROM_Sub_Patterns:	
   624  0246  3400               	retlw	0
   625  0247  3400               	retlw	0
   626  0248  3400               	retlw	0
   627  0249  3400               	retlw	0
   628  024A  3400               	retlw	0
   629  024B  3400               	retlw	0
   630  024C  3400               	retlw	0
   631  024D  3403               	retlw	3
   632  024E  3403               	retlw	3
   633  024F  3400               	retlw	0
   634  0250  3403               	retlw	3
   635  0251  3403               	retlw	3
   636  0252  3403               	retlw	3
   637  0253  3403               	retlw	3
   638  0254  3400               	retlw	0
   639  0255  3400               	retlw	0
   640  0256  3400               	retlw	0
   641  0257  3400               	retlw	0
   642  0258  3400               	retlw	0
   643  0259  3400               	retlw	0
   644  025A  3400               	retlw	0
   645  025B  3403               	retlw	3
   646  025C  3403               	retlw	3
   647  025D  3400               	retlw	0
   648  025E  3400               	retlw	0
   649  025F  3403               	retlw	3
   650  0260  3403               	retlw	3
   651  0261  3403               	retlw	3
   652  0262  3403               	retlw	3
   653  0263  3400               	retlw	0
   654  0264  3403               	retlw	3
   655  0265  3400               	retlw	0
   656  0266  3403               	retlw	3
   657  0267  3400               	retlw	0
   658  0268  3403               	retlw	3
   659  0269  3403               	retlw	3
   660  026A  3400               	retlw	0
   661  026B  3403               	retlw	3
   662  026C  3400               	retlw	0
   663  026D  3403               	retlw	3
   664  026E  3400               	retlw	0
   665  026F  3403               	retlw	3
   666  0270  3403               	retlw	3
   667  0271  3400               	retlw	0
   668  0272  3403               	retlw	3
   669  0273  3400               	retlw	0
   670  0274  3400               	retlw	0
   671  0275  3400               	retlw	0
   672  0276  3403               	retlw	3
   673  0277  3403               	retlw	3
   674  0278  3400               	retlw	0
   675  0279  3403               	retlw	3
   676  027A  3400               	retlw	0
   677  027B  3403               	retlw	3
   678  027C  3400               	retlw	0
   679  027D  3403               	retlw	3
   680  027E  3403               	retlw	3
   681  027F  3403               	retlw	3
   682  0280  3403               	retlw	3
   683  0281  3403               	retlw	3
   684  0282  3403               	retlw	3
   685  0283  3403               	retlw	3
   686  0284  3403               	retlw	3
   687  0285  3400               	retlw	0
   688  0286  3400               	retlw	0
   689  0287  3400               	retlw	0
   690  0288  3400               	retlw	0
   691  0289  3400               	retlw	0
   692  028A  3400               	retlw	0
   693  028B  3400               	retlw	0
   694  028C  3403               	retlw	3
   695  028D  3403               	retlw	3
   696  028E  3403               	retlw	3
   697  028F  3403               	retlw	3
   698  0290  3403               	retlw	3
   699  0291  3403               	retlw	3
   700  0292  3403               	retlw	3
   701  0293  3403               	retlw	3
   702  0294  3400               	retlw	0
   703  0295  3403               	retlw	3
   704  0296  3400               	retlw	0
   705  0297  3403               	retlw	3
   706  0298  3400               	retlw	0
   707  0299  3403               	retlw	3
   708  029A  3400               	retlw	0
   709  029B  3400               	retlw	0
   710  029C  3400               	retlw	0
   711  029D  3400               	retlw	0
   712  029E  3400               	retlw	0
   713  029F  3400               	retlw	0
   714  02A0  3400               	retlw	0
   715  02A1  3403               	retlw	3
   716  02A2  3400               	retlw	0
   717  02A3  3403               	retlw	3
   718  02A4  3400               	retlw	0
   719  02A5  3403               	retlw	3
   720  02A6  3400               	retlw	0
   721  02A7  3403               	retlw	3
   722  02A8  3400               	retlw	0
   723  02A9  3400               	retlw	0
   724  02AA  3400               	retlw	0
   725  02AB  3400               	retlw	0
   726  02AC  3400               	retlw	0
   727  02AD  3400               	retlw	0
   728  02AE  3400               	retlw	0
   729  02AF  3403               	retlw	3
   730  02B0  3403               	retlw	3
   731  02B1  3403               	retlw	3
   732  02B2  3403               	retlw	3
   733  02B3  3403               	retlw	3
   734  02B4  3403               	retlw	3
   735  02B5  3403               	retlw	3
   736  02B6  3400               	retlw	0
   737  02B7  3400               	retlw	0
   738  02B8  3400               	retlw	0
   739  02B9  3400               	retlw	0
   740  02BA  3400               	retlw	0
   741  02BB  3400               	retlw	0
   742  02BC  3400               	retlw	0
   743  02BD                     __end_of_ROM_Sub_Patterns:	
   744  02BD                     _ROM_Sub_Patterns_Time:	
   745  02BD  340E               	retlw	14
   746  02BE  3409               	retlw	9
   747  02BF  3400               	retlw	0
   748  02C0  3400               	retlw	0
   749  02C1  3400               	retlw	0
   750  02C2  3400               	retlw	0
   751  02C3  3400               	retlw	0
   752  02C4  340A               	retlw	10
   753  02C5  340A               	retlw	10
   754  02C6  3406               	retlw	6
   755  02C7  3400               	retlw	0
   756  02C8  3400               	retlw	0
   757  02C9  3400               	retlw	0
   758  02CA  3400               	retlw	0
   759  02CB  3419               	retlw	25
   760  02CC  340E               	retlw	14
   761  02CD  3400               	retlw	0
   762  02CE  3400               	retlw	0
   763  02CF  3400               	retlw	0
   764  02D0  3400               	retlw	0
   765  02D1  3400               	retlw	0
   766  02D2  3410               	retlw	16
   767  02D3  340F               	retlw	15
   768  02D4  3408               	retlw	8
   769  02D5  3400               	retlw	0
   770  02D6  3400               	retlw	0
   771  02D7  3400               	retlw	0
   772  02D8  3400               	retlw	0
   773  02D9  3410               	retlw	16
   774  02DA  3408               	retlw	8
   775  02DB  340F               	retlw	15
   776  02DC  3400               	retlw	0
   777  02DD  3400               	retlw	0
   778  02DE  3400               	retlw	0
   779  02DF  3400               	retlw	0
   780  02E0  340B               	retlw	11
   781  02E1  3404               	retlw	4
   782  02E2  340B               	retlw	11
   783  02E3  3404               	retlw	4
   784  02E4  340A               	retlw	10
   785  02E5  3400               	retlw	0
   786  02E6  3400               	retlw	0
   787  02E7  340A               	retlw	10
   788  02E8  3405               	retlw	5
   789  02E9  340A               	retlw	10
   790  02EA  3401               	retlw	1
   791  02EB  3400               	retlw	0
   792  02EC  3400               	retlw	0
   793  02ED  3400               	retlw	0
   794  02EE  3407               	retlw	7
   795  02EF  3403               	retlw	3
   796  02F0  3406               	retlw	6
   797  02F1  3403               	retlw	3
   798  02F2  3406               	retlw	6
   799  02F3  3401               	retlw	1
   800  02F4  3400               	retlw	0
   801  02F5  340A               	retlw	10
   802  02F6  340A               	retlw	10
   803  02F7  3406               	retlw	6
   804  02F8  3400               	retlw	0
   805  02F9  3400               	retlw	0
   806  02FA  3400               	retlw	0
   807  02FB  3400               	retlw	0
   808  02FC  3408               	retlw	8
   809  02FD  3409               	retlw	9
   810  02FE  3400               	retlw	0
   811  02FF  3400               	retlw	0
   812  0300  3400               	retlw	0
   813  0301  3400               	retlw	0
   814  0302  3400               	retlw	0
   815  0303  3408               	retlw	8
   816  0304  3408               	retlw	8
   817  0305  3400               	retlw	0
   818  0306  3400               	retlw	0
   819  0307  3400               	retlw	0
   820  0308  3400               	retlw	0
   821  0309  3400               	retlw	0
   822  030A  3403               	retlw	3
   823  030B  3403               	retlw	3
   824  030C  3407               	retlw	7
   825  030D  3400               	retlw	0
   826  030E  3400               	retlw	0
   827  030F  3400               	retlw	0
   828  0310  3400               	retlw	0
   829  0311  3407               	retlw	7
   830  0312  3408               	retlw	8
   831  0313  3400               	retlw	0
   832  0314  3400               	retlw	0
   833  0315  3400               	retlw	0
   834  0316  3400               	retlw	0
   835  0317  3400               	retlw	0
   836  0318  3403               	retlw	3
   837  0319  3403               	retlw	3
   838  031A  3403               	retlw	3
   839  031B  3403               	retlw	3
   840  031C  3403               	retlw	3
   841  031D  3403               	retlw	3
   842  031E  3407               	retlw	7
   843  031F  340D               	retlw	13
   844  0320  340D               	retlw	13
   845  0321  3400               	retlw	0
   846  0322  3400               	retlw	0
   847  0323  3400               	retlw	0
   848  0324  3400               	retlw	0
   849  0325  3400               	retlw	0
   850  0326  3404               	retlw	4
   851  0327  3407               	retlw	7
   852  0328  3400               	retlw	0
   853  0329  3400               	retlw	0
   854  032A  3400               	retlw	0
   855  032B  3400               	retlw	0
   856  032C  3400               	retlw	0
   857  032D  3404               	retlw	4
   858  032E  3406               	retlw	6
   859  032F  3400               	retlw	0
   860  0330  3400               	retlw	0
   861  0331  3400               	retlw	0
   862  0332  3400               	retlw	0
   863  0333  3400               	retlw	0
   864  0334                     __end_of_ROM_Sub_Patterns_Time:	
   865  000B                     _INTCON	set	11
   866  0019                     _CMCON0	set	25
   867  0018                     _WDTCON	set	24
   868  0005                     _GPIO	set	5
   869  0005                     _GPIObits	set	5
   870  0001                     _TMR0	set	1
   871  000B                     _INTCONbits	set	11
   872  005F                     _GIE	set	95
   873  0018                     _CARRY	set	24
   874  009D                     _EECON2	set	157
   875  009A                     _EEDATA	set	154
   876  009C                     _EECON1	set	156
   877  009B                     _EEADR	set	155
   878  0085                     _TRISIObits	set	133
   879  0085                     _TRISIO	set	133
   880  009F                     _ANSEL	set	159
   881  0095                     _WPU	set	149
   882  0081                     _OPTION_REGbits	set	129
   883  008F                     _OSCCONbits	set	143
   884  008F                     _OSCCON	set	143
   885  04E2                     _WREN	set	1250
   886  04E0                     _RD	set	1248
   887  04E1                     _WR	set	1249
   888                           
   889                           ; #config settings
   890  0000                     
   891                           	psect	cinit
   892  0010                     start_initialization:	
   893  0010                     __initialization:	
   894                           
   895                           ; Clear objects allocated to COMMON
   896  0010  3070               	movlw	low __pbssCOMMON
   897  0011  0084               	movwf	4
   898  0012  3077               	movlw	low (__pbssCOMMON+7)
   899  0013  2757               	fcall	clear_ram0
   900  0014  3020               	movlw	low __pbssBANK0
   901                           
   902                           ; Clear objects allocated to BANK0
   903  0015  1383               	bcf	3,7	;select IRP bank0
   904  0016  0084               	movwf	4
   905  0017  3049               	movlw	low (__pbssBANK0+41)
   906  0018  2757               	fcall	clear_ram0
   907  0019                     end_of_initialization:	
   908                           ;End of C runtime variable initialization code
   909                           
   910  0019                     __end_of__initialization:	
   911  0019  0183               	clrf	3
   912  001A  2C7D               	ljmp	_main	;jump to C main() function
   913                           
   914                           	psect	bssEEDATA
   915  0000                     __pbssEEDATA:	
   916  0000                     _EEprom_InPhase:	
   917  0000  0000               	db	0
   918  0001  0000               	db	0
   919  0002                     _EEprom_mode:	
   920  0002  0000               	db	0
   921  0003  0000               	db	0
   922  0004                     _EEprom_Written_Flag:	
   923  0004  0000               	db	0
   924                           
   925                           	psect	bssCOMMON
   926  0070                     __pbssCOMMON:	
   927  0070                     _GLOBAL_Selected_Mode_Number:	
   928  0070                     	ds	1
   929  0071                     _GLOBAL_SYNC_PULSE_Counter:	
   930  0071                     	ds	1
   931  0072                     _channelToBeDisplayed:	
   932  0072                     	ds	1
   933  0073                     _GLOBAL_combo_patterns_column_index:	
   934  0073                     	ds	1
   935  0074                     _OUTPUT_BUFFER:	
   936  0074                     	ds	1
   937  0075                     _GLOBAL_sub_patterns_index:	
   938  0075                     	ds	1
   939  0076                     _GLOBAL_sub_patterns_column_index:	
   940  0076                     	ds	1
   941                           
   942                           	psect	bssBANK0
   943  0020                     __pbssBANK0:	
   944  0020                     _bGLOBAL_InPhase_copy:	
   945  0020                     	ds	2
   946  0022                     _GLOBAL_Mode_copy:	
   947  0022                     	ds	2
   948  0024                     SetOUTPUT@pwmCounter:	
   949  0024                     	ds	1
   950  0025                     SetOUTPUT@temporaryGPIO:	
   951  0025                     	ds	1
   952  0026                     _bGLOBAL_SYNC_Line_PRESSED:	
   953  0026                     	ds	1
   954  0027                     _bGLOBAL_MODE2_PRESSED:	
   955  0027                     	ds	1
   956  0028                     _bGLOBAL_MODE1_PRESSED:	
   957  0028                     	ds	1
   958  0029                     _bGLOBAL_ENABLE_LEDS:	
   959  0029                     	ds	1
   960  002A                     _bGLOBAL_IS_PROGRAMMING:	
   961  002A                     	ds	1
   962  002B                     _bGLOBAL_CHANGING_PATTERN_Enforce:	
   963  002B                     	ds	1
   964  002C                     _bGLOBAL_CHANGING_PATTERN:	
   965  002C                     	ds	1
   966  002D                     _bGLOBAL_DISABLE_SYNC_Line_PRESSED:	
   967  002D                     	ds	1
   968  002E                     _GLOBAL_CHANNELS_EN_copy:	
   969  002E                     	ds	1
   970  002F                     _GLOBAL_CHANNELS_EN:	
   971  002F                     	ds	1
   972  0030                     _GLOBAL_MODE2_LOW_counter:	
   973  0030                     	ds	1
   974  0031                     _GLOBAL_SYNC_Line_LOW_counter:	
   975  0031                     	ds	1
   976  0032                     _GLOBAL_MODE1_LOW_counter:	
   977  0032                     	ds	1
   978  0033                     _GLOBAL_MODE2_counter:	
   979  0033                     	ds	1
   980  0034                     _GLOBAL_SYNC_Line_counter:	
   981  0034                     	ds	1
   982  0035                     _GLOBAL_MODE1_counter:	
   983  0035                     	ds	1
   984  0036                     _GLOBAL_Selected_Mode_Type_copy:	
   985  0036                     	ds	1
   986  0037                     _GLOBAL_Selected_Mode_Type:	
   987  0037                     	ds	1
   988  0038                     _GLOBAL_combo_patterns_counter:	
   989  0038                     	ds	1
   990  0039                     isr@tenMSCounter:	
   991  0039                     	ds	1
   992  003A                     _GLOBAL_Dummy_Counter2:	
   993  003A                     	ds	1
   994  003B                     _GLOBAL_Dummy_Counter:	
   995  003B                     	ds	1
   996  003C                     _OUTPUT_BUFFER_COPY:	
   997  003C                     	ds	1
   998  003D                     _bGLOBAL_SYNC_SENT:	
   999  003D                     	ds	1
  1000  003E                     _GLOBAL_CHANNELS_EN_DUAL:	
  1001  003E                     	ds	1
  1002  003F                     _bDualColor:	
  1003  003F                     	ds	1
  1004  0040                     _bGLOBAL_InPhase:	
  1005  0040                     	ds	1
  1006  0041                     _bGLOBAL_END_OF_CYCLE_COND2:	
  1007  0041                     	ds	1
  1008  0042                     _bGLOBAL_END_OF_CYCLE_COND1:	
  1009  0042                     	ds	1
  1010  0043                     _GLOBAL_combo_patterns_index:	
  1011  0043                     	ds	1
  1012  0044                     _GLOBAL_combo_patterns_index_copy:	
  1013  0044                     	ds	1
  1014  0045                     _GLOBAL_sub_patterns_index_copy:	
  1015  0045                     	ds	1
  1016  0046                     _GLOBAL_sub_patterns_timer:	
  1017  0046                     	ds	1
  1018  0047                     _bGLOBAL_STEADY_ON:	
  1019  0047                     	ds	1
  1020  0048                     _bGLOBAL_OUTPUT_BUFFER_CHANGED:	
  1021  0048                     	ds	1
  1022                           
  1023                           	psect	clrtext
  1024  0757                     clear_ram0:	
  1025                           ;	Called with FSR containing the base address, and
  1026                           ;	W with the last address+1
  1027                           
  1028  0757  0064               	clrwdt	;clear the watchdog before getting into this loop
  1029  0758                     clrloop0:	
  1030  0758  0180               	clrf	0	;clear RAM location pointed to by FSR
  1031  0759  0A84               	incf	4,f	;increment pointer
  1032  075A  0604               	xorwf	4,w	;XOR with final address
  1033  075B  1903               	btfsc	3,2	;have we reached the end yet?
  1034  075C  3400               	retlw	0	;all done for this memory range, return
  1035  075D  0604               	xorwf	4,w	;XOR again to restore value
  1036  075E  2F58               	goto	clrloop0	;do the next byte
  1037                           
  1038                           	psect	cstackCOMMON
  1039  0077                     __pcstackCOMMON:	
  1040  0077                     ?_SetOUTPUT:	
  1041  0077                     ?_Read_Mode_Input:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044  0077                     ??_Read_Mode_Input:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047  0077                     ?_ReWriteEEPROM:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050  0077                     ?_Update_ComboPattern_Index:	
  1051                           ; 1 bytes @ 0x0
  1052                           
  1053  0077                     ?_ConfigureOscillator:	
  1054                           ; 1 bytes @ 0x0
  1055                           
  1056  0077                     ?_InitApp:	
  1057                           ; 1 bytes @ 0x0
  1058                           
  1059  0077                     ?_isr:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  0077                     ?_WaitForSYNC_PU:	
  1063                           ; 1 bytes @ 0x0
  1064                           
  1065  0077                     ?_WriteEEPROMDefaults:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  0077                     ?_INC_EEPROM_MODE:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0077                     ?_Update_Input_Mode_Type:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0077                     ?_Initial_Start:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0077                     ?_main:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0077                     ?___eetoc:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0077                     ?___bmul:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0077                     ?i1_SetOUTPUT:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0077                     ??i1_SetOUTPUT:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0077                     ?___wmul:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0077                     ___bmul@multiplicand:	
  1096                           ; 2 bytes @ 0x0
  1097                           
  1098  0077                     ___wmul@multiplier:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101                           
  1102                           ; 2 bytes @ 0x0
  1103  0077                     	ds	1
  1104  0078                     ??___bmul:	
  1105  0078                     ___bmul@product:	
  1106                           ; 1 bytes @ 0x1
  1107                           
  1108                           
  1109                           ; 1 bytes @ 0x1
  1110  0078                     	ds	1
  1111  0079                     ___bmul@multiplier:	
  1112  0079                     ___wmul@multiplicand:	
  1113                           ; 1 bytes @ 0x2
  1114                           
  1115                           
  1116                           ; 2 bytes @ 0x2
  1117  0079                     	ds	2
  1118  007B                     ??___wmul:	
  1119  007B                     ___wmul@product:	
  1120                           ; 1 bytes @ 0x4
  1121                           
  1122                           
  1123                           ; 2 bytes @ 0x4
  1124  007B                     	ds	2
  1125  007D                     isr@temp_data1:	
  1126                           
  1127                           ; 1 bytes @ 0x6
  1128  007D                     	ds	1
  1129                           
  1130                           	psect	cstackBANK0
  1131  0049                     __pcstackBANK0:	
  1132  0049                     ??_isr:	
  1133                           
  1134                           ; 1 bytes @ 0x0
  1135  0049                     	ds	10
  1136  0053                     ??_SetOUTPUT:	
  1137  0053                     ??_Update_ComboPattern_Index:	
  1138                           ; 1 bytes @ 0xA
  1139                           
  1140  0053                     ??_ConfigureOscillator:	
  1141                           ; 1 bytes @ 0xA
  1142                           
  1143  0053                     ??_WaitForSYNC_PU:	
  1144                           ; 1 bytes @ 0xA
  1145                           
  1146  0053                     ??_Update_Input_Mode_Type:	
  1147                           ; 1 bytes @ 0xA
  1148                           
  1149  0053                     ?_eecpymem:	
  1150                           ; 1 bytes @ 0xA
  1151                           
  1152  0053                     ?_memcpyee:	
  1153                           ; 1 bytes @ 0xA
  1154                           
  1155  0053                     WaitForSYNC_PU@temp001:	
  1156                           ; 1 bytes @ 0xA
  1157                           
  1158  0053                     eecpymem@from:	
  1159                           ; 1 bytes @ 0xA
  1160                           
  1161  0053                     memcpyee@from:	
  1162                           ; 1 bytes @ 0xA
  1163                           
  1164                           
  1165                           ; 1 bytes @ 0xA
  1166  0053                     	ds	1
  1167  0054                     ??_InitApp:	
  1168  0054                     eecpymem@size:	
  1169                           ; 1 bytes @ 0xB
  1170                           
  1171  0054                     memcpyee@size:	
  1172                           ; 1 bytes @ 0xB
  1173                           
  1174                           
  1175                           ; 1 bytes @ 0xB
  1176  0054                     	ds	1
  1177  0055                     ??_eecpymem:	
  1178  0055                     ??_memcpyee:	
  1179                           ; 1 bytes @ 0xC
  1180                           
  1181  0055                     eecpymem@cp:	
  1182                           ; 1 bytes @ 0xC
  1183                           
  1184  0055                     memcpyee@ptr:	
  1185                           ; 1 bytes @ 0xC
  1186                           
  1187                           
  1188                           ; 1 bytes @ 0xC
  1189  0055                     	ds	1
  1190  0056                     eecpymem@to:	
  1191  0056                     memcpyee@to:	
  1192                           ; 1 bytes @ 0xD
  1193                           
  1194                           
  1195                           ; 1 bytes @ 0xD
  1196  0056                     	ds	1
  1197  0057                     ??___eetoc:	
  1198  0057                     ?___ctoee:	
  1199                           ; 1 bytes @ 0xE
  1200                           
  1201  0057                     ___eetoc@addr:	
  1202                           ; 1 bytes @ 0xE
  1203                           
  1204  0057                     ___ctoee@data:	
  1205                           ; 1 bytes @ 0xE
  1206                           
  1207                           
  1208                           ; 1 bytes @ 0xE
  1209  0057                     	ds	1
  1210  0058                     ??___ctoee:	
  1211  0058                     ___eetoc@data:	
  1212                           ; 1 bytes @ 0xF
  1213                           
  1214  0058                     ___ctoee@addr:	
  1215                           ; 1 bytes @ 0xF
  1216                           
  1217                           
  1218                           ; 1 bytes @ 0xF
  1219  0058                     	ds	1
  1220  0059                     ??_ReWriteEEPROM:	
  1221  0059                     ReWriteEEPROM@i:	
  1222                           ; 1 bytes @ 0x10
  1223                           
  1224                           
  1225                           ; 1 bytes @ 0x10
  1226  0059                     	ds	1
  1227  005A                     ??_WriteEEPROMDefaults:	
  1228  005A                     ??_INC_EEPROM_MODE:	
  1229                           ; 1 bytes @ 0x11
  1230                           
  1231  005A                     ??_Initial_Start:	
  1232                           ; 1 bytes @ 0x11
  1233                           
  1234  005A                     INC_EEPROM_MODE@Temp_Mode_Data:	
  1235                           ; 1 bytes @ 0x11
  1236                           
  1237                           
  1238                           ; 1 bytes @ 0x11
  1239  005A                     	ds	1
  1240  005B                     Initial_Start@read_data:	
  1241                           
  1242                           ; 1 bytes @ 0x12
  1243  005B                     	ds	1
  1244  005C                     Initial_Start@i:	
  1245                           
  1246                           ; 1 bytes @ 0x13
  1247  005C                     	ds	1
  1248  005D                     ??_main:	
  1249  005D                     main@tempvar1:	
  1250                           ; 1 bytes @ 0x14
  1251                           
  1252                           
  1253                           ; 1 bytes @ 0x14
  1254  005D                     	ds	1
  1255                           
  1256                           	psect	maintext
  1257  047D                     __pmaintext:	
  1258 ;;
  1259 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1260 ;;
  1261 ;; *************** function _main *****************
  1262 ;; Defined at:
  1263 ;;		line 606 in file "main.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;		None
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  tempvar1        1   20[BANK0 ] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : B00/0
  1274 ;;		On exit  : 100/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1
  1277 ;;      Params:         0       0       0
  1278 ;;      Locals:         0       1       0
  1279 ;;      Temps:          0       0       0
  1280 ;;      Totals:         0       1       0
  1281 ;;Total ram usage:        1 bytes
  1282 ;; Hardware stack levels required when called:    7
  1283 ;; This function calls:
  1284 ;;		_ConfigureOscillator
  1285 ;;		_INC_EEPROM_MODE
  1286 ;;		_InitApp
  1287 ;;		_Initial_Start
  1288 ;;		_ReWriteEEPROM
  1289 ;;		_SetOUTPUT
  1290 ;;		_Update_ComboPattern_Index
  1291 ;;		_Update_Input_Mode_Type
  1292 ;; This function is called by:
  1293 ;;		Startup code after reset
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           
  1298                           ;psect for function _main
  1299  047D                     _main:	
  1300                           
  1301                           ;main.c: 608: unsigned char tempvar1;
  1302                           ;main.c: 610: ConfigureOscillator();
  1303                           
  1304                           ;incstack = 0
  1305                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1306  047D  276E               	fcall	_ConfigureOscillator
  1307                           
  1308                           ;main.c: 612: InitApp();
  1309  047E  2639               	fcall	_InitApp
  1310                           
  1311                           ;main.c: 613: Initial_Start();
  1312  047F  2661               	fcall	_Initial_Start
  1313                           
  1314                           ;main.c: 614: bGLOBAL_ENABLE_LEDS = 1;
  1315  0480  3001               	movlw	1
  1316  0481  00A9               	movwf	_bGLOBAL_ENABLE_LEDS	;volatile
  1317  0482                     l2525:	
  1318                           
  1319                           ;main.c: 617: {
  1320                           ;main.c: 618: if (!bGLOBAL_IS_PROGRAMMING)
  1321  0482  082A               	movf	_bGLOBAL_IS_PROGRAMMING,w	;volatile
  1322  0483  1903               	btfsc	3,2
  1323  0484  0064               	clrwdt	;# 
  1324                           
  1325                           ;main.c: 623: Update_Input_Mode_Type();
  1326  0485  272B               	fcall	_Update_Input_Mode_Type
  1327                           
  1328                           ;main.c: 624: if ((GLOBAL_SYNC_Line_counter == 9+0) && (!bGLOBAL_SYNC_Line_PRESSED))
  1329  0486  3009               	movlw	9
  1330  0487  0634               	xorwf	_GLOBAL_SYNC_Line_counter,w	;volatile
  1331  0488  1D03               	btfss	3,2
  1332  0489  2C91               	goto	l2541
  1333  048A  0826               	movf	_bGLOBAL_SYNC_Line_PRESSED,w	;volatile
  1334  048B  1D03               	btfss	3,2
  1335  048C  2C91               	goto	l2541
  1336                           
  1337                           ;main.c: 625: {
  1338                           ;main.c: 626: bGLOBAL_SYNC_Line_PRESSED = 1;
  1339  048D  3001               	movlw	1
  1340  048E  00A6               	movwf	_bGLOBAL_SYNC_Line_PRESSED	;volatile
  1341                           
  1342                           ;main.c: 627: bGLOBAL_ENABLE_LEDS = 0;
  1343  048F  01A9               	clrf	_bGLOBAL_ENABLE_LEDS	;volatile
  1344                           
  1345                           ;main.c: 628: SetOUTPUT();
  1346  0490  25A1               	fcall	_SetOUTPUT
  1347  0491                     l2541:	
  1348                           
  1349                           ;main.c: 629: }
  1350                           ;main.c: 630: if (bGLOBAL_SYNC_Line_PRESSED && (!bGLOBAL_IS_PROGRAMMING))
  1351  0491  0826               	movf	_bGLOBAL_SYNC_Line_PRESSED,w	;volatile
  1352  0492  1903               	btfsc	3,2
  1353  0493  2CD4               	goto	l2583
  1354  0494  082A               	movf	_bGLOBAL_IS_PROGRAMMING,w	;volatile
  1355  0495  1D03               	btfss	3,2
  1356  0496  2CD4               	goto	l2583
  1357                           
  1358                           ;main.c: 631: {
  1359                           ;main.c: 632: GLOBAL_Dummy_Counter = 0;
  1360  0497  01BB               	clrf	_GLOBAL_Dummy_Counter	;volatile
  1361  0498  2C9D               	goto	l322
  1362  0499                     l2547:	
  1363  0499  30C7               	movlw	199
  1364  049A  023B               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1365  049B  1803               	btfsc	3,0
  1366  049C  2C9F               	goto	l2549
  1367  049D                     l322:	
  1368                           ;main.c: 633: while ((!(GPIObits.GP4)) && (GLOBAL_Dummy_Counter < 199)) {}
  1369                           
  1370  049D  1E05               	btfss	5,4	;volatile
  1371  049E  2C99               	goto	l2547
  1372  049F                     l2549:	
  1373                           
  1374                           ;main.c: 634: tempvar1 = GLOBAL_Dummy_Counter;
  1375  049F  083B               	movf	_GLOBAL_Dummy_Counter,w	;volatile
  1376  04A0  00DD               	movwf	main@tempvar1
  1377  04A1  0064               	clrwdt	;# 
  1378                           
  1379                           ;main.c: 636: if (tempvar1 > 198)
  1380  04A2  30C7               	movlw	199
  1381  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  1382  04A4  025D               	subwf	main@tempvar1,w
  1383  04A5  1C03               	skipc
  1384  04A6  2CBE               	goto	l2567
  1385                           
  1386                           ;main.c: 637: {
  1387                           ;main.c: 638: GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type] = 0;
  1388  04A7  0837               	movf	_GLOBAL_Selected_Mode_Type,w
  1389  04A8  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  1390  04A9  0084               	movwf	4
  1391  04AA  1383               	bcf	3,7	;select IRP bank0
  1392  04AB  0180               	clrf	0
  1393                           
  1394                           ;main.c: 639: bGLOBAL_CHANGING_PATTERN = 0;
  1395  04AC  01AC               	clrf	_bGLOBAL_CHANGING_PATTERN	;volatile
  1396                           
  1397                           ;main.c: 640: bGLOBAL_InPhase = !bGLOBAL_InPhase;
  1398  04AD  0840               	movf	_bGLOBAL_InPhase,w	;volatile
  1399  04AE  1D03               	btfss	3,2
  1400  04AF  2CB2               	goto	u2790
  1401  04B0  3001               	movlw	1
  1402  04B1  2CB3               	goto	u2800
  1403  04B2                     u2790:	
  1404  04B2  3000               	movlw	0
  1405  04B3                     u2800:	
  1406  04B3  00C0               	movwf	_bGLOBAL_InPhase	;volatile
  1407                           
  1408                           ;main.c: 641: bGLOBAL_InPhase_copy[GLOBAL_Selected_Mode_Type] = bGLOBAL_InPhase;
  1409  04B4  0837               	movf	_GLOBAL_Selected_Mode_Type,w
  1410  04B5  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  1411  04B6  0084               	movwf	4
  1412  04B7  0840               	movf	_bGLOBAL_InPhase,w	;volatile
  1413  04B8  0080               	movwf	0
  1414                           
  1415                           ;main.c: 642: bGLOBAL_IS_PROGRAMMING = 1;
  1416  04B9  3001               	movlw	1
  1417  04BA  00AA               	movwf	_bGLOBAL_IS_PROGRAMMING	;volatile
  1418                           
  1419                           ;main.c: 643: SetOUTPUT();
  1420  04BB  25A1               	fcall	_SetOUTPUT
  1421                           
  1422                           ;main.c: 644: ReWriteEEPROM();
  1423  04BC  26F2               	fcall	_ReWriteEEPROM
  1424                           
  1425                           ;main.c: 645: Update_ComboPattern_Index();
  1426  04BD  2505               	fcall	_Update_ComboPattern_Index
  1427  04BE                     l2567:	
  1428                           
  1429                           ;main.c: 646: }
  1430                           ;main.c: 647: if (tempvar1 < 199)
  1431  04BE  30C7               	movlw	199
  1432  04BF  025D               	subwf	main@tempvar1,w
  1433  04C0  1803               	skipnc
  1434  04C1  2CD4               	goto	l2583
  1435                           
  1436                           ;main.c: 648: {
  1437                           ;main.c: 649: GLOBAL_Dummy_Counter = 0;
  1438  04C2  01BB               	clrf	_GLOBAL_Dummy_Counter	;volatile
  1439  04C3  2CC8               	goto	l329
  1440  04C4                     l2571:	
  1441  04C4  3002               	movlw	2
  1442  04C5  023B               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1443  04C6  1803               	btfsc	3,0
  1444  04C7  2CCA               	goto	l2573
  1445  04C8                     l329:	
  1446                           ;main.c: 650: while ((GPIObits.GP4) && GLOBAL_Dummy_Counter < 2) {}
  1447                           
  1448  04C8  1A05               	btfsc	5,4	;volatile
  1449  04C9  2CC4               	goto	l2571
  1450  04CA                     l2573:	
  1451                           
  1452                           ;main.c: 651: if (GLOBAL_Dummy_Counter > 1)
  1453  04CA  3002               	movlw	2
  1454  04CB  023B               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1455  04CC  1C03               	skipc
  1456  04CD  2CD4               	goto	l2583
  1457                           
  1458                           ;main.c: 652: {
  1459                           ;main.c: 653: bGLOBAL_CHANGING_PATTERN = 1;
  1460  04CE  3001               	movlw	1
  1461  04CF  00AC               	movwf	_bGLOBAL_CHANGING_PATTERN	;volatile
  1462                           
  1463                           ;main.c: 654: INC_EEPROM_MODE();
  1464  04D0  2688               	fcall	_INC_EEPROM_MODE
  1465                           
  1466                           ;main.c: 655: GLOBAL_Dummy_Counter = 0;
  1467  04D1  01BB               	clrf	_GLOBAL_Dummy_Counter	;volatile
  1468                           
  1469                           ;main.c: 656: bGLOBAL_IS_PROGRAMMING = 1;
  1470  04D2  3001               	movlw	1
  1471  04D3  00AA               	movwf	_bGLOBAL_IS_PROGRAMMING	;volatile
  1472  04D4                     l2583:	
  1473                           
  1474                           ;main.c: 657: }
  1475                           ;main.c: 658: }
  1476                           ;main.c: 659: }
  1477                           ;main.c: 661: if (((GLOBAL_SYNC_Line_LOW_counter > 3) || (GLOBAL_Dummy_Counter > 4)) && 
      +                          (!bGLOBAL_CHANGING_PATTERN_Enforce) && bGLOBAL_CHANGING_PATTERN)
  1478  04D4  3004               	movlw	4
  1479  04D5  0231               	subwf	_GLOBAL_SYNC_Line_LOW_counter,w	;volatile
  1480  04D6  1803               	skipnc
  1481  04D7  2CDC               	goto	l2587
  1482  04D8  3005               	movlw	5
  1483  04D9  023B               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1484  04DA  1C03               	skipc
  1485  04DB  2CE6               	goto	l2597
  1486  04DC                     l2587:	
  1487  04DC  082B               	movf	_bGLOBAL_CHANGING_PATTERN_Enforce,w	;volatile
  1488  04DD  1D03               	btfss	3,2
  1489  04DE  2CE6               	goto	l2597
  1490  04DF  082C               	movf	_bGLOBAL_CHANGING_PATTERN,w	;volatile
  1491  04E0  1903               	btfsc	3,2
  1492  04E1  2CE6               	goto	l2597
  1493                           
  1494                           ;main.c: 662: {
  1495                           ;main.c: 663: bGLOBAL_CHANGING_PATTERN_Enforce = 1;
  1496  04E2  3001               	movlw	1
  1497  04E3  00AB               	movwf	_bGLOBAL_CHANGING_PATTERN_Enforce	;volatile
  1498                           
  1499                           ;main.c: 664: GLOBAL_Dummy_Counter = 0;
  1500  04E4  01BB               	clrf	_GLOBAL_Dummy_Counter	;volatile
  1501                           
  1502                           ;main.c: 665: (GPIObits.GP5) = 1;
  1503  04E5  1685               	bsf	5,5	;volatile
  1504  04E6                     l2597:	
  1505                           
  1506                           ;main.c: 666: }
  1507                           ;main.c: 668: if (bGLOBAL_CHANGING_PATTERN_Enforce && (GLOBAL_Dummy_Counter > 12))
  1508  04E6  082B               	movf	_bGLOBAL_CHANGING_PATTERN_Enforce,w	;volatile
  1509  04E7  1903               	btfsc	3,2
  1510  04E8  2CF1               	goto	l2607
  1511  04E9  300D               	movlw	13
  1512  04EA  023B               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1513  04EB  1C03               	skipc
  1514  04EC  2CF1               	goto	l2607
  1515                           
  1516                           ;main.c: 669: {
  1517                           ;main.c: 670: GLOBAL_Dummy_Counter = 0;
  1518  04ED  01BB               	clrf	_GLOBAL_Dummy_Counter	;volatile
  1519                           
  1520                           ;main.c: 671: bGLOBAL_DISABLE_SYNC_Line_PRESSED = 1;
  1521  04EE  3001               	movlw	1
  1522  04EF  00AD               	movwf	_bGLOBAL_DISABLE_SYNC_Line_PRESSED	;volatile
  1523                           
  1524                           ;main.c: 672: (GPIObits.GP5) = 0;
  1525  04F0  1285               	bcf	5,5	;volatile
  1526  04F1                     l2607:	
  1527                           
  1528                           ;main.c: 673: }
  1529                           ;main.c: 675: if (bGLOBAL_DISABLE_SYNC_Line_PRESSED)
  1530  04F1  082D               	movf	_bGLOBAL_DISABLE_SYNC_Line_PRESSED,w	;volatile
  1531  04F2  1903               	btfsc	3,2
  1532  04F3  2CFC               	goto	l2617
  1533                           
  1534                           ;main.c: 676: {
  1535                           ;main.c: 677: if (!(GPIObits.GP4))
  1536  04F4  1A05               	btfsc	5,4	;volatile
  1537  04F5  2CF8               	goto	l2613
  1538                           
  1539                           ;main.c: 678: {
  1540                           ;main.c: 679: GLOBAL_Dummy_Counter = 0;
  1541  04F6  01BB               	clrf	_GLOBAL_Dummy_Counter	;volatile
  1542                           
  1543                           ;main.c: 680: GLOBAL_SYNC_Line_counter = 0;
  1544  04F7  01B4               	clrf	_GLOBAL_SYNC_Line_counter	;volatile
  1545  04F8                     l2613:	
  1546                           
  1547                           ;main.c: 681: }
  1548                           ;main.c: 682: if (GLOBAL_Dummy_Counter > 7 + 3)
  1549  04F8  300B               	movlw	11
  1550  04F9  023B               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1551  04FA  1803               	btfsc	3,0
  1552                           
  1553                           ;main.c: 683: bGLOBAL_DISABLE_SYNC_Line_PRESSED = 0;
  1554  04FB  01AD               	clrf	_bGLOBAL_DISABLE_SYNC_Line_PRESSED	;volatile
  1555  04FC                     l2617:	
  1556                           
  1557                           ;main.c: 684: }
  1558                           ;main.c: 686: if (!bGLOBAL_SYNC_Line_PRESSED)
  1559  04FC  0826               	movf	_bGLOBAL_SYNC_Line_PRESSED,w	;volatile
  1560  04FD  1D03               	btfss	3,2
  1561  04FE  2C82               	goto	l2525
  1562                           
  1563                           ;main.c: 687: {
  1564                           ;main.c: 688: bGLOBAL_ENABLE_LEDS = 1;
  1565  04FF  3001               	movlw	1
  1566  0500  00A9               	movwf	_bGLOBAL_ENABLE_LEDS	;volatile
  1567                           
  1568                           ;main.c: 689: bGLOBAL_CHANGING_PATTERN = 0;
  1569  0501  01AC               	clrf	_bGLOBAL_CHANGING_PATTERN	;volatile
  1570                           
  1571                           ;main.c: 690: bGLOBAL_CHANGING_PATTERN_Enforce = 0;
  1572  0502  01AB               	clrf	_bGLOBAL_CHANGING_PATTERN_Enforce	;volatile
  1573                           
  1574                           ;main.c: 691: bGLOBAL_IS_PROGRAMMING = 0;
  1575  0503  01AA               	clrf	_bGLOBAL_IS_PROGRAMMING	;volatile
  1576  0504  2C82               	goto	l2525
  1577  0505                     __end_of_main:	
  1578                           
  1579                           	psect	text1
  1580  05A1                     __ptext1:	
  1581 ;; *************** function _SetOUTPUT *****************
  1582 ;; Defined at:
  1583 ;;		line 314 in file "main.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1592 ;; Tracked objects:
  1593 ;;		On entry : 900/0
  1594 ;;		On exit  : 900/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1
  1597 ;;      Params:         0       0       0
  1598 ;;      Locals:         0       0       0
  1599 ;;      Temps:          0       0       0
  1600 ;;      Totals:         0       0       0
  1601 ;;Total ram usage:        0 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; Hardware stack levels required when called:    2
  1604 ;; This function calls:
  1605 ;;		Nothing
  1606 ;; This function is called by:
  1607 ;;		_main
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           
  1612                           ;psect for function _SetOUTPUT
  1613  05A1                     _SetOUTPUT:	
  1614                           
  1615                           ;main.c: 316: static unsigned char temporaryGPIO = 0x00;
  1616                           ;main.c: 317: static unsigned char pwmCounter = 0;
  1617                           ;main.c: 319: if (bGLOBAL_ENABLE_LEDS)
  1618                           
  1619                           ;incstack = 0
  1620                           ; Regs used in _SetOUTPUT: [wreg-fsr0h+status,2+status,0]
  1621  05A1  0829               	movf	_bGLOBAL_ENABLE_LEDS,w	;volatile
  1622  05A2  1903               	btfsc	3,2
  1623  05A3  2DD0               	goto	l1643
  1624                           
  1625                           ;main.c: 320: {
  1626                           ;main.c: 321: if(bDualColor == 1)
  1627  05A4  0B3F               	decfsz	_bDualColor,w	;volatile
  1628  05A5  2DAA               	goto	l1609
  1629                           
  1630                           ;main.c: 322: {
  1631                           ;main.c: 323: temporaryGPIO = OUTPUT_BUFFER & GLOBAL_CHANNELS_EN_DUAL;
  1632  05A6  0874               	movf	_OUTPUT_BUFFER,w	;volatile
  1633  05A7  00A5               	movwf	SetOUTPUT@temporaryGPIO
  1634  05A8  083E               	movf	_GLOBAL_CHANNELS_EN_DUAL,w	;volatile
  1635  05A9  2DAD               	goto	L1
  1636  05AA                     l1609:	
  1637                           ;main.c: 324: }
  1638                           
  1639                           
  1640                           ;main.c: 325: else
  1641                           ;main.c: 326: {
  1642                           ;main.c: 327: temporaryGPIO = OUTPUT_BUFFER & GLOBAL_CHANNELS_EN;
  1643  05AA  0874               	movf	_OUTPUT_BUFFER,w	;volatile
  1644  05AB  00A5               	movwf	SetOUTPUT@temporaryGPIO
  1645  05AC  082F               	movf	_GLOBAL_CHANNELS_EN,w	;volatile
  1646  05AD                     L1:	
  1647  05AD  05A5               	andwf	SetOUTPUT@temporaryGPIO,f
  1648                           
  1649                           ;main.c: 328: }
  1650                           ;main.c: 332: if(bDualColor == 1)
  1651  05AE  0B3F               	decfsz	_bDualColor,w	;volatile
  1652  05AF  2DB1               	goto	l1625
  1653                           
  1654                           ;main.c: 333: {
  1655                           ;main.c: 334: if(channelToBeDisplayed == 0)
  1656  05B0  0872               	movf	_channelToBeDisplayed,w	;volatile
  1657  05B1                     l1625:	
  1658                           
  1659                           ;main.c: 354: }
  1660                           ;main.c: 355: }
  1661                           ;main.c: 357: if((GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type] == 39-1)|| (GLOBAL_Mode_co
      +                          py[GLOBAL_Selected_Mode_Type] == 39-4))
  1662  05B1  0837               	movf	_GLOBAL_Selected_Mode_Type,w
  1663  05B2  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  1664  05B3  0084               	movwf	4
  1665  05B4  3026               	movlw	38
  1666  05B5  0600               	xorwf	0,w
  1667  05B6  1903               	btfsc	3,2
  1668  05B7  2DBF               	goto	l1629
  1669  05B8  0837               	movf	_GLOBAL_Selected_Mode_Type,w
  1670  05B9  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  1671  05BA  0084               	movwf	4
  1672  05BB  3023               	movlw	35
  1673  05BC  0600               	xorwf	0,w
  1674  05BD  1D03               	btfss	3,2
  1675  05BE  2DCD               	goto	l1641
  1676  05BF                     l1629:	
  1677  05BF  3004               	movlw	4
  1678                           
  1679                           ;main.c: 358: {
  1680                           ;main.c: 359: pwmCounter++;
  1681  05C0  0AA4               	incf	SetOUTPUT@pwmCounter,f
  1682                           
  1683                           ;main.c: 360: if(pwmCounter<4)
  1684  05C1  0224               	subwf	SetOUTPUT@pwmCounter,w
  1685  05C2  1803               	skipnc
  1686  05C3  2DC7               	goto	l1635
  1687                           
  1688                           ;main.c: 361: {
  1689                           ;main.c: 362: GPIO = temporaryGPIO;
  1690  05C4  0825               	movf	SetOUTPUT@temporaryGPIO,w
  1691  05C5  0085               	movwf	5	;volatile
  1692                           
  1693                           ;main.c: 363: }
  1694  05C6  2DC8               	goto	l1637
  1695  05C7                     l1635:	
  1696                           
  1697                           ;main.c: 364: else
  1698                           ;main.c: 365: {
  1699                           ;main.c: 366: GPIO = 0;
  1700  05C7  0185               	clrf	5	;volatile
  1701  05C8                     l1637:	
  1702                           
  1703                           ;main.c: 367: }
  1704                           ;main.c: 369: if(pwmCounter>10)
  1705  05C8  300B               	movlw	11
  1706  05C9  0224               	subwf	SetOUTPUT@pwmCounter,w
  1707  05CA  1803               	btfsc	3,0
  1708                           
  1709                           ;main.c: 370: {
  1710                           ;main.c: 371: pwmCounter = 0;
  1711  05CB  01A4               	clrf	SetOUTPUT@pwmCounter
  1712  05CC  0008               	return
  1713  05CD                     l1641:	
  1714                           
  1715                           ;main.c: 374: else
  1716                           ;main.c: 375: {
  1717                           ;main.c: 376: GPIO = temporaryGPIO;
  1718  05CD  0825               	movf	SetOUTPUT@temporaryGPIO,w
  1719  05CE  0085               	movwf	5	;volatile
  1720  05CF  0008               	return
  1721  05D0                     l1643:	
  1722                           
  1723                           ;main.c: 379: else
  1724                           ;main.c: 380: {
  1725                           ;main.c: 381: if (bGLOBAL_IS_PROGRAMMING)
  1726  05D0  082A               	movf	_bGLOBAL_IS_PROGRAMMING,w	;volatile
  1727  05D1  1903               	btfsc	3,2
  1728  05D2  2DDF               	goto	l1653
  1729                           
  1730                           ;main.c: 382: {
  1731                           ;main.c: 383: if (!bGLOBAL_CHANGING_PATTERN)
  1732  05D3  082C               	movf	_bGLOBAL_CHANGING_PATTERN,w	;volatile
  1733  05D4  1D03               	btfss	3,2
  1734  05D5  0008               	return
  1735                           
  1736                           ;main.c: 384: {
  1737                           ;main.c: 385: if (bGLOBAL_InPhase)
  1738  05D6  0840               	movf	_bGLOBAL_InPhase,w	;volatile
  1739  05D7  1903               	btfsc	3,2
  1740  05D8  2DDC               	goto	l1651
  1741                           
  1742                           ;main.c: 386: GPIO = 0x23;
  1743  05D9  3023               	movlw	35
  1744  05DA  0085               	movwf	5	;volatile
  1745  05DB  0008               	return
  1746  05DC                     l1651:	
  1747                           
  1748                           ;main.c: 387: else
  1749                           ;main.c: 388: GPIO = 0x21;
  1750  05DC  3021               	movlw	33
  1751  05DD  0085               	movwf	5	;volatile
  1752  05DE  0008               	return
  1753  05DF                     l1653:	
  1754                           
  1755                           ;main.c: 391: {
  1756                           ;main.c: 392: GPIO = 0;
  1757  05DF  0185               	clrf	5	;volatile
  1758  05E0  0008               	return
  1759  05E1                     __end_of_SetOUTPUT:	
  1760                           
  1761                           	psect	text2
  1762  0661                     __ptext2:	
  1763 ;; *************** function _Initial_Start *****************
  1764 ;; Defined at:
  1765 ;;		line 588 in file "main.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;		None
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;  i               1   19[BANK0 ] unsigned char 
  1770 ;;  read_data       1   18[BANK0 ] unsigned char 
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 100/0
  1777 ;;		On exit  : 900/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMMON   BANK0   BANK1
  1780 ;;      Params:         0       0       0
  1781 ;;      Locals:         0       2       0
  1782 ;;      Temps:          0       1       0
  1783 ;;      Totals:         0       3       0
  1784 ;;Total ram usage:        3 bytes
  1785 ;; Hardware stack levels used:    1
  1786 ;; Hardware stack levels required when called:    6
  1787 ;; This function calls:
  1788 ;;		_Update_ComboPattern_Index
  1789 ;;		_Update_Input_Mode_Type
  1790 ;;		_WriteEEPROMDefaults
  1791 ;;		___eetoc
  1792 ;; This function is called by:
  1793 ;;		_main
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           
  1798                           ;psect for function _Initial_Start
  1799  0661                     _Initial_Start:	
  1800                           
  1801                           ;main.c: 590: unsigned char read_data;
  1802                           ;main.c: 591: read_data = EEprom_Written_Flag;
  1803                           
  1804                           ;incstack = 0
  1805                           ; Regs used in _Initial_Start: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1806  0661  3004               	movlw	(low _EEprom_Written_Flag)& (0+255)
  1807  0662  275F               	fcall	___eetoc
  1808  0663  00DB               	movwf	Initial_Start@read_data
  1809                           
  1810                           ;main.c: 592: if (read_data ^ 0xA6)
  1811  0664  3AA6               	xorlw	166
  1812  0665  1903               	btfsc	3,2
  1813  0666  2E68               	goto	l2223
  1814                           
  1815                           ;main.c: 593: WriteEEPROMDefaults();
  1816  0667  2740               	fcall	_WriteEEPROMDefaults
  1817  0668                     l2223:	
  1818                           
  1819                           ;main.c: 594: for (unsigned char i=0;i<2;i++)
  1820  0668  01DC               	clrf	Initial_Start@i
  1821  0669                     l2229:	
  1822                           
  1823                           ;main.c: 595: {
  1824                           ;main.c: 596: GLOBAL_Mode_copy[i] = EEprom_mode[i];
  1825  0669  085C               	movf	Initial_Start@i,w
  1826  066A  3E02               	addlw	low _EEprom_mode
  1827  066B  275F               	fcall	___eetoc
  1828  066C  00DA               	movwf	??_Initial_Start
  1829  066D  085C               	movf	Initial_Start@i,w
  1830  066E  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  1831  066F  0084               	movwf	4
  1832  0670  085A               	movf	??_Initial_Start,w
  1833  0671  1383               	bcf	3,7	;select IRP bank0
  1834  0672  0080               	movwf	0
  1835                           
  1836                           ;main.c: 597: bGLOBAL_InPhase_copy[i] = EEprom_InPhase[i];
  1837  0673  085C               	movf	Initial_Start@i,w
  1838  0674  3E00               	addlw	low _EEprom_InPhase
  1839  0675  275F               	fcall	___eetoc
  1840  0676  00DA               	movwf	??_Initial_Start
  1841  0677  085C               	movf	Initial_Start@i,w
  1842  0678  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  1843  0679  0084               	movwf	4
  1844  067A  085A               	movf	??_Initial_Start,w
  1845  067B  1383               	bcf	3,7	;select IRP bank0
  1846  067C  0080               	movwf	0
  1847  067D  3002               	movlw	2
  1848  067E  0ADC               	incf	Initial_Start@i,f
  1849  067F  025C               	subwf	Initial_Start@i,w
  1850  0680  1C03               	skipc
  1851  0681  2E69               	goto	l2229
  1852  0682                     l2235:	
  1853  0682  3005               	movlw	5
  1854  0683  023B               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1855  0684  1C03               	skipc
  1856  0685  2E82               	goto	l2235
  1857                           
  1858                           ;main.c: 600: Update_Input_Mode_Type();
  1859  0686  272B               	fcall	_Update_Input_Mode_Type
  1860                           
  1861                           ;main.c: 601: Update_ComboPattern_Index();
  1862  0687  2D05               	ljmp	l1491
  1863  0688                     __end_of_Initial_Start:	
  1864                           
  1865                           	psect	text3
  1866  0740                     __ptext3:	
  1867 ;; *************** function _WriteEEPROMDefaults *****************
  1868 ;; Defined at:
  1869 ;;		line 409 in file "main.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;		None
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 100/0
  1880 ;;		On exit  : 100/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMMON   BANK0   BANK1
  1883 ;;      Params:         0       0       0
  1884 ;;      Locals:         0       0       0
  1885 ;;      Temps:          0       0       0
  1886 ;;      Totals:         0       0       0
  1887 ;;Total ram usage:        0 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; Hardware stack levels required when called:    5
  1890 ;; This function calls:
  1891 ;;		_ReWriteEEPROM
  1892 ;;		___eetoc
  1893 ;; This function is called by:
  1894 ;;		_Initial_Start
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           
  1899                           ;psect for function _WriteEEPROMDefaults
  1900  0740                     _WriteEEPROMDefaults:	
  1901                           
  1902                           ;main.c: 411: GLOBAL_Mode_copy[0] = 0;
  1903                           
  1904                           ;incstack = 0
  1905                           ; Regs used in _WriteEEPROMDefaults: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1906  0740  01A2               	clrf	_GLOBAL_Mode_copy	;volatile
  1907                           
  1908                           ;main.c: 412: GLOBAL_Mode_copy[1] = 18;
  1909  0741  3012               	movlw	18
  1910  0742  00A3               	movwf	_GLOBAL_Mode_copy+1	;volatile
  1911                           
  1912                           ;main.c: 414: bGLOBAL_InPhase_copy[0] = 1;
  1913  0743  3001               	movlw	1
  1914  0744  00A0               	movwf	_bGLOBAL_InPhase_copy	;volatile
  1915                           
  1916                           ;main.c: 415: bGLOBAL_InPhase_copy[1] = 1;
  1917  0745  00A1               	movwf	_bGLOBAL_InPhase_copy+1	;volatile
  1918                           
  1919                           ;main.c: 418: ReWriteEEPROM();
  1920  0746  26F2               	fcall	_ReWriteEEPROM
  1921                           
  1922                           ;main.c: 420: if (EEprom_Written_Flag != 0xA6)
  1923  0747  3004               	movlw	(low _EEprom_Written_Flag)& (0+255)
  1924  0748  275F               	fcall	___eetoc
  1925  0749  3AA6               	xorlw	166
  1926  074A  1903               	skipnz
  1927  074B  0008               	return
  1928  074C                     l257:	
  1929                           ;main.c: 421: while (1) {}
  1930                           
  1931  074C  2F4C               	goto	l257
  1932  074D                     __end_of_WriteEEPROMDefaults:	
  1933                           
  1934                           	psect	text4
  1935  075F                     __ptext4:	
  1936 ;; *************** function ___eetoc *****************
  1937 ;; Defined at:
  1938 ;;		line 96 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eeprom.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  addr            1    wreg     PTR eeprom void 
  1941 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  addr            1   14[BANK0 ] PTR eeprom void 
  1944 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  1945 ;;  data            1   15[BANK0 ] unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      unsigned char 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 100/0
  1952 ;;		On exit  : 100/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1
  1955 ;;      Params:         0       0       0
  1956 ;;      Locals:         0       2       0
  1957 ;;      Temps:          0       0       0
  1958 ;;      Totals:         0       2       0
  1959 ;;Total ram usage:        2 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    3
  1962 ;; This function calls:
  1963 ;;		_eecpymem
  1964 ;; This function is called by:
  1965 ;;		_WriteEEPROMDefaults
  1966 ;;		_Initial_Start
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           
  1971                           ;psect for function ___eetoc
  1972  075F                     ___eetoc:	
  1973                           
  1974                           ;incstack = 0
  1975                           ; Regs used in ___eetoc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1976                           ;___eetoc@addr stored from wreg
  1977  075F  00D7               	movwf	___eetoc@addr
  1978  0760  00D3               	movwf	eecpymem@from
  1979  0761  3058               	movlw	(low (___eetoc@data| 0))& (0+255)
  1980  0762  01D4               	clrf	eecpymem@size
  1981  0763  0AD4               	incf	eecpymem@size,f
  1982  0764  26D2               	fcall	_eecpymem
  1983  0765  0858               	movf	___eetoc@data,w
  1984  0766  0008               	return
  1985  0767                     __end_of___eetoc:	
  1986                           
  1987                           	psect	text5
  1988  06D2                     __ptext5:	
  1989 ;; *************** function _eecpymem *****************
  1990 ;; Defined at:
  1991 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eeprom.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  to              1    wreg     PTR volatile unsigned ch
  1994 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetol@data(4), __eetom@data(3), 
  1995 ;;		 -> __eetoi@data(2), __eetoc@data(1), 
  1996 ;;  from            1   10[BANK0 ] PTR eeprom unsigned char
  1997 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  1998 ;;  size            1   11[BANK0 ] unsigned char 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  to              1   13[BANK0 ] PTR volatile unsigned ch
  2001 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetol@data(4), __eetom@data(3), 
  2002 ;;		 -> __eetoi@data(2), __eetoc@data(1), 
  2003 ;;  cp              1   12[BANK0 ] PTR volatile unsigned ch
  2004 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetol@data(4), __eetom@data(3), 
  2005 ;;		 -> __eetoi@data(2), __eetoc@data(1), 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  1    wreg      void 
  2008 ;; Registers used:
  2009 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2010 ;; Tracked objects:
  2011 ;;		On entry : 100/0
  2012 ;;		On exit  : 100/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1
  2015 ;;      Params:         0       2       0
  2016 ;;      Locals:         0       2       0
  2017 ;;      Temps:          0       0       0
  2018 ;;      Totals:         0       4       0
  2019 ;;Total ram usage:        4 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; Hardware stack levels required when called:    2
  2022 ;; This function calls:
  2023 ;;		Nothing
  2024 ;; This function is called by:
  2025 ;;		___eetoc
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           
  2030                           ;psect for function _eecpymem
  2031  06D2                     _eecpymem:	
  2032                           
  2033                           ;incstack = 0
  2034                           ; Regs used in _eecpymem: [wreg-fsr0h+status,2+status,0]
  2035                           ;eecpymem@to stored from wreg
  2036  06D2  00D6               	movwf	eecpymem@to
  2037  06D3  0856               	movf	eecpymem@to,w
  2038  06D4  00D5               	movwf	eecpymem@cp
  2039  06D5                     l407:	
  2040  06D5  1683               	bsf	3,5	;RP0=1, select bank1
  2041  06D6  189C               	btfsc	28,1	;volsfr
  2042  06D7  2ED5               	goto	l407
  2043  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  2044  06D9  0853               	movf	eecpymem@from,w
  2045  06DA  1683               	bsf	3,5	;RP0=1, select bank1
  2046  06DB  009B               	movwf	27	;volatile
  2047  06DC                     l2147:	
  2048  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  2049  06DD  03D4               	decf	eecpymem@size,f
  2050  06DE  0F54               	incfsz	eecpymem@size,w
  2051  06DF  2EE1               	goto	l412
  2052  06E0  0008               	return
  2053  06E1                     l412:	
  2054  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  2055  06E2  189C               	btfsc	28,1	;volsfr
  2056  06E3  2EE1               	goto	l412
  2057  06E4  139C               	bcf	28,7	;volsfr
  2058  06E5  141C               	bsf	28,0	;volsfr
  2059  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  2060  06E7  0855               	movf	eecpymem@cp,w
  2061  06E8  0084               	movwf	4
  2062  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  2063  06EA  081A               	movf	26,w	;volatile
  2064  06EB  1383               	bcf	3,7	;select IRP bank0
  2065  06EC  0080               	movwf	0
  2066  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  2067  06EE  0AD5               	incf	eecpymem@cp,f
  2068  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  2069  06F0  0A9B               	incf	27,f	;volatile
  2070  06F1  2EDC               	goto	l2147
  2071  06F2                     __end_of_eecpymem:	
  2072                           
  2073                           	psect	text6
  2074  072B                     __ptext6:	
  2075 ;; *************** function _Update_Input_Mode_Type *****************
  2076 ;; Defined at:
  2077 ;;		line 575 in file "main.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;		None
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;		None
  2082 ;; Return value:  Size  Location     Type
  2083 ;;                  1    wreg      void 
  2084 ;; Registers used:
  2085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2086 ;; Tracked objects:
  2087 ;;		On entry : 0/0
  2088 ;;		On exit  : 900/0
  2089 ;;		Unchanged: 0/0
  2090 ;; Data sizes:     COMMON   BANK0   BANK1
  2091 ;;      Params:         0       0       0
  2092 ;;      Locals:         0       0       0
  2093 ;;      Temps:          0       0       0
  2094 ;;      Totals:         0       0       0
  2095 ;;Total ram usage:        0 bytes
  2096 ;; Hardware stack levels used:    1
  2097 ;; Hardware stack levels required when called:    3
  2098 ;; This function calls:
  2099 ;;		_Update_ComboPattern_Index
  2100 ;; This function is called by:
  2101 ;;		_Initial_Start
  2102 ;;		_main
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           
  2107                           ;psect for function _Update_Input_Mode_Type
  2108  072B                     _Update_Input_Mode_Type:	
  2109                           
  2110                           ;main.c: 577: GLOBAL_Selected_Mode_Type = 0;
  2111                           
  2112                           ;incstack = 0
  2113                           ; Regs used in _Update_Input_Mode_Type: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2114  072B  1283               	bcf	3,5	;RP0=0, select bank0
  2115  072C  01B7               	clrf	_GLOBAL_Selected_Mode_Type	;volatile
  2116                           
  2117                           ;main.c: 578: if (bGLOBAL_MODE1_PRESSED)
  2118  072D  0828               	movf	_bGLOBAL_MODE1_PRESSED,w	;volatile
  2119  072E  1903               	btfsc	3,2
  2120  072F  2F32               	goto	l302
  2121                           
  2122                           ;main.c: 579: GLOBAL_Selected_Mode_Type = 1;
  2123  0730  3001               	movlw	1
  2124  0731  00B7               	movwf	_GLOBAL_Selected_Mode_Type	;volatile
  2125  0732                     l302:	
  2126                           
  2127                           ;main.c: 582: if (GLOBAL_Selected_Mode_Type_copy != GLOBAL_Selected_Mode_Type)
  2128  0732  0836               	movf	_GLOBAL_Selected_Mode_Type_copy,w	;volatile
  2129  0733  0637               	xorwf	_GLOBAL_Selected_Mode_Type,w	;volatile
  2130  0734  1903               	skipnz
  2131  0735  2F37               	goto	l1597
  2132                           
  2133                           ;main.c: 583: Update_ComboPattern_Index();
  2134  0736  2505               	fcall	_Update_ComboPattern_Index
  2135  0737                     l1597:	
  2136                           
  2137                           ;main.c: 584: bGLOBAL_InPhase = bGLOBAL_InPhase_copy[GLOBAL_Selected_Mode_Type];
  2138  0737  0837               	movf	_GLOBAL_Selected_Mode_Type,w
  2139  0738  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  2140  0739  0084               	movwf	4
  2141  073A  1383               	bcf	3,7	;select IRP bank0
  2142  073B  0800               	movf	0,w
  2143  073C  00C0               	movwf	_bGLOBAL_InPhase	;volatile
  2144                           
  2145                           ;main.c: 585: GLOBAL_Selected_Mode_Type_copy = GLOBAL_Selected_Mode_Type;
  2146  073D  0837               	movf	_GLOBAL_Selected_Mode_Type,w	;volatile
  2147  073E  00B6               	movwf	_GLOBAL_Selected_Mode_Type_copy	;volatile
  2148  073F  0008               	return
  2149  0740                     __end_of_Update_Input_Mode_Type:	
  2150                           
  2151                           	psect	text7
  2152  0639                     __ptext7:	
  2153 ;; *************** function _InitApp *****************
  2154 ;; Defined at:
  2155 ;;		line 22 in file "user.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;		None
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;		None
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		wreg, status,2, status,0, pclath, cstack
  2164 ;; Tracked objects:
  2165 ;;		On entry : B00/100
  2166 ;;		On exit  : 100/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1
  2169 ;;      Params:         0       0       0
  2170 ;;      Locals:         0       0       0
  2171 ;;      Temps:          0       0       0
  2172 ;;      Totals:         0       0       0
  2173 ;;Total ram usage:        0 bytes
  2174 ;; Hardware stack levels used:    1
  2175 ;; Hardware stack levels required when called:    3
  2176 ;; This function calls:
  2177 ;;		_WaitForSYNC_PU
  2178 ;; This function is called by:
  2179 ;;		_main
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           
  2184                           ;psect for function _InitApp
  2185  0639                     _InitApp:	
  2186                           
  2187                           ;user.c: 32: WDTCON = 0x17;
  2188                           
  2189                           ;incstack = 0
  2190                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
  2191  0639  3017               	movlw	23
  2192  063A  1283               	bcf	3,5	;RP0=0, select bank0
  2193  063B  0098               	movwf	24	;volatile
  2194                           
  2195                           ;user.c: 33: OPTION_REGbits.nGPPU = 0;
  2196  063C  1683               	bsf	3,5	;RP0=1, select bank1
  2197  063D  1381               	bcf	1,7	;volatile
  2198                           
  2199                           ;user.c: 34: WPU = 0x10;
  2200  063E  3010               	movlw	16
  2201  063F  0095               	movwf	21	;volatile
  2202                           
  2203                           ;user.c: 35: GPIO = 0;
  2204  0640  1283               	bcf	3,5	;RP0=0, select bank0
  2205  0641  0185               	clrf	5	;volatile
  2206                           
  2207                           ;user.c: 36: CMCON0 = 0x07;
  2208  0642  3007               	movlw	7
  2209  0643  0099               	movwf	25	;volatile
  2210                           
  2211                           ;user.c: 37: ANSEL = 0;
  2212  0644  1683               	bsf	3,5	;RP0=1, select bank1
  2213  0645  019F               	clrf	31	;volatile
  2214                           
  2215                           ;user.c: 38: TRISIO = ~(0x1 + 0x2 + 0x20);
  2216  0646  30DC               	movlw	220
  2217  0647  0085               	movwf	5	;volatile
  2218                           
  2219                           ;user.c: 39: bGLOBAL_ENABLE_LEDS = 0;
  2220  0648  1283               	bcf	3,5	;RP0=0, select bank0
  2221  0649  01A9               	clrf	_bGLOBAL_ENABLE_LEDS	;volatile
  2222                           
  2223                           ;user.c: 41: OPTION_REGbits.T0CS = 0;
  2224  064A  1683               	bsf	3,5	;RP0=1, select bank1
  2225  064B  1281               	bcf	1,5	;volatile
  2226                           
  2227                           ;user.c: 42: OPTION_REGbits.PS = 0x3;
  2228  064C  0801               	movf	1,w	;volatile
  2229  064D  39F8               	andlw	-8
  2230  064E  3803               	iorlw	3
  2231  064F  0081               	movwf	1	;volatile
  2232                           
  2233                           ;user.c: 43: OPTION_REGbits.PSA = 0;
  2234  0650  1181               	bcf	1,3	;volatile
  2235  0651  0064               	clrwdt	;# 
  2236                           
  2237                           ;user.c: 47: WaitForSYNC_PU();
  2238  0652  274D               	fcall	_WaitForSYNC_PU
  2239                           
  2240                           ;user.c: 48: WPU = 0x00;
  2241  0653  1683               	bsf	3,5	;RP0=1, select bank1
  2242  0654  0195               	clrf	21	;volatile
  2243                           
  2244                           ;user.c: 49: TRISIObits.TRISIO4 = 0;
  2245  0655  1205               	bcf	5,4	;volatile
  2246                           
  2247                           ;user.c: 50: GPIO = 0;
  2248  0656  1283               	bcf	3,5	;RP0=0, select bank0
  2249  0657  0185               	clrf	5	;volatile
  2250                           
  2251                           ;user.c: 51: TRISIObits.TRISIO4 = 1;
  2252  0658  1683               	bsf	3,5	;RP0=1, select bank1
  2253  0659  1605               	bsf	5,4	;volatile
  2254                           
  2255                           ;user.c: 52: WaitForSYNC_PU();
  2256  065A  274D               	fcall	_WaitForSYNC_PU
  2257                           
  2258                           ;user.c: 53: TMR0 = 131;
  2259  065B  3083               	movlw	131
  2260  065C  0081               	movwf	1	;volatile
  2261                           
  2262                           ;user.c: 54: INTCONbits.TMR0IF = 0;
  2263  065D  110B               	bcf	11,2	;volatile
  2264                           
  2265                           ;user.c: 55: INTCON = 0x20 + 0x80;
  2266  065E  30A0               	movlw	160
  2267  065F  008B               	movwf	11	;volatile
  2268  0660  0008               	return
  2269  0661                     __end_of_InitApp:	
  2270                           
  2271                           	psect	text8
  2272  074D                     __ptext8:	
  2273 ;; *************** function _WaitForSYNC_PU *****************
  2274 ;; Defined at:
  2275 ;;		line 397 in file "main.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;		None
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  temp001         1   10[BANK0 ] unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      void 
  2282 ;; Registers used:
  2283 ;;		wreg, status,2, status,0
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/100
  2286 ;;		On exit  : 100/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMMON   BANK0   BANK1
  2289 ;;      Params:         0       0       0
  2290 ;;      Locals:         0       1       0
  2291 ;;      Temps:          0       0       0
  2292 ;;      Totals:         0       1       0
  2293 ;;Total ram usage:        1 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:    2
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_InitApp
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           
  2304                           ;psect for function _WaitForSYNC_PU
  2305  074D                     _WaitForSYNC_PU:	
  2306  074D                     l2175:	
  2307                           ;incstack = 0
  2308                           ; Regs used in _WaitForSYNC_PU: [wreg+status,2+status,0]
  2309                           
  2310                           
  2311                           ;main.c: 399: unsigned char temp001 = 0;
  2312  074D  1283               	bcf	3,5	;RP0=0, select bank0
  2313  074E  01D3               	clrf	WaitForSYNC_PU@temp001
  2314  074F                     l2181:	
  2315                           ;main.c: 400: while(temp001 < 250)
  2316                           
  2317  074F  30FA               	movlw	250
  2318  0750  0253               	subwf	WaitForSYNC_PU@temp001,w
  2319  0751  1803               	btfsc	3,0
  2320  0752  0008               	return
  2321                           
  2322                           ;main.c: 401: {
  2323                           ;main.c: 402: if ((GPIObits.GP4))
  2324  0753  1E05               	btfss	5,4	;volatile
  2325  0754  2F4D               	goto	l2175
  2326                           
  2327                           ;main.c: 403: temp001++;
  2328  0755  0AD3               	incf	WaitForSYNC_PU@temp001,f
  2329  0756  2F4F               	goto	l2181
  2330  0757                     __end_of_WaitForSYNC_PU:	
  2331                           
  2332                           	psect	text9
  2333  0688                     __ptext9:	
  2334 ;; *************** function _INC_EEPROM_MODE *****************
  2335 ;; Defined at:
  2336 ;;		line 435 in file "main.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;		None
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;  Temp_Mode_Da    1   17[BANK0 ] unsigned char 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      void 
  2343 ;; Registers used:
  2344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 100/0
  2347 ;;		On exit  : 900/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMMON   BANK0   BANK1
  2350 ;;      Params:         0       0       0
  2351 ;;      Locals:         0       1       0
  2352 ;;      Temps:          0       0       0
  2353 ;;      Totals:         0       1       0
  2354 ;;Total ram usage:        1 bytes
  2355 ;; Hardware stack levels used:    1
  2356 ;; Hardware stack levels required when called:    5
  2357 ;; This function calls:
  2358 ;;		_ReWriteEEPROM
  2359 ;;		_Update_ComboPattern_Index
  2360 ;; This function is called by:
  2361 ;;		_main
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           
  2366                           ;psect for function _INC_EEPROM_MODE
  2367  0688                     _INC_EEPROM_MODE:	
  2368                           
  2369                           ;main.c: 437: unsigned char Temp_Mode_Data;
  2370                           ;main.c: 438: Temp_Mode_Data = GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type];
  2371                           
  2372                           ;incstack = 0
  2373                           ; Regs used in _INC_EEPROM_MODE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2374  0688  0837               	movf	_GLOBAL_Selected_Mode_Type,w
  2375  0689  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2376  068A  0084               	movwf	4
  2377  068B  1383               	bcf	3,7	;select IRP bank0
  2378  068C  0800               	movf	0,w
  2379  068D  00DA               	movwf	INC_EEPROM_MODE@Temp_Mode_Data
  2380                           
  2381                           ;main.c: 446: if (GLOBAL_Selected_Mode_Type == 1)
  2382  068E  0B37               	decfsz	_GLOBAL_Selected_Mode_Type,w	;volatile
  2383  068F  2E9C               	goto	l2205
  2384                           
  2385                           ;main.c: 447: {
  2386                           ;main.c: 448: if (Temp_Mode_Data < (39 - 1))
  2387  0690  3026               	movlw	38
  2388  0691  025A               	subwf	INC_EEPROM_MODE@Temp_Mode_Data,w
  2389                           
  2390                           ;main.c: 449: GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type]++;
  2391  0692  0837               	movf	_GLOBAL_Selected_Mode_Type,w
  2392  0693  1803               	skipnc
  2393  0694  2E99               	goto	L2
  2394  0695  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2395  0696  0084               	movwf	4
  2396  0697  0A80               	incf	0,f
  2397  0698  2E9C               	goto	l2205
  2398  0699                     L2:	
  2399                           ;main.c: 450: else GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type] = 0;
  2400                           
  2401  0699  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2402  069A  0084               	movwf	4
  2403  069B  0180               	clrf	0
  2404  069C                     l2205:	
  2405                           
  2406                           ;main.c: 451: }
  2407                           ;main.c: 452: if (GLOBAL_Selected_Mode_Type == 0)
  2408  069C  0837               	movf	_GLOBAL_Selected_Mode_Type,w	;volatile
  2409  069D  1D03               	btfss	3,2
  2410  069E  2EAB               	goto	l2213
  2411                           
  2412                           ;main.c: 453: {
  2413                           ;main.c: 454: if (Temp_Mode_Data < (39 - 1))
  2414  069F  3026               	movlw	38
  2415  06A0  025A               	subwf	INC_EEPROM_MODE@Temp_Mode_Data,w
  2416                           
  2417                           ;main.c: 455: GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type]++;
  2418  06A1  0837               	movf	_GLOBAL_Selected_Mode_Type,w
  2419  06A2  1803               	skipnc
  2420  06A3  2EA8               	goto	L3
  2421  06A4  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2422  06A5  0084               	movwf	4
  2423  06A6  0A80               	incf	0,f
  2424  06A7  2EAB               	goto	l2213
  2425  06A8                     L3:	
  2426                           ;main.c: 456: else GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type] = 0;
  2427                           
  2428  06A8  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2429  06A9  0084               	movwf	4
  2430  06AA  0180               	clrf	0
  2431  06AB                     l2213:	
  2432                           
  2433                           ;main.c: 457: }
  2434                           ;main.c: 458: ReWriteEEPROM();
  2435  06AB  26F2               	fcall	_ReWriteEEPROM
  2436                           
  2437                           ;main.c: 459: Update_ComboPattern_Index();
  2438  06AC  2D05               	ljmp	l1491
  2439  06AD                     __end_of_INC_EEPROM_MODE:	
  2440                           
  2441                           	psect	text10
  2442  0505                     __ptext10:	
  2443 ;; *************** function _Update_ComboPattern_Index *****************
  2444 ;; Defined at:
  2445 ;;		line 493 in file "main.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;		None
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;		None
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      void 
  2452 ;; Registers used:
  2453 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2454 ;; Tracked objects:
  2455 ;;		On entry : 100/0
  2456 ;;		On exit  : 900/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMMON   BANK0   BANK1
  2459 ;;      Params:         0       0       0
  2460 ;;      Locals:         0       0       0
  2461 ;;      Temps:          0       0       0
  2462 ;;      Totals:         0       0       0
  2463 ;;Total ram usage:        0 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:    2
  2466 ;; This function calls:
  2467 ;;		Nothing
  2468 ;; This function is called by:
  2469 ;;		_INC_EEPROM_MODE
  2470 ;;		_Update_Input_Mode_Type
  2471 ;;		_Initial_Start
  2472 ;;		_main
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           
  2476                           
  2477                           ;psect for function _Update_ComboPattern_Index
  2478  0505                     _Update_ComboPattern_Index:	
  2479  0505                     l1491:	
  2480                           ;incstack = 0
  2481                           ; Regs used in _Update_ComboPattern_Index: [wreg-fsr0h+status,2+status,0]
  2482                           
  2483                           
  2484                           ;main.c: 495: GLOBAL_Selected_Mode_Number = GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type];
  2485  0505  0837               	movf	_GLOBAL_Selected_Mode_Type,w
  2486  0506  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2487  0507  0084               	movwf	4
  2488  0508  1383               	bcf	3,7	;select IRP bank0
  2489  0509  0800               	movf	0,w
  2490  050A  00F0               	movwf	_GLOBAL_Selected_Mode_Number	;volatile
  2491                           
  2492                           ;main.c: 496: GLOBAL_combo_patterns_index = GLOBAL_Selected_Mode_Number;
  2493  050B  0870               	movf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2494  050C  00C3               	movwf	_GLOBAL_combo_patterns_index	;volatile
  2495                           
  2496                           ;main.c: 499: if(GLOBAL_Selected_Mode_Number < 11)
  2497  050D  300B               	movlw	11
  2498  050E  0270               	subwf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2499  050F  1803               	skipnc
  2500  0510  2D17               	goto	l1503
  2501                           
  2502                           ;main.c: 500: {
  2503                           ;main.c: 501: bGLOBAL_STEADY_ON = 0;
  2504  0511  01C7               	clrf	_bGLOBAL_STEADY_ON	;volatile
  2505                           
  2506                           ;main.c: 502: GLOBAL_combo_patterns_index = GLOBAL_Selected_Mode_Number;
  2507  0512  0870               	movf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2508  0513  00C3               	movwf	_GLOBAL_combo_patterns_index	;volatile
  2509                           
  2510                           ;main.c: 503: GLOBAL_CHANNELS_EN = 0xFD;
  2511  0514  30FD               	movlw	253
  2512  0515  00AF               	movwf	_GLOBAL_CHANNELS_EN	;volatile
  2513  0516  2D27               	goto	l1515
  2514  0517                     l1503:	
  2515                           ;main.c: 505: }
  2516                           
  2517                           ;main.c: 504: bDualColor = 0;
  2518                           
  2519                           
  2520                           ;main.c: 506: else if(GLOBAL_Selected_Mode_Number >= 11 && GLOBAL_Selected_Mode_Number <
      +                           22)
  2521  0517  300B               	movlw	11
  2522  0518  0270               	subwf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2523  0519  3016               	movlw	22
  2524  051A  1C03               	skipc
  2525  051B  2D2A               	goto	L5
  2526  051C  0270               	subwf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2527  051D  1803               	skipnc
  2528  051E  2D29               	goto	l1517
  2529                           
  2530                           ;main.c: 507: {
  2531                           ;main.c: 508: GLOBAL_Selected_Mode_Number = GLOBAL_Selected_Mode_Number - 11;
  2532  051F  0870               	movf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2533  0520  3EF5               	addlw	245
  2534  0521  00F0               	movwf	_GLOBAL_Selected_Mode_Number	;volatile
  2535                           
  2536                           ;main.c: 509: GLOBAL_combo_patterns_index = GLOBAL_Selected_Mode_Number;
  2537  0522  0870               	movf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2538  0523  00C3               	movwf	_GLOBAL_combo_patterns_index	;volatile
  2539                           
  2540                           ;main.c: 510: GLOBAL_CHANNELS_EN = 0xFE;
  2541  0524  30FE               	movlw	254
  2542  0525  00AF               	movwf	_GLOBAL_CHANNELS_EN	;volatile
  2543                           
  2544                           ;main.c: 511: bGLOBAL_STEADY_ON = 0;
  2545  0526  01C7               	clrf	_bGLOBAL_STEADY_ON	;volatile
  2546  0527                     l1515:	
  2547                           
  2548                           ;main.c: 512: bDualColor = 0;
  2549  0527  01BF               	clrf	_bDualColor	;volatile
  2550                           
  2551                           ;main.c: 513: }
  2552  0528  2D5B               	goto	l1557
  2553  0529                     l1517:	
  2554                           
  2555                           ;main.c: 514: else if(GLOBAL_Selected_Mode_Number >= 22 && GLOBAL_Selected_Mode_Number <
      +                           33)
  2556  0529  3016               	movlw	22
  2557  052A                     L5:	
  2558  052A  0270               	subwf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2559  052B  3021               	movlw	33
  2560  052C  1C03               	skipc
  2561  052D  2D3B               	goto	L6
  2562  052E  0270               	subwf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2563  052F  1803               	skipnc
  2564  0530  2D3A               	goto	l1529
  2565                           
  2566                           ;main.c: 515: {
  2567                           ;main.c: 516: GLOBAL_Selected_Mode_Number = GLOBAL_Selected_Mode_Number - 22;
  2568  0531  0870               	movf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2569  0532  3EEA               	addlw	234
  2570  0533  00F0               	movwf	_GLOBAL_Selected_Mode_Number	;volatile
  2571                           
  2572                           ;main.c: 517: GLOBAL_combo_patterns_index = GLOBAL_Selected_Mode_Number;
  2573  0534  0870               	movf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2574  0535  00C3               	movwf	_GLOBAL_combo_patterns_index	;volatile
  2575                           
  2576                           ;main.c: 519: bGLOBAL_STEADY_ON = 0;
  2577  0536  01C7               	clrf	_bGLOBAL_STEADY_ON	;volatile
  2578                           
  2579                           ;main.c: 520: bDualColor = 1;
  2580  0537  3001               	movlw	1
  2581  0538  00BF               	movwf	_bDualColor	;volatile
  2582                           
  2583                           ;main.c: 521: }
  2584  0539  2D5B               	goto	l1557
  2585  053A                     l1529:	
  2586                           
  2587                           ;main.c: 522: else if(GLOBAL_Selected_Mode_Number >= 33 && GLOBAL_Selected_Mode_Number <
      +                           36)
  2588  053A  3021               	movlw	33
  2589  053B                     L6:	
  2590  053B  0270               	subwf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2591  053C  3024               	movlw	36
  2592  053D  1C03               	skipc
  2593  053E  2D4D               	goto	L7
  2594  053F  0270               	subwf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2595  0540  1803               	skipnc
  2596  0541  2D4C               	goto	l1543
  2597                           
  2598                           ;main.c: 523: {
  2599                           ;main.c: 524: GLOBAL_Selected_Mode_Number = GLOBAL_Selected_Mode_Number - 22;
  2600  0542  0870               	movf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2601  0543  3EEA               	addlw	234
  2602  0544  00F0               	movwf	_GLOBAL_Selected_Mode_Number	;volatile
  2603                           
  2604                           ;main.c: 525: GLOBAL_combo_patterns_index = GLOBAL_Selected_Mode_Number;
  2605  0545  0870               	movf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2606  0546  00C3               	movwf	_GLOBAL_combo_patterns_index	;volatile
  2607                           
  2608                           ;main.c: 526: GLOBAL_CHANNELS_EN = 0xFE;
  2609  0547  30FE               	movlw	254
  2610  0548                     L4:	
  2611  0548  00AF               	movwf	_GLOBAL_CHANNELS_EN	;volatile
  2612                           
  2613                           ;main.c: 527: bGLOBAL_STEADY_ON = 1;
  2614  0549  3001               	movlw	1
  2615  054A  00C7               	movwf	_bGLOBAL_STEADY_ON	;volatile
  2616  054B  2D27               	goto	l1515
  2617  054C                     l1543:	
  2618                           
  2619                           ;main.c: 530: else if(GLOBAL_Selected_Mode_Number >= 36 && GLOBAL_Selected_Mode_Number <
      +                           39)
  2620  054C  3024               	movlw	36
  2621  054D                     L7:	
  2622  054D  0270               	subwf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2623  054E  1C03               	skipc
  2624  054F  2D5B               	goto	l1557
  2625  0550  3027               	movlw	39
  2626  0551  0270               	subwf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2627  0552  1803               	skipnc
  2628  0553  2D5B               	goto	l1557
  2629                           
  2630                           ;main.c: 531: {
  2631                           ;main.c: 532: GLOBAL_Selected_Mode_Number = GLOBAL_Selected_Mode_Number - 25;
  2632  0554  0870               	movf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2633  0555  3EE7               	addlw	231
  2634  0556  00F0               	movwf	_GLOBAL_Selected_Mode_Number	;volatile
  2635                           
  2636                           ;main.c: 533: GLOBAL_combo_patterns_index = GLOBAL_Selected_Mode_Number;
  2637  0557  0870               	movf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2638  0558  00C3               	movwf	_GLOBAL_combo_patterns_index	;volatile
  2639                           
  2640                           ;main.c: 534: GLOBAL_CHANNELS_EN = 0xFD;
  2641  0559  30FD               	movlw	253
  2642  055A  2D48               	goto	L4
  2643  055B                     l1557:	
  2644                           
  2645                           ;main.c: 537: }
  2646                           ;main.c: 568: GLOBAL_sub_patterns_column_index = 7;
  2647  055B  3007               	movlw	7
  2648  055C  00F6               	movwf	_GLOBAL_sub_patterns_column_index	;volatile
  2649                           
  2650                           ;main.c: 569: GLOBAL_sub_patterns_timer = 0;
  2651  055D  01C6               	clrf	_GLOBAL_sub_patterns_timer	;volatile
  2652                           
  2653                           ;main.c: 570: GLOBAL_Dummy_Counter2 = 0;
  2654  055E  01BA               	clrf	_GLOBAL_Dummy_Counter2	;volatile
  2655  055F  0008               	return
  2656  0560                     __end_of_Update_ComboPattern_Index:	
  2657                           
  2658                           	psect	text11
  2659  06F2                     __ptext11:	
  2660 ;; *************** function _ReWriteEEPROM *****************
  2661 ;; Defined at:
  2662 ;;		line 424 in file "main.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;		None
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;  i               1   16[BANK0 ] unsigned char 
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 100/0
  2673 ;;		On exit  : 100/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMMON   BANK0   BANK1
  2676 ;;      Params:         0       0       0
  2677 ;;      Locals:         0       1       0
  2678 ;;      Temps:          0       0       0
  2679 ;;      Totals:         0       1       0
  2680 ;;Total ram usage:        1 bytes
  2681 ;; Hardware stack levels used:    1
  2682 ;; Hardware stack levels required when called:    4
  2683 ;; This function calls:
  2684 ;;		___ctoee
  2685 ;; This function is called by:
  2686 ;;		_WriteEEPROMDefaults
  2687 ;;		_INC_EEPROM_MODE
  2688 ;;		_main
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           
  2693                           ;psect for function _ReWriteEEPROM
  2694  06F2                     _ReWriteEEPROM:	
  2695                           
  2696                           ;main.c: 426: EEprom_Written_Flag = 0xFF;
  2697                           
  2698                           ;incstack = 0
  2699                           ; Regs used in _ReWriteEEPROM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2700  06F2  30FF               	movlw	255
  2701  06F3  00D7               	movwf	___ctoee@data
  2702  06F4  3004               	movlw	(low _EEprom_Written_Flag)& (0+255)
  2703  06F5  2767               	fcall	___ctoee
  2704                           
  2705                           ;main.c: 427: for (unsigned char i=0;i<2;i++)
  2706  06F6  01D9               	clrf	ReWriteEEPROM@i
  2707  06F7                     l2161:	
  2708                           
  2709                           ;main.c: 428: {
  2710                           ;main.c: 429: EEprom_mode[i] = GLOBAL_Mode_copy[i];
  2711  06F7  0859               	movf	ReWriteEEPROM@i,w
  2712  06F8  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2713  06F9  0084               	movwf	4
  2714  06FA  1383               	bcf	3,7	;select IRP bank0
  2715  06FB  0800               	movf	0,w
  2716  06FC  00D7               	movwf	___ctoee@data
  2717  06FD  0859               	movf	ReWriteEEPROM@i,w
  2718  06FE  3E02               	addlw	low _EEprom_mode
  2719  06FF  2767               	fcall	___ctoee
  2720                           
  2721                           ;main.c: 430: EEprom_InPhase[i] = bGLOBAL_InPhase_copy[i];
  2722  0700  0859               	movf	ReWriteEEPROM@i,w
  2723  0701  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  2724  0702  0084               	movwf	4
  2725  0703  1383               	bcf	3,7	;select IRP bank0
  2726  0704  0800               	movf	0,w
  2727  0705  00D7               	movwf	___ctoee@data
  2728  0706  0859               	movf	ReWriteEEPROM@i,w
  2729  0707  3E00               	addlw	low _EEprom_InPhase
  2730  0708  2767               	fcall	___ctoee
  2731  0709  3002               	movlw	2
  2732  070A  0AD9               	incf	ReWriteEEPROM@i,f
  2733  070B  0259               	subwf	ReWriteEEPROM@i,w
  2734  070C  1C03               	skipc
  2735  070D  2EF7               	goto	l2161
  2736                           
  2737                           ;main.c: 431: }
  2738                           ;main.c: 432: EEprom_Written_Flag = 0xA6;
  2739  070E  30A6               	movlw	166
  2740  070F  00D7               	movwf	___ctoee@data
  2741  0710  3004               	movlw	(low _EEprom_Written_Flag)& (0+255)
  2742  0711  2F67               	ljmp	___ctoee
  2743  0712                     __end_of_ReWriteEEPROM:	
  2744                           
  2745                           	psect	text12
  2746  0767                     __ptext12:	
  2747 ;; *************** function ___ctoee *****************
  2748 ;; Defined at:
  2749 ;;		line 128 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eeprom.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;  addr            1    wreg     PTR eeprom void 
  2752 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  2753 ;;  data            1   14[BANK0 ] unsigned char 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  addr            1   15[BANK0 ] PTR eeprom void 
  2756 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      unsigned char 
  2759 ;; Registers used:
  2760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 100/0
  2763 ;;		On exit  : 100/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1
  2766 ;;      Params:         0       1       0
  2767 ;;      Locals:         0       1       0
  2768 ;;      Temps:          0       0       0
  2769 ;;      Totals:         0       2       0
  2770 ;;Total ram usage:        2 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    3
  2773 ;; This function calls:
  2774 ;;		_memcpyee
  2775 ;; This function is called by:
  2776 ;;		_ReWriteEEPROM
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           
  2781                           ;psect for function ___ctoee
  2782  0767                     ___ctoee:	
  2783                           
  2784                           ;incstack = 0
  2785                           ; Regs used in ___ctoee: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2786                           ;___ctoee@addr stored from wreg
  2787  0767  00D8               	movwf	___ctoee@addr
  2788  0768  3057               	movlw	(low (___ctoee@data| 0))& (0+255)
  2789  0769  00D3               	movwf	memcpyee@from
  2790  076A  01D4               	clrf	memcpyee@size
  2791  076B  0AD4               	incf	memcpyee@size,f
  2792  076C  0858               	movf	___ctoee@addr,w
  2793  076D  2DE1               	ljmp	_memcpyee
  2794  076E                     __end_of___ctoee:	
  2795                           
  2796                           	psect	text13
  2797  05E1                     __ptext13:	
  2798 ;; *************** function _memcpyee *****************
  2799 ;; Defined at:
  2800 ;;		line 39 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eeprom.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  to              1    wreg     PTR eeprom unsigned char
  2803 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  2804 ;;  from            1   10[BANK0 ] PTR const unsigned char 
  2805 ;;		 -> __fltoee@data(3), __fttoee@data(3), __ltoee@data(4), __mtoee@data(3), 
  2806 ;;		 -> __itoee@data(2), __ctoee@data(1), 
  2807 ;;  size            1   11[BANK0 ] unsigned char 
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;  to              1   13[BANK0 ] PTR eeprom unsigned char
  2810 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  2811 ;;  ptr             1   12[BANK0 ] PTR const unsigned char 
  2812 ;;		 -> __fltoee@data(3), __fttoee@data(3), __ltoee@data(4), __mtoee@data(3), 
  2813 ;;		 -> __itoee@data(2), __ctoee@data(1), 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2818 ;; Tracked objects:
  2819 ;;		On entry : 100/0
  2820 ;;		On exit  : 100/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMMON   BANK0   BANK1
  2823 ;;      Params:         0       2       0
  2824 ;;      Locals:         0       2       0
  2825 ;;      Temps:          0       0       0
  2826 ;;      Totals:         0       4       0
  2827 ;;Total ram usage:        4 bytes
  2828 ;; Hardware stack levels used:    1
  2829 ;; Hardware stack levels required when called:    2
  2830 ;; This function calls:
  2831 ;;		Nothing
  2832 ;; This function is called by:
  2833 ;;		___ctoee
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           
  2838                           ;psect for function _memcpyee
  2839  05E1                     _memcpyee:	
  2840                           
  2841                           ;incstack = 0
  2842                           ; Regs used in _memcpyee: [wreg-fsr0h+status,2+status,0]
  2843                           ;memcpyee@to stored from wreg
  2844  05E1  00D6               	movwf	memcpyee@to
  2845  05E2  0853               	movf	memcpyee@from,w
  2846  05E3  00D5               	movwf	memcpyee@ptr
  2847  05E4                     l419:	
  2848  05E4  1683               	bsf	3,5	;RP0=1, select bank1
  2849  05E5  189C               	btfsc	28,1	;volsfr
  2850  05E6  2DE4               	goto	l419
  2851  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  2852  05E8  0856               	movf	memcpyee@to,w
  2853  05E9  3EFF               	addlw	255
  2854  05EA  1683               	bsf	3,5	;RP0=1, select bank1
  2855  05EB  009B               	movwf	27	;volatile
  2856  05EC  139C               	bcf	28,7	;volsfr
  2857  05ED                     l2135:	
  2858  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  2859  05EE  03D4               	decf	memcpyee@size,f
  2860  05EF  0F54               	incfsz	memcpyee@size,w
  2861  05F0  2DF2               	goto	l424
  2862  05F1  0008               	return
  2863  05F2                     l424:	
  2864  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  2865  05F3  189C               	btfsc	28,1	;volsfr
  2866  05F4  2DF2               	goto	l424
  2867  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  2868  05F6  0855               	movf	memcpyee@ptr,w
  2869  05F7  0084               	movwf	4
  2870  05F8  1383               	bcf	3,7	;select IRP bank0
  2871  05F9  0800               	movf	0,w
  2872  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  2873  05FB  009A               	movwf	26	;volatile
  2874  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  2875  05FD  0AD5               	incf	memcpyee@ptr,f
  2876  05FE  1683               	bsf	3,5	;RP0=1, select bank1
  2877  05FF  0A9B               	incf	27,f	;volatile
  2878  0600  1003               	bcf	3,0	;volatile
  2879  0601  1B8B               	btfsc	11,7	;volatile
  2880  0602  1403               	bsf	3,0	;volatile
  2881  0603  138B               	bcf	11,7	;volatile
  2882  0604  151C               	bsf	28,2	;volsfr
  2883  0605  3055               	movlw	85
  2884  0606  009D               	movwf	29	;volsfr
  2885  0607  30AA               	movlw	170
  2886  0608  009D               	movwf	29	;volsfr
  2887  0609  149C               	bsf	28,1	;volsfr
  2888  060A  111C               	bcf	28,2	;volsfr
  2889  060B  1C03               	btfss	3,0	;volatile
  2890  060C  2DED               	goto	l2135
  2891  060D  178B               	bsf	11,7	;volatile
  2892  060E  2DED               	goto	l2135
  2893  060F                     __end_of_memcpyee:	
  2894                           
  2895                           	psect	text14
  2896  076E                     __ptext14:	
  2897 ;; *************** function _ConfigureOscillator *****************
  2898 ;; Defined at:
  2899 ;;		line 18 in file "system.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;		None
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;		None
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg
  2908 ;; Tracked objects:
  2909 ;;		On entry : B00/0
  2910 ;;		On exit  : B00/100
  2911 ;;		Unchanged: A00/0
  2912 ;; Data sizes:     COMMON   BANK0   BANK1
  2913 ;;      Params:         0       0       0
  2914 ;;      Locals:         0       0       0
  2915 ;;      Temps:          0       0       0
  2916 ;;      Totals:         0       0       0
  2917 ;;Total ram usage:        0 bytes
  2918 ;; Hardware stack levels used:    1
  2919 ;; Hardware stack levels required when called:    2
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		_main
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           
  2928                           ;psect for function _ConfigureOscillator
  2929  076E                     _ConfigureOscillator:	
  2930                           
  2931                           ;system.c: 27: OSCCON = 0x40 | 0x20 | 0x10 | 0x1 & (~0x8) ;
  2932                           
  2933                           ;incstack = 0
  2934                           ; Regs used in _ConfigureOscillator: [wreg]
  2935  076E  3071               	movlw	113
  2936  076F  1683               	bsf	3,5	;RP0=1, select bank1
  2937  0770  008F               	movwf	15	;volatile
  2938  0771                     l352:	
  2939                           ;system.c: 29: {}
  2940                           
  2941  0771  190F               	btfsc	15,2	;volatile
  2942  0772  1C8F               	btfss	15,1	;volatile
  2943  0773  0008               	return
  2944  0774  2F71               	goto	l352
  2945  0775                     __end_of_ConfigureOscillator:	
  2946                           
  2947                           	psect	text15
  2948  0334                     __ptext15:	
  2949 ;; *************** function _isr *****************
  2950 ;; Defined at:
  2951 ;;		line 26 in file "interrupts.c"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;		None
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  temp_data1      1    6[COMMON] volatile unsigned char 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 100/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMMON   BANK0   BANK1
  2965 ;;      Params:         0       0       0
  2966 ;;      Locals:         1       0       0
  2967 ;;      Temps:          0      10       0
  2968 ;;      Totals:         1      10       0
  2969 ;;Total ram usage:       11 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; Hardware stack levels required when called:    1
  2972 ;; This function calls:
  2973 ;;		_Read_Mode_Input
  2974 ;;		___bmul
  2975 ;;		___wmul
  2976 ;;		i1_SetOUTPUT
  2977 ;; This function is called by:
  2978 ;;		Interrupt level 1
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           
  2983                           ;psect for function _isr
  2984  0334                     _isr:	
  2985                           
  2986                           ;interrupts.c: 28: volatile unsigned char temp_data1;
  2987                           ;interrupts.c: 29: static unsigned char tenMSCounter = 0;
  2988                           ;interrupts.c: 30: static unsigned char pwmCounter = 0;
  2989                           ;interrupts.c: 57: if (INTCONbits.TMR0IF && INTCONbits.TMR0IE)
  2990  0334  190B               	btfsc	11,2	;volatile
  2991  0335  1E8B               	btfss	11,5	;volatile
  2992  0336  2C72               	goto	i1l103
  2993                           
  2994                           ;interrupts.c: 58: {
  2995                           ;interrupts.c: 59: TMR0 = 131;
  2996  0337  3083               	movlw	131
  2997  0338  0081               	movwf	1	;volatile
  2998                           
  2999                           ;interrupts.c: 61: if (bGLOBAL_OUTPUT_BUFFER_CHANGED || bGLOBAL_STEADY_ON)
  3000  0339  0848               	movf	_bGLOBAL_OUTPUT_BUFFER_CHANGED,w	;volatile
  3001  033A  1903               	btfsc	3,2
  3002  033B  0847               	movf	_bGLOBAL_STEADY_ON,w	;volatile
  3003  033C  1903               	btfsc	3,2
  3004  033D  2B40               	goto	i1l2361
  3005                           
  3006                           ;interrupts.c: 62: {
  3007                           ;interrupts.c: 63: SetOUTPUT();
  3008  033E  2560               	fcall	i1_SetOUTPUT
  3009                           
  3010                           ;interrupts.c: 64: bGLOBAL_OUTPUT_BUFFER_CHANGED = 0;
  3011  033F  01C8               	clrf	_bGLOBAL_OUTPUT_BUFFER_CHANGED	;volatile
  3012  0340                     i1l2361:	
  3013  0340  300A               	movlw	10
  3014                           
  3015                           ;interrupts.c: 65: }
  3016                           ;interrupts.c: 66: tenMSCounter++;
  3017  0341  0AB9               	incf	isr@tenMSCounter,f
  3018                           
  3019                           ;interrupts.c: 67: if(tenMSCounter>9)
  3020  0342  0239               	subwf	isr@tenMSCounter,w
  3021  0343  1C03               	skipc
  3022  0344  2C71               	goto	i1l2517
  3023  0345  3007               	movlw	7
  3024                           
  3025                           ;interrupts.c: 68: {
  3026                           ;interrupts.c: 69: tenMSCounter = 0;
  3027  0346  01B9               	clrf	isr@tenMSCounter
  3028                           
  3029                           ;interrupts.c: 70: if ((GLOBAL_sub_patterns_column_index < 7) && (GLOBAL_sub_patterns_ti
      +                          mer == 0))
  3030  0347  0276               	subwf	_GLOBAL_sub_patterns_column_index,w	;volatile
  3031  0348  1803               	skipnc
  3032  0349  2B93               	goto	i1l2387
  3033  034A  0846               	movf	_GLOBAL_sub_patterns_timer,w	;volatile
  3034  034B  1D03               	btfss	3,2
  3035  034C  2B93               	goto	i1l2387
  3036                           
  3037                           ;interrupts.c: 71: {
  3038                           ;interrupts.c: 72: if (GLOBAL_sub_patterns_index_copy != GLOBAL_sub_patterns_index)
  3039  034D  0845               	movf	_GLOBAL_sub_patterns_index_copy,w	;volatile
  3040  034E  0675               	xorwf	_GLOBAL_sub_patterns_index,w	;volatile
  3041  034F  1903               	skipnz
  3042  0350  2B54               	goto	i1l2377
  3043                           
  3044                           ;interrupts.c: 73: {
  3045                           ;interrupts.c: 74: GLOBAL_sub_patterns_column_index = 0;
  3046  0351  01F6               	clrf	_GLOBAL_sub_patterns_column_index	;volatile
  3047                           
  3048                           ;interrupts.c: 75: GLOBAL_sub_patterns_index_copy = GLOBAL_sub_patterns_index;
  3049  0352  0875               	movf	_GLOBAL_sub_patterns_index,w	;volatile
  3050  0353  00C5               	movwf	_GLOBAL_sub_patterns_index_copy	;volatile
  3051  0354                     i1l2377:	
  3052                           
  3053                           ;interrupts.c: 76: }
  3054                           ;interrupts.c: 78: GLOBAL_sub_patterns_timer = ROM_Sub_Patterns_Time[GLOBAL_sub_patterns
      +                          _index][GLOBAL_sub_patterns_column_index];
  3055  0354  3007               	movlw	7
  3056  0355  00F7               	movwf	___bmul@multiplicand
  3057  0356  0875               	movf	_GLOBAL_sub_patterns_index,w
  3058  0357  260F               	fcall	___bmul
  3059  0358  3EBD               	addlw	low (_ROM_Sub_Patterns_Time| (0+32768))
  3060  0359  00C9               	movwf	??_isr
  3061  035A  3082               	movlw	high (_ROM_Sub_Patterns_Time| (0+32768))
  3062  035B  1803               	skipnc
  3063  035C  3E01               	addlw	1
  3064  035D  00CA               	movwf	??_isr+1
  3065  035E  0876               	movf	_GLOBAL_sub_patterns_column_index,w
  3066  035F  0749               	addwf	??_isr,w
  3067  0360  0084               	movwf	4
  3068  0361  084A               	movf	??_isr+1,w
  3069  0362  1803               	skipnc
  3070  0363  0A4A               	incf	??_isr+1,w
  3071  0364  00FF               	movwf	127
  3072  0365  2100               	fcall	stringtab
  3073  0366  00C6               	movwf	_GLOBAL_sub_patterns_timer	;volatile
  3074                           
  3075                           ;interrupts.c: 80: OUTPUT_BUFFER = ROM_Sub_Patterns[GLOBAL_sub_patterns_index][GLOBAL_su
      +                          b_patterns_column_index];
  3076  0367  3007               	movlw	7
  3077  0368  00F7               	movwf	___bmul@multiplicand
  3078  0369  0875               	movf	_GLOBAL_sub_patterns_index,w
  3079  036A  260F               	fcall	___bmul
  3080  036B  3E46               	addlw	low (_ROM_Sub_Patterns| (0+32768))
  3081  036C  00C9               	movwf	??_isr
  3082  036D  3082               	movlw	high (_ROM_Sub_Patterns| (0+32768))
  3083  036E  1803               	skipnc
  3084  036F  3E01               	addlw	1
  3085  0370  00CA               	movwf	??_isr+1
  3086  0371  0876               	movf	_GLOBAL_sub_patterns_column_index,w
  3087  0372  0749               	addwf	??_isr,w
  3088  0373  0084               	movwf	4
  3089  0374  084A               	movf	??_isr+1,w
  3090  0375  1803               	skipnc
  3091  0376  0A4A               	incf	??_isr+1,w
  3092  0377  00FF               	movwf	127
  3093  0378  2100               	fcall	stringtab
  3094  0379  00F4               	movwf	_OUTPUT_BUFFER	;volatile
  3095                           
  3096                           ;interrupts.c: 82: GLOBAL_sub_patterns_column_index++;
  3097  037A  0AF6               	incf	_GLOBAL_sub_patterns_column_index,f	;volatile
  3098                           
  3099                           ;interrupts.c: 83: if (ROM_Sub_Patterns_Time[GLOBAL_sub_patterns_index][GLOBAL_sub_patte
      +                          rns_column_index] == 0)
  3100  037B  3007               	movlw	7
  3101  037C  00F7               	movwf	___bmul@multiplicand
  3102  037D  0875               	movf	_GLOBAL_sub_patterns_index,w
  3103  037E  260F               	fcall	___bmul
  3104  037F  3EBD               	addlw	low (_ROM_Sub_Patterns_Time| (0+32768))
  3105  0380  00C9               	movwf	??_isr
  3106  0381  3082               	movlw	high (_ROM_Sub_Patterns_Time| (0+32768))
  3107  0382  1803               	skipnc
  3108  0383  3E01               	addlw	1
  3109  0384  00CA               	movwf	??_isr+1
  3110  0385  0876               	movf	_GLOBAL_sub_patterns_column_index,w
  3111  0386  0749               	addwf	??_isr,w
  3112  0387  0084               	movwf	4
  3113  0388  084A               	movf	??_isr+1,w
  3114  0389  1803               	skipnc
  3115  038A  0A4A               	incf	??_isr+1,w
  3116  038B  00FF               	movwf	127
  3117  038C  2100               	fcall	stringtab
  3118  038D  3A00               	xorlw	0
  3119  038E  1D03               	skipz
  3120  038F  2C15               	goto	i1l75
  3121                           
  3122                           ;interrupts.c: 84: GLOBAL_sub_patterns_column_index = 7;
  3123  0390  3007               	movlw	7
  3124  0391  00F6               	movwf	_GLOBAL_sub_patterns_column_index	;volatile
  3125  0392  2C15               	goto	i1l75
  3126  0393                     i1l2387:	
  3127                           
  3128                           ;interrupts.c: 86: else {
  3129                           ;interrupts.c: 87: if (GLOBAL_sub_patterns_column_index > (7 - 1))
  3130  0393  3007               	movlw	7
  3131  0394  0276               	subwf	_GLOBAL_sub_patterns_column_index,w	;volatile
  3132  0395  1C03               	skipc
  3133  0396  2C15               	goto	i1l75
  3134                           
  3135                           ;interrupts.c: 88: {
  3136                           ;interrupts.c: 90: if (GLOBAL_combo_patterns_index_copy != GLOBAL_combo_patterns_index)
  3137  0397  0844               	movf	_GLOBAL_combo_patterns_index_copy,w	;volatile
  3138  0398  0643               	xorwf	_GLOBAL_combo_patterns_index,w	;volatile
  3139  0399  1903               	skipnz
  3140  039A  2B9E               	goto	i1l2395
  3141                           
  3142                           ;interrupts.c: 91: {
  3143                           ;interrupts.c: 92: GLOBAL_combo_patterns_column_index = 0;
  3144  039B  01F3               	clrf	_GLOBAL_combo_patterns_column_index	;volatile
  3145                           
  3146                           ;interrupts.c: 93: GLOBAL_combo_patterns_index_copy = GLOBAL_combo_patterns_index;
  3147  039C  0843               	movf	_GLOBAL_combo_patterns_index,w	;volatile
  3148  039D  00C4               	movwf	_GLOBAL_combo_patterns_index_copy	;volatile
  3149  039E                     i1l2395:	
  3150                           
  3151                           ;interrupts.c: 94: }
  3152                           ;interrupts.c: 96: if (bGLOBAL_END_OF_CYCLE_COND1)
  3153  039E  0842               	movf	_bGLOBAL_END_OF_CYCLE_COND1,w	;volatile
  3154  039F  1903               	btfsc	3,2
  3155  03A0  2BA3               	goto	i1l2399
  3156                           
  3157                           ;interrupts.c: 97: bGLOBAL_END_OF_CYCLE_COND2 = 1;
  3158  03A1  3001               	movlw	1
  3159  03A2  00C1               	movwf	_bGLOBAL_END_OF_CYCLE_COND2	;volatile
  3160  03A3                     i1l2399:	
  3161                           
  3162                           ;interrupts.c: 99: if (bGLOBAL_InPhase)
  3163  03A3  0840               	movf	_bGLOBAL_InPhase,w	;volatile
  3164  03A4  1903               	btfsc	3,2
  3165  03A5  2BA8               	goto	i1l2403
  3166                           
  3167                           ;interrupts.c: 100: GLOBAL_sub_patterns_index = ROM_COMBO_Patterns[GLOBAL_combo_patterns
      +                          _index][GLOBAL_combo_patterns_column_index];
  3168  03A6  0873               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  3169  03A7  2BB6               	goto	L8
  3170  03A8                     i1l2403:	
  3171                           
  3172                           ;interrupts.c: 101: else
  3173                           ;interrupts.c: 102: {
  3174                           ;interrupts.c: 103: temp_data1 = GLOBAL_combo_patterns_column_index & 0x01;
  3175  03A8  0873               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  3176  03A9  00FD               	movwf	isr@temp_data1	;volatile
  3177  03AA  3001               	movlw	1
  3178  03AB  05FD               	andwf	isr@temp_data1,f	;volatile
  3179                           
  3180                           ;interrupts.c: 104: if (temp_data1)
  3181  03AC  087D               	movf	isr@temp_data1,w	;volatile
  3182  03AD  1903               	btfsc	3,2
  3183  03AE  2BB2               	goto	i1l2411
  3184                           
  3185                           ;interrupts.c: 105: temp_data1 = GLOBAL_combo_patterns_column_index - 1;
  3186  03AF  0873               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  3187  03B0  3EFF               	addlw	255
  3188  03B1  2BB4               	goto	L9
  3189  03B2                     i1l2411:	
  3190                           
  3191                           ;interrupts.c: 106: else
  3192                           ;interrupts.c: 107: temp_data1 = GLOBAL_combo_patterns_column_index + 1;
  3193  03B2  0873               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  3194  03B3  3E01               	addlw	1
  3195  03B4                     L9:	
  3196  03B4  00FD               	movwf	isr@temp_data1	;volatile
  3197                           
  3198                           ;interrupts.c: 108: GLOBAL_sub_patterns_index = ROM_COMBO_Patterns[GLOBAL_combo_patterns
      +                          _index][temp_data1];
  3199  03B5  087D               	movf	isr@temp_data1,w	;volatile
  3200  03B6                     L8:	
  3201  03B6  00C9               	movwf	??_isr
  3202  03B7  01CA               	clrf	??_isr+1
  3203  03B8  0843               	movf	_GLOBAL_combo_patterns_index,w	;volatile
  3204  03B9  00F7               	movwf	___wmul@multiplier
  3205  03BA  3016               	movlw	22
  3206  03BB  01F8               	clrf	___wmul@multiplier+1
  3207  03BC  00F9               	movwf	___wmul@multiplicand
  3208  03BD  01FA               	clrf	___wmul@multiplicand+1
  3209  03BE  2712               	fcall	___wmul
  3210  03BF  3012               	movlw	low (_ROM_COMBO_Patterns| (0+32768))
  3211  03C0  00CB               	movwf	??_isr+2
  3212  03C1  3081               	movlw	high (_ROM_COMBO_Patterns| (0+32768))
  3213  03C2  00CC               	movwf	??_isr+3
  3214  03C3  0877               	movf	?___wmul,w
  3215  03C4  074B               	addwf	??_isr+2,w
  3216  03C5  00CD               	movwf	??_isr+4
  3217  03C6  0878               	movf	?___wmul+1,w
  3218  03C7  1803               	skipnc
  3219  03C8  0A78               	incf	?___wmul+1,w
  3220  03C9  074C               	addwf	??_isr+3,w
  3221  03CA  00CE               	movwf	??_isr+5
  3222  03CB  0849               	movf	??_isr,w
  3223  03CC  074D               	addwf	??_isr+4,w
  3224  03CD  0084               	movwf	4
  3225  03CE  084A               	movf	??_isr+1,w
  3226  03CF  1803               	skipnc
  3227  03D0  0A4A               	incf	??_isr+1,w
  3228  03D1  074E               	addwf	??_isr+5,w
  3229  03D2  00FF               	movwf	127
  3230  03D3  2100               	fcall	stringtab
  3231  03D4  00F5               	movwf	_GLOBAL_sub_patterns_index	;volatile
  3232                           
  3233                           ;interrupts.c: 109: }
  3234                           ;interrupts.c: 111: if(bDualColor == 1)
  3235  03D5  0B3F               	decfsz	_bDualColor,w	;volatile
  3236  03D6  2BE5               	goto	i1l2431
  3237                           
  3238                           ;interrupts.c: 112: {
  3239                           ;interrupts.c: 113: if(GLOBAL_combo_patterns_column_index%2==1)
  3240  03D7  1C73               	btfss	_GLOBAL_combo_patterns_column_index,0	;volatile
  3241  03D8  2BE5               	goto	i1l2431
  3242                           
  3243                           ;interrupts.c: 114: {
  3244                           ;interrupts.c: 115: channelToBeDisplayed++;
  3245  03D9  0AF2               	incf	_channelToBeDisplayed,f	;volatile
  3246                           
  3247                           ;interrupts.c: 116: if(channelToBeDisplayed>1)
  3248  03DA  3002               	movlw	2
  3249  03DB  0272               	subwf	_channelToBeDisplayed,w	;volatile
  3250  03DC  1803               	btfsc	3,0
  3251                           
  3252                           ;interrupts.c: 117: {
  3253                           ;interrupts.c: 118: channelToBeDisplayed = 0;
  3254  03DD  01F2               	clrf	_channelToBeDisplayed	;volatile
  3255                           
  3256                           ;interrupts.c: 119: }
  3257                           ;interrupts.c: 121: if(channelToBeDisplayed == 0)
  3258  03DE  0872               	movf	_channelToBeDisplayed,w	;volatile
  3259  03DF  1D03               	btfss	3,2
  3260  03E0  2BE3               	goto	i1l2429
  3261                           
  3262                           ;interrupts.c: 122: {
  3263                           ;interrupts.c: 123: GLOBAL_CHANNELS_EN_DUAL = 0xFD;
  3264  03E1  30FD               	movlw	253
  3265  03E2  2BE4               	goto	L10
  3266  03E3                     i1l2429:	
  3267                           ;interrupts.c: 124: }
  3268                           
  3269                           
  3270                           ;interrupts.c: 125: else
  3271                           ;interrupts.c: 126: {
  3272                           ;interrupts.c: 127: GLOBAL_CHANNELS_EN_DUAL = 0xFE;
  3273  03E3  30FE               	movlw	254
  3274  03E4                     L10:	
  3275  03E4  00BE               	movwf	_GLOBAL_CHANNELS_EN_DUAL	;volatile
  3276  03E5                     i1l2431:	
  3277                           
  3278                           ;interrupts.c: 128: }
  3279                           ;interrupts.c: 129: }
  3280                           ;interrupts.c: 130: }
  3281                           ;interrupts.c: 132: GLOBAL_combo_patterns_column_index++;
  3282  03E5  0AF3               	incf	_GLOBAL_combo_patterns_column_index,f	;volatile
  3283                           
  3284                           ;interrupts.c: 133: if ((GLOBAL_combo_patterns_column_index > (22 - 1)) || (ROM_COMBO_Pa
      +                          tterns[GLOBAL_combo_patterns_index][GLOBAL_combo_patterns_column_index] == 99))
  3285  03E6  3016               	movlw	22
  3286  03E7  0273               	subwf	_GLOBAL_combo_patterns_column_index,w	;volatile
  3287  03E8  1803               	skipnc
  3288  03E9  2C0C               	goto	i1l2437
  3289  03EA  0873               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  3290  03EB  00C9               	movwf	??_isr
  3291  03EC  01CA               	clrf	??_isr+1
  3292  03ED  0843               	movf	_GLOBAL_combo_patterns_index,w	;volatile
  3293  03EE  00F7               	movwf	___wmul@multiplier
  3294  03EF  3016               	movlw	22
  3295  03F0  01F8               	clrf	___wmul@multiplier+1
  3296  03F1  00F9               	movwf	___wmul@multiplicand
  3297  03F2  01FA               	clrf	___wmul@multiplicand+1
  3298  03F3  2712               	fcall	___wmul
  3299  03F4  3012               	movlw	low (_ROM_COMBO_Patterns| (0+32768))
  3300  03F5  00CB               	movwf	??_isr+2
  3301  03F6  3081               	movlw	high (_ROM_COMBO_Patterns| (0+32768))
  3302  03F7  00CC               	movwf	??_isr+3
  3303  03F8  0877               	movf	?___wmul,w
  3304  03F9  074B               	addwf	??_isr+2,w
  3305  03FA  00CD               	movwf	??_isr+4
  3306  03FB  0878               	movf	?___wmul+1,w
  3307  03FC  1803               	skipnc
  3308  03FD  0A78               	incf	?___wmul+1,w
  3309  03FE  074C               	addwf	??_isr+3,w
  3310  03FF  00CE               	movwf	??_isr+5
  3311  0400  0849               	movf	??_isr,w
  3312  0401  074D               	addwf	??_isr+4,w
  3313  0402  0084               	movwf	4
  3314  0403  084A               	movf	??_isr+1,w
  3315  0404  1803               	skipnc
  3316  0405  0A4A               	incf	??_isr+1,w
  3317  0406  074E               	addwf	??_isr+5,w
  3318  0407  00FF               	movwf	127
  3319  0408  2100               	fcall	stringtab
  3320  0409  3A63               	xorlw	99
  3321  040A  1D03               	skipz
  3322  040B  2C14               	goto	i1l2445
  3323  040C                     i1l2437:	
  3324                           
  3325                           ;interrupts.c: 134: {
  3326                           ;interrupts.c: 135: if (bGLOBAL_STEADY_ON)
  3327  040C  0847               	movf	_bGLOBAL_STEADY_ON,w	;volatile
  3328  040D  1903               	btfsc	3,2
  3329  040E  2C11               	goto	i1l2441
  3330                           
  3331                           ;interrupts.c: 136: GLOBAL_combo_patterns_column_index--;
  3332  040F  03F3               	decf	_GLOBAL_combo_patterns_column_index,f	;volatile
  3333  0410  2C14               	goto	i1l2445
  3334  0411                     i1l2441:	
  3335                           
  3336                           ;interrupts.c: 137: else
  3337                           ;interrupts.c: 138: {
  3338                           ;interrupts.c: 139: GLOBAL_combo_patterns_column_index = 0;
  3339  0411  01F3               	clrf	_GLOBAL_combo_patterns_column_index	;volatile
  3340                           
  3341                           ;interrupts.c: 140: bGLOBAL_END_OF_CYCLE_COND1 = 1;
  3342  0412  3001               	movlw	1
  3343  0413  00C2               	movwf	_bGLOBAL_END_OF_CYCLE_COND1	;volatile
  3344  0414                     i1l2445:	
  3345                           
  3346                           ;interrupts.c: 141: }
  3347                           ;interrupts.c: 142: }
  3348                           ;interrupts.c: 143: GLOBAL_sub_patterns_column_index = 0;
  3349  0414  01F6               	clrf	_GLOBAL_sub_patterns_column_index	;volatile
  3350  0415                     i1l75:	
  3351                           
  3352                           ;interrupts.c: 144: }
  3353                           ;interrupts.c: 145: }
  3354                           ;interrupts.c: 147: if ((GLOBAL_sub_patterns_timer < 6) && bGLOBAL_END_OF_CYCLE_COND1 &&
      +                           (GPIObits.GP4) && (GLOBAL_SYNC_PULSE_Counter == 0) && bGLOBAL_END_OF_CYCLE_COND2)
  3355  0415  3006               	movlw	6
  3356  0416  0246               	subwf	_GLOBAL_sub_patterns_timer,w	;volatile
  3357  0417  1803               	skipnc
  3358  0418  2C2A               	goto	i1l2459
  3359  0419  0842               	movf	_bGLOBAL_END_OF_CYCLE_COND1,w	;volatile
  3360  041A  1D03               	btfss	3,2
  3361  041B  1E05               	btfss	5,4	;volatile
  3362  041C  2C2A               	goto	i1l2459
  3363  041D  0871               	movf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  3364  041E  1D03               	btfss	3,2
  3365  041F  2C2A               	goto	i1l2459
  3366  0420  0841               	movf	_bGLOBAL_END_OF_CYCLE_COND2,w	;volatile
  3367  0421  1903               	btfsc	3,2
  3368  0422  2C2A               	goto	i1l2459
  3369                           
  3370                           ;interrupts.c: 148: {
  3371                           ;interrupts.c: 149: OUTPUT_BUFFER = OUTPUT_BUFFER | 0x20;
  3372  0423  0874               	movf	_OUTPUT_BUFFER,w	;volatile
  3373  0424  3820               	iorlw	32
  3374  0425  00F4               	movwf	_OUTPUT_BUFFER	;volatile
  3375                           
  3376                           ;interrupts.c: 150: bGLOBAL_SYNC_SENT = 1;
  3377  0426  3001               	movlw	1
  3378  0427  00BD               	movwf	_bGLOBAL_SYNC_SENT	;volatile
  3379                           
  3380                           ;interrupts.c: 151: bGLOBAL_END_OF_CYCLE_COND1 = 0;
  3381  0428  01C2               	clrf	_bGLOBAL_END_OF_CYCLE_COND1	;volatile
  3382                           
  3383                           ;interrupts.c: 152: bGLOBAL_END_OF_CYCLE_COND2 = 0;
  3384  0429  01C1               	clrf	_bGLOBAL_END_OF_CYCLE_COND2	;volatile
  3385  042A                     i1l2459:	
  3386                           
  3387                           ;interrupts.c: 153: }
  3388                           ;interrupts.c: 155: if (!bGLOBAL_SYNC_SENT)
  3389  042A  083D               	movf	_bGLOBAL_SYNC_SENT,w	;volatile
  3390  042B  1903               	btfsc	3,2
  3391                           
  3392                           ;interrupts.c: 156: {
  3393                           ;interrupts.c: 157: if ((!(GPIObits.GP4)) && (GLOBAL_SYNC_PULSE_Counter < 200))
  3394  042C  1A05               	btfsc	5,4	;volatile
  3395  042D  2C33               	goto	i1l2467
  3396  042E  30C8               	movlw	200
  3397  042F  0271               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  3398  0430  1803               	skipnc
  3399  0431  2C33               	goto	i1l2467
  3400                           
  3401                           ;interrupts.c: 158: GLOBAL_SYNC_PULSE_Counter++;
  3402  0432  0AF1               	incf	_GLOBAL_SYNC_PULSE_Counter,f	;volatile
  3403  0433                     i1l2467:	
  3404                           
  3405                           ;interrupts.c: 159: }
  3406                           ;interrupts.c: 161: if ((GLOBAL_sub_patterns_timer < 3) && bGLOBAL_SYNC_SENT)
  3407  0433  3003               	movlw	3
  3408  0434  0246               	subwf	_GLOBAL_sub_patterns_timer,w	;volatile
  3409  0435  1803               	skipnc
  3410  0436  2C3C               	goto	i1l2475
  3411  0437  083D               	movf	_bGLOBAL_SYNC_SENT,w	;volatile
  3412  0438  1903               	btfsc	3,2
  3413  0439  2C3C               	goto	i1l2475
  3414                           
  3415                           ;interrupts.c: 162: {
  3416                           ;interrupts.c: 163: OUTPUT_BUFFER = OUTPUT_BUFFER & 0xDF;
  3417  043A  12F4               	bcf	_OUTPUT_BUFFER,5	;volatile
  3418                           
  3419                           ;interrupts.c: 164: bGLOBAL_SYNC_SENT = 0;
  3420  043B  01BD               	clrf	_bGLOBAL_SYNC_SENT	;volatile
  3421  043C                     i1l2475:	
  3422                           
  3423                           ;interrupts.c: 165: }
  3424                           ;interrupts.c: 167: if ((GLOBAL_SYNC_PULSE_Counter > 1) && (GLOBAL_SYNC_PULSE_Counter < 
      +                          7) && (GPIObits.GP4) && !bGLOBAL_STEADY_ON)
  3425  043C  3002               	movlw	2
  3426  043D  0271               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  3427  043E  1C03               	skipc
  3428  043F  2C4F               	goto	i1l2495
  3429  0440  3007               	movlw	7
  3430  0441  0271               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  3431  0442  1C03               	btfss	3,0
  3432  0443  1E05               	btfss	5,4	;volatile
  3433  0444  2C4F               	goto	i1l2495
  3434  0445  0847               	movf	_bGLOBAL_STEADY_ON,w	;volatile
  3435  0446  1D03               	btfss	3,2
  3436  0447  2C4F               	goto	i1l2495
  3437                           
  3438                           ;interrupts.c: 168: {
  3439                           ;interrupts.c: 169: GLOBAL_sub_patterns_column_index = 7;
  3440  0448  3007               	movlw	7
  3441  0449  00F6               	movwf	_GLOBAL_sub_patterns_column_index	;volatile
  3442                           
  3443                           ;interrupts.c: 170: GLOBAL_sub_patterns_timer =0;
  3444  044A  01C6               	clrf	_GLOBAL_sub_patterns_timer	;volatile
  3445                           
  3446                           ;interrupts.c: 171: GLOBAL_combo_patterns_column_index = 0;
  3447  044B  01F3               	clrf	_GLOBAL_combo_patterns_column_index	;volatile
  3448                           
  3449                           ;interrupts.c: 172: GLOBAL_SYNC_PULSE_Counter = 0;
  3450  044C  01F1               	clrf	_GLOBAL_SYNC_PULSE_Counter	;volatile
  3451                           
  3452                           ;interrupts.c: 173: bGLOBAL_END_OF_CYCLE_COND1 = 0;
  3453  044D  01C2               	clrf	_bGLOBAL_END_OF_CYCLE_COND1	;volatile
  3454                           
  3455                           ;interrupts.c: 174: bGLOBAL_END_OF_CYCLE_COND2 = 0;
  3456  044E  01C1               	clrf	_bGLOBAL_END_OF_CYCLE_COND2	;volatile
  3457  044F                     i1l2495:	
  3458                           
  3459                           ;interrupts.c: 175: }
  3460                           ;interrupts.c: 177: if ((GPIObits.GP4) && ((GLOBAL_SYNC_PULSE_Counter > 6) || (GLOBAL_SY
      +                          NC_PULSE_Counter < 2)))
  3461  044F  1E05               	btfss	5,4	;volatile
  3462  0450  2C5A               	goto	i1l2503
  3463  0451  3007               	movlw	7
  3464  0452  0271               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  3465  0453  1803               	skipnc
  3466  0454  2C59               	goto	i1l2501
  3467  0455  3002               	movlw	2
  3468  0456  0271               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  3469  0457  1803               	skipnc
  3470  0458  2C5A               	goto	i1l2503
  3471  0459                     i1l2501:	
  3472                           
  3473                           ;interrupts.c: 178: GLOBAL_SYNC_PULSE_Counter = 0;
  3474  0459  01F1               	clrf	_GLOBAL_SYNC_PULSE_Counter	;volatile
  3475  045A                     i1l2503:	
  3476                           
  3477                           ;interrupts.c: 180: if ((OUTPUT_BUFFER_COPY - OUTPUT_BUFFER) != 0)
  3478  045A  083C               	movf	_OUTPUT_BUFFER_COPY,w	;volatile
  3479  045B  00C9               	movwf	??_isr
  3480  045C  01CA               	clrf	??_isr+1
  3481  045D  084A               	movf	??_isr+1,w
  3482  045E  00CC               	movwf	??_isr+3
  3483  045F  0874               	movf	_OUTPUT_BUFFER,w	;volatile
  3484  0460  0249               	subwf	??_isr,w
  3485  0461  00CB               	movwf	??_isr+2
  3486  0462  1C03               	skipc
  3487  0463  03CC               	decf	??_isr+3,f
  3488  0464  044C               	iorwf	??_isr+3,w
  3489  0465  1903               	btfsc	3,2
  3490  0466  2C69               	goto	i1l101
  3491                           
  3492                           ;interrupts.c: 181: bGLOBAL_OUTPUT_BUFFER_CHANGED = 1;
  3493  0467  3001               	movlw	1
  3494  0468  00C8               	movwf	_bGLOBAL_OUTPUT_BUFFER_CHANGED	;volatile
  3495  0469                     i1l101:	
  3496                           
  3497                           ;interrupts.c: 182: OUTPUT_BUFFER_COPY = OUTPUT_BUFFER;
  3498  0469  0874               	movf	_OUTPUT_BUFFER,w	;volatile
  3499  046A  00BC               	movwf	_OUTPUT_BUFFER_COPY	;volatile
  3500                           
  3501                           ;interrupts.c: 183: GLOBAL_Dummy_Counter++;
  3502  046B  0ABB               	incf	_GLOBAL_Dummy_Counter,f	;volatile
  3503                           
  3504                           ;interrupts.c: 184: GLOBAL_Dummy_Counter2++;
  3505  046C  0ABA               	incf	_GLOBAL_Dummy_Counter2,f	;volatile
  3506                           
  3507                           ;interrupts.c: 185: if (GLOBAL_sub_patterns_timer > 0)
  3508  046D  0846               	movf	_GLOBAL_sub_patterns_timer,w	;volatile
  3509  046E  1D03               	btfss	3,2
  3510                           
  3511                           ;interrupts.c: 186: GLOBAL_sub_patterns_timer--;
  3512  046F  03C6               	decf	_GLOBAL_sub_patterns_timer,f	;volatile
  3513                           
  3514                           ;interrupts.c: 187: Read_Mode_Input();
  3515  0470  26AD               	fcall	_Read_Mode_Input
  3516  0471                     i1l2517:	
  3517                           
  3518                           ;interrupts.c: 188: }
  3519                           ;interrupts.c: 189: INTCONbits.TMR0IF = 0;
  3520  0471  110B               	bcf	11,2	;volatile
  3521  0472                     i1l103:	
  3522  0472  0852               	movf	??_isr+9,w
  3523  0473  00FF               	movwf	127
  3524  0474  0851               	movf	??_isr+8,w
  3525  0475  008A               	movwf	10
  3526  0476  0850               	movf	??_isr+7,w
  3527  0477  0084               	movwf	4
  3528  0478  0E4F               	swapf	(??_isr+6)^0,w
  3529  0479  0083               	movwf	3
  3530  047A  0EFE               	swapf	126,f
  3531  047B  0E7E               	swapf	126,w
  3532  047C  0009               	retfie
  3533  047D                     __end_of_isr:	
  3534                           
  3535                           	psect	intentry
  3536  0004                     __pintentry:	
  3537                           ;incstack = 0
  3538                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3539                           
  3540  0004                     interrupt_function:	
  3541  007E                     saved_w	set	btemp
  3542  0004  00FE               	movwf	btemp
  3543  0005  0E03               	swapf	3,w
  3544  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3545  0007  00CF               	movwf	??_isr+6
  3546  0008  0804               	movf	4,w
  3547  0009  00D0               	movwf	??_isr+7
  3548  000A  080A               	movf	10,w
  3549  000B  00D1               	movwf	??_isr+8
  3550  000C  087F               	movf	btemp+1,w
  3551  000D  00D2               	movwf	??_isr+9
  3552  000E  2B34               	ljmp	_isr
  3553                           
  3554                           	psect	text16
  3555  0560                     __ptext16:	
  3556 ;; *************** function i1_SetOUTPUT *****************
  3557 ;; Defined at:
  3558 ;;		line 314 in file "main.c"
  3559 ;; Parameters:    Size  Location     Type
  3560 ;;		None
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;		None
  3563 ;; Return value:  Size  Location     Type
  3564 ;;                  1    wreg      void 
  3565 ;; Registers used:
  3566 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3567 ;; Tracked objects:
  3568 ;;		On entry : 100/0
  3569 ;;		On exit  : 100/0
  3570 ;;		Unchanged: 0/0
  3571 ;; Data sizes:     COMMON   BANK0   BANK1
  3572 ;;      Params:         0       0       0
  3573 ;;      Locals:         0       0       0
  3574 ;;      Temps:          0       0       0
  3575 ;;      Totals:         0       0       0
  3576 ;;Total ram usage:        0 bytes
  3577 ;; Hardware stack levels used:    1
  3578 ;; This function calls:
  3579 ;;		Nothing
  3580 ;; This function is called by:
  3581 ;;		_isr
  3582 ;; This function uses a non-reentrant model
  3583 ;;
  3584                           
  3585                           
  3586                           ;psect for function i1_SetOUTPUT
  3587  0560                     i1_SetOUTPUT:	
  3588                           
  3589                           ;main.c: 316: static unsigned char temporaryGPIO = 0x00;
  3590                           ;main.c: 317: static unsigned char pwmCounter = 0;
  3591                           ;main.c: 319: if (bGLOBAL_ENABLE_LEDS)
  3592                           
  3593                           ;incstack = 0
  3594                           ; Regs used in i1_SetOUTPUT: [wreg-fsr0h+status,2+status,0]
  3595  0560  0829               	movf	_bGLOBAL_ENABLE_LEDS,w	;volatile
  3596  0561  1903               	btfsc	3,2
  3597  0562  2D90               	goto	i1l1815
  3598                           
  3599                           ;main.c: 320: {
  3600                           ;main.c: 321: if(bDualColor == 1)
  3601  0563  0B3F               	decfsz	_bDualColor,w	;volatile
  3602  0564  2D69               	goto	i1l1781
  3603                           
  3604                           ;main.c: 322: {
  3605                           ;main.c: 323: temporaryGPIO = OUTPUT_BUFFER & GLOBAL_CHANNELS_EN_DUAL;
  3606  0565  0874               	movf	_OUTPUT_BUFFER,w	;volatile
  3607  0566  00A5               	movwf	SetOUTPUT@temporaryGPIO
  3608  0567  083E               	movf	_GLOBAL_CHANNELS_EN_DUAL,w	;volatile
  3609  0568  2D6C               	goto	L11
  3610  0569                     i1l1781:	
  3611                           ;main.c: 324: }
  3612                           
  3613                           
  3614                           ;main.c: 325: else
  3615                           ;main.c: 326: {
  3616                           ;main.c: 327: temporaryGPIO = OUTPUT_BUFFER & GLOBAL_CHANNELS_EN;
  3617  0569  0874               	movf	_OUTPUT_BUFFER,w	;volatile
  3618  056A  00A5               	movwf	SetOUTPUT@temporaryGPIO
  3619  056B  082F               	movf	_GLOBAL_CHANNELS_EN,w	;volatile
  3620  056C                     L11:	
  3621  056C  05A5               	andwf	SetOUTPUT@temporaryGPIO,f
  3622                           
  3623                           ;main.c: 328: }
  3624                           ;main.c: 332: if(bDualColor == 1)
  3625  056D  0B3F               	decfsz	_bDualColor,w	;volatile
  3626  056E  2D70               	goto	i1l1797
  3627                           
  3628                           ;main.c: 333: {
  3629                           ;main.c: 334: if(channelToBeDisplayed == 0)
  3630  056F  0872               	movf	_channelToBeDisplayed,w	;volatile
  3631  0570                     i1l1797:	
  3632                           
  3633                           ;main.c: 354: }
  3634                           ;main.c: 355: }
  3635                           ;main.c: 357: if((GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type] == 39-1)|| (GLOBAL_Mode_co
      +                          py[GLOBAL_Selected_Mode_Type] == 39-4))
  3636  0570  0837               	movf	_GLOBAL_Selected_Mode_Type,w
  3637  0571  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  3638  0572  0084               	movwf	4
  3639  0573  3026               	movlw	38
  3640  0574  1383               	bcf	3,7	;select IRP bank0
  3641  0575  0600               	xorwf	0,w
  3642  0576  1903               	btfsc	3,2
  3643  0577  2D7F               	goto	i1l1801
  3644  0578  0837               	movf	_GLOBAL_Selected_Mode_Type,w
  3645  0579  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  3646  057A  0084               	movwf	4
  3647  057B  3023               	movlw	35
  3648  057C  0600               	xorwf	0,w
  3649  057D  1D03               	btfss	3,2
  3650  057E  2D8D               	goto	i1l1813
  3651  057F                     i1l1801:	
  3652  057F  3004               	movlw	4
  3653                           
  3654                           ;main.c: 358: {
  3655                           ;main.c: 359: pwmCounter++;
  3656  0580  0AA4               	incf	SetOUTPUT@pwmCounter,f
  3657                           
  3658                           ;main.c: 360: if(pwmCounter<4)
  3659  0581  0224               	subwf	SetOUTPUT@pwmCounter,w
  3660  0582  1803               	skipnc
  3661  0583  2D87               	goto	i1l1807
  3662                           
  3663                           ;main.c: 361: {
  3664                           ;main.c: 362: GPIO = temporaryGPIO;
  3665  0584  0825               	movf	SetOUTPUT@temporaryGPIO,w
  3666  0585  0085               	movwf	5	;volatile
  3667                           
  3668                           ;main.c: 363: }
  3669  0586  2D88               	goto	i1l1809
  3670  0587                     i1l1807:	
  3671                           
  3672                           ;main.c: 364: else
  3673                           ;main.c: 365: {
  3674                           ;main.c: 366: GPIO = 0;
  3675  0587  0185               	clrf	5	;volatile
  3676  0588                     i1l1809:	
  3677                           
  3678                           ;main.c: 367: }
  3679                           ;main.c: 369: if(pwmCounter>10)
  3680  0588  300B               	movlw	11
  3681  0589  0224               	subwf	SetOUTPUT@pwmCounter,w
  3682  058A  1803               	btfsc	3,0
  3683                           
  3684                           ;main.c: 370: {
  3685                           ;main.c: 371: pwmCounter = 0;
  3686  058B  01A4               	clrf	SetOUTPUT@pwmCounter
  3687  058C  0008               	return
  3688  058D                     i1l1813:	
  3689                           
  3690                           ;main.c: 374: else
  3691                           ;main.c: 375: {
  3692                           ;main.c: 376: GPIO = temporaryGPIO;
  3693  058D  0825               	movf	SetOUTPUT@temporaryGPIO,w
  3694  058E  0085               	movwf	5	;volatile
  3695  058F  0008               	return
  3696  0590                     i1l1815:	
  3697                           
  3698                           ;main.c: 379: else
  3699                           ;main.c: 380: {
  3700                           ;main.c: 381: if (bGLOBAL_IS_PROGRAMMING)
  3701  0590  082A               	movf	_bGLOBAL_IS_PROGRAMMING,w	;volatile
  3702  0591  1903               	btfsc	3,2
  3703  0592  2D9F               	goto	i1l1825
  3704                           
  3705                           ;main.c: 382: {
  3706                           ;main.c: 383: if (!bGLOBAL_CHANGING_PATTERN)
  3707  0593  082C               	movf	_bGLOBAL_CHANGING_PATTERN,w	;volatile
  3708  0594  1D03               	btfss	3,2
  3709  0595  0008               	return
  3710                           
  3711                           ;main.c: 384: {
  3712                           ;main.c: 385: if (bGLOBAL_InPhase)
  3713  0596  0840               	movf	_bGLOBAL_InPhase,w	;volatile
  3714  0597  1903               	btfsc	3,2
  3715  0598  2D9C               	goto	i1l1823
  3716                           
  3717                           ;main.c: 386: GPIO = 0x23;
  3718  0599  3023               	movlw	35
  3719  059A  0085               	movwf	5	;volatile
  3720  059B  0008               	return
  3721  059C                     i1l1823:	
  3722                           
  3723                           ;main.c: 387: else
  3724                           ;main.c: 388: GPIO = 0x21;
  3725  059C  3021               	movlw	33
  3726  059D  0085               	movwf	5	;volatile
  3727  059E  0008               	return
  3728  059F                     i1l1825:	
  3729                           
  3730                           ;main.c: 391: {
  3731                           ;main.c: 392: GPIO = 0;
  3732  059F  0185               	clrf	5	;volatile
  3733  05A0  0008               	return
  3734  05A1                     __end_ofi1_SetOUTPUT:	
  3735                           
  3736                           	psect	text17
  3737  0712                     __ptext17:	
  3738 ;; *************** function ___wmul *****************
  3739 ;; Defined at:
  3740 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;  multiplier      2    0[COMMON] unsigned int 
  3743 ;;  multiplicand    2    2[COMMON] unsigned int 
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;  product         2    4[COMMON] unsigned int 
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  2    0[COMMON] unsigned int 
  3748 ;; Registers used:
  3749 ;;		wreg, status,2, status,0
  3750 ;; Tracked objects:
  3751 ;;		On entry : 100/0
  3752 ;;		On exit  : 100/0
  3753 ;;		Unchanged: 100/0
  3754 ;; Data sizes:     COMMON   BANK0   BANK1
  3755 ;;      Params:         4       0       0
  3756 ;;      Locals:         2       0       0
  3757 ;;      Temps:          0       0       0
  3758 ;;      Totals:         6       0       0
  3759 ;;Total ram usage:        6 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; This function calls:
  3762 ;;		Nothing
  3763 ;; This function is called by:
  3764 ;;		_isr
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           
  3769                           ;psect for function ___wmul
  3770  0712                     ___wmul:	
  3771                           
  3772                           ;incstack = 0
  3773                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3774  0712  01FB               	clrf	___wmul@product
  3775  0713  01FC               	clrf	___wmul@product+1
  3776  0714                     i1l2281:	
  3777  0714  1C77               	btfss	___wmul@multiplier,0
  3778  0715  2F1C               	goto	i1l2285
  3779  0716  0879               	movf	___wmul@multiplicand,w
  3780  0717  07FB               	addwf	___wmul@product,f
  3781  0718  1803               	skipnc
  3782  0719  0AFC               	incf	___wmul@product+1,f
  3783  071A  087A               	movf	___wmul@multiplicand+1,w
  3784  071B  07FC               	addwf	___wmul@product+1,f
  3785  071C                     i1l2285:	
  3786  071C  1003               	clrc
  3787  071D  0DF9               	rlf	___wmul@multiplicand,f
  3788  071E  0DFA               	rlf	___wmul@multiplicand+1,f
  3789  071F  1003               	clrc
  3790  0720  0CF8               	rrf	___wmul@multiplier+1,f
  3791  0721  0CF7               	rrf	___wmul@multiplier,f
  3792  0722  0877               	movf	___wmul@multiplier,w
  3793  0723  0478               	iorwf	___wmul@multiplier+1,w
  3794  0724  1D03               	btfss	3,2
  3795  0725  2F14               	goto	i1l2281
  3796  0726  087C               	movf	___wmul@product+1,w
  3797  0727  00F8               	movwf	?___wmul+1
  3798  0728  087B               	movf	___wmul@product,w
  3799  0729  00F7               	movwf	?___wmul
  3800  072A  0008               	return
  3801  072B                     __end_of___wmul:	
  3802                           
  3803                           	psect	text18
  3804  060F                     __ptext18:	
  3805 ;; *************** function ___bmul *****************
  3806 ;; Defined at:
  3807 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  multiplier      1    wreg     unsigned char 
  3810 ;;  multiplicand    1    0[COMMON] unsigned char 
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  multiplier      1    2[COMMON] unsigned char 
  3813 ;;  product         1    1[COMMON] unsigned char 
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  1    wreg      unsigned char 
  3816 ;; Registers used:
  3817 ;;		wreg, status,2, status,0
  3818 ;; Tracked objects:
  3819 ;;		On entry : 100/0
  3820 ;;		On exit  : 100/0
  3821 ;;		Unchanged: 100/0
  3822 ;; Data sizes:     COMMON   BANK0   BANK1
  3823 ;;      Params:         1       0       0
  3824 ;;      Locals:         2       0       0
  3825 ;;      Temps:          0       0       0
  3826 ;;      Totals:         3       0       0
  3827 ;;Total ram usage:        3 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; This function calls:
  3830 ;;		Nothing
  3831 ;; This function is called by:
  3832 ;;		_isr
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           
  3837                           ;psect for function ___bmul
  3838  060F                     ___bmul:	
  3839                           
  3840                           ;incstack = 0
  3841                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3842                           ;___bmul@multiplier stored from wreg
  3843  060F  00F9               	movwf	___bmul@multiplier
  3844  0610  01F8               	clrf	___bmul@product
  3845  0611  0877               	movf	___bmul@multiplicand,w
  3846  0612  1879               	btfsc	___bmul@multiplier,0
  3847  0613  07F8               	addwf	___bmul@product,f
  3848  0614  1003               	clrc
  3849  0615  0DF7               	rlf	___bmul@multiplicand,f
  3850  0616  0877               	movf	___bmul@multiplicand,w
  3851  0617  18F9               	btfsc	___bmul@multiplier,1
  3852  0618  07F8               	addwf	___bmul@product,f
  3853  0619  1003               	clrc
  3854  061A  0DF7               	rlf	___bmul@multiplicand,f
  3855  061B  0877               	movf	___bmul@multiplicand,w
  3856  061C  1979               	btfsc	___bmul@multiplier,2
  3857  061D  07F8               	addwf	___bmul@product,f
  3858  061E  1003               	clrc
  3859  061F  0DF7               	rlf	___bmul@multiplicand,f
  3860  0620  0877               	movf	___bmul@multiplicand,w
  3861  0621  19F9               	btfsc	___bmul@multiplier,3
  3862  0622  07F8               	addwf	___bmul@product,f
  3863  0623  1003               	clrc
  3864  0624  0DF7               	rlf	___bmul@multiplicand,f
  3865  0625  0877               	movf	___bmul@multiplicand,w
  3866  0626  1A79               	btfsc	___bmul@multiplier,4
  3867  0627  07F8               	addwf	___bmul@product,f
  3868  0628  1003               	clrc
  3869  0629  0DF7               	rlf	___bmul@multiplicand,f
  3870  062A  0877               	movf	___bmul@multiplicand,w
  3871  062B  1AF9               	btfsc	___bmul@multiplier,5
  3872  062C  07F8               	addwf	___bmul@product,f
  3873  062D  1003               	clrc
  3874  062E  0DF7               	rlf	___bmul@multiplicand,f
  3875  062F  0877               	movf	___bmul@multiplicand,w
  3876  0630  1B79               	btfsc	___bmul@multiplier,6
  3877  0631  07F8               	addwf	___bmul@product,f
  3878  0632  1003               	clrc
  3879  0633  0DF7               	rlf	___bmul@multiplicand,f
  3880  0634  0877               	movf	___bmul@multiplicand,w
  3881  0635  1BF9               	btfsc	___bmul@multiplier,7
  3882  0636  07F8               	addwf	___bmul@product,f
  3883  0637  0878               	movf	___bmul@product,w
  3884  0638  0008               	return
  3885  0639                     __end_of___bmul:	
  3886                           
  3887                           	psect	text19
  3888  06AD                     __ptext19:	
  3889 ;; *************** function _Read_Mode_Input *****************
  3890 ;; Defined at:
  3891 ;;		line 462 in file "main.c"
  3892 ;; Parameters:    Size  Location     Type
  3893 ;;		None
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;		None
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  1    wreg      void 
  3898 ;; Registers used:
  3899 ;;		wreg, status,2, status,0
  3900 ;; Tracked objects:
  3901 ;;		On entry : 100/0
  3902 ;;		On exit  : 100/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMMON   BANK0   BANK1
  3905 ;;      Params:         0       0       0
  3906 ;;      Locals:         0       0       0
  3907 ;;      Temps:          0       0       0
  3908 ;;      Totals:         0       0       0
  3909 ;;Total ram usage:        0 bytes
  3910 ;; Hardware stack levels used:    1
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_isr
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           
  3919                           ;psect for function _Read_Mode_Input
  3920  06AD                     _Read_Mode_Input:	
  3921                           
  3922                           ;main.c: 464: if ((GPIObits.GP2))
  3923                           
  3924                           ;incstack = 0
  3925                           ; Regs used in _Read_Mode_Input: [wreg+status,2+status,0]
  3926  06AD  1D05               	btfss	5,2	;volatile
  3927  06AE  2EB9               	goto	i1l1665
  3928                           
  3929                           ;main.c: 465: { GLOBAL_MODE1_LOW_counter = 0;
  3930  06AF  01B2               	clrf	_GLOBAL_MODE1_LOW_counter	;volatile
  3931                           
  3932                           ;main.c: 466: if (GLOBAL_MODE1_counter < 4) GLOBAL_MODE1_counter++;
  3933  06B0  3004               	movlw	4
  3934  06B1  0235               	subwf	_GLOBAL_MODE1_counter,w	;volatile
  3935  06B2  1803               	skipnc
  3936  06B3  2EB6               	goto	i1l1663
  3937  06B4  0AB5               	incf	_GLOBAL_MODE1_counter,f	;volatile
  3938  06B5  2EC1               	goto	i1l1673
  3939  06B6                     i1l1663:	
  3940                           
  3941                           ;main.c: 467: else bGLOBAL_MODE1_PRESSED = 1;
  3942  06B6  3001               	movlw	1
  3943  06B7  00A8               	movwf	_bGLOBAL_MODE1_PRESSED	;volatile
  3944  06B8  2EC1               	goto	i1l1673
  3945  06B9                     i1l1665:	
  3946                           
  3947                           ;main.c: 469: GLOBAL_MODE1_counter = 0;
  3948  06B9  01B5               	clrf	_GLOBAL_MODE1_counter	;volatile
  3949                           
  3950                           ;main.c: 470: if (GLOBAL_MODE1_LOW_counter < 4) GLOBAL_MODE1_LOW_counter++;
  3951  06BA  3004               	movlw	4
  3952  06BB  0232               	subwf	_GLOBAL_MODE1_LOW_counter,w	;volatile
  3953  06BC  1803               	skipnc
  3954  06BD  2EC0               	goto	i1l1671
  3955  06BE  0AB2               	incf	_GLOBAL_MODE1_LOW_counter,f	;volatile
  3956  06BF  2EC1               	goto	i1l1673
  3957  06C0                     i1l1671:	
  3958                           
  3959                           ;main.c: 471: else bGLOBAL_MODE1_PRESSED = 0;
  3960  06C0  01A8               	clrf	_bGLOBAL_MODE1_PRESSED	;volatile
  3961  06C1                     i1l1673:	
  3962                           
  3963                           ;main.c: 472: }
  3964                           ;main.c: 482: if (!(GPIObits.GP4))
  3965  06C1  1A05               	btfsc	5,4	;volatile
  3966  06C2  2EC9               	goto	i1l1681
  3967                           
  3968                           ;main.c: 483: { GLOBAL_SYNC_Line_LOW_counter = 0;
  3969  06C3  01B1               	clrf	_GLOBAL_SYNC_Line_LOW_counter	;volatile
  3970                           
  3971                           ;main.c: 484: if (GLOBAL_SYNC_Line_counter < 9+0) GLOBAL_SYNC_Line_counter++;
  3972  06C4  3009               	movlw	9
  3973  06C5  0234               	subwf	_GLOBAL_SYNC_Line_counter,w	;volatile
  3974  06C6  1C03               	btfss	3,0
  3975  06C7  0AB4               	incf	_GLOBAL_SYNC_Line_counter,f	;volatile
  3976  06C8  0008               	return
  3977  06C9                     i1l1681:	
  3978                           
  3979                           ;main.c: 487: GLOBAL_SYNC_Line_counter = 0;
  3980  06C9  01B4               	clrf	_GLOBAL_SYNC_Line_counter	;volatile
  3981                           
  3982                           ;main.c: 488: if (GLOBAL_SYNC_Line_LOW_counter < 7) GLOBAL_SYNC_Line_LOW_counter++;
  3983  06CA  3007               	movlw	7
  3984  06CB  0231               	subwf	_GLOBAL_SYNC_Line_LOW_counter,w	;volatile
  3985  06CC  1803               	skipnc
  3986  06CD  2ED0               	goto	i1l1687
  3987  06CE  0AB1               	incf	_GLOBAL_SYNC_Line_LOW_counter,f	;volatile
  3988  06CF  0008               	return
  3989  06D0                     i1l1687:	
  3990                           
  3991                           ;main.c: 489: else bGLOBAL_SYNC_Line_PRESSED = 0;
  3992  06D0  01A6               	clrf	_bGLOBAL_SYNC_Line_PRESSED	;volatile
  3993  06D1  0008               	return
  3994  06D2                     __end_of_Read_Mode_Input:	
  3995  007E                     btemp	set	126	;btemp
  3996  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    546
    Data        0
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     21      62
    BANK1            32      0       0

Pointer List with Targets:

    __ctoee@addr	PTR eeprom void  size(1) Largest target is 2
		 -> EEprom_InPhase(EEDATA[2]), EEprom_mode(EEDATA[2]), EEprom_Written_Flag(EEDATA[1]), 

    __eetoc@addr	PTR eeprom void  size(1) Largest target is 2
		 -> EEprom_InPhase(EEDATA[2]), EEprom_mode(EEDATA[2]), EEprom_Written_Flag(EEDATA[1]), 

    memcpyee@to	PTR eeprom unsigned char  size(1) Largest target is 2
		 -> EEprom_InPhase(EEDATA[2]), EEprom_mode(EEDATA[2]), EEprom_Written_Flag(EEDATA[1]), 

    memcpyee@from	PTR const unsigned char  size(1) Largest target is 4
		 -> __fltoee@data(COMMON[3]), __fttoee@data(COMMON[3]), __ltoee@data(COMMON[4]), __mtoee@data(COMMON[3]), 
		 -> __itoee@data(COMMON[2]), __ctoee@data(BANK0[1]), 

    memcpyee@ptr	PTR const unsigned char  size(1) Largest target is 4
		 -> __fltoee@data(COMMON[3]), __fttoee@data(COMMON[3]), __ltoee@data(COMMON[4]), __mtoee@data(COMMON[3]), 
		 -> __itoee@data(COMMON[2]), __ctoee@data(BANK0[1]), 

    eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 2
		 -> EEprom_InPhase(EEDATA[2]), EEprom_mode(EEDATA[2]), EEprom_Written_Flag(EEDATA[1]), 

    eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 4
		 -> __eetofl@data(COMMON[3]), __eetoft@data(COMMON[3]), __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), 
		 -> __eetoi@data(COMMON[2]), __eetoc@data(BANK0[1]), 

    eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 4
		 -> __eetofl@data(COMMON[3]), __eetoft@data(COMMON[3]), __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), 
		 -> __eetoi@data(COMMON[2]), __eetoc@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___wmul

Critical Paths under _main in BANK0

    _main->_Initial_Start
    _WriteEEPROMDefaults->_ReWriteEEPROM
    ___eetoc->_eecpymem
    _InitApp->_WaitForSYNC_PU
    _INC_EEPROM_MODE->_ReWriteEEPROM
    _ReWriteEEPROM->___ctoee
    ___ctoee->_memcpyee

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6736
                                             20 BANK0      1     1      0
                _ConfigureOscillator
                    _INC_EEPROM_MODE
                            _InitApp
                      _Initial_Start
                      _ReWriteEEPROM
                          _SetOUTPUT
          _Update_ComboPattern_Index
             _Update_Input_Mode_Type
 ---------------------------------------------------------------------------------
 (1) _SetOUTPUT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initial_Start                                        3     3      0    3738
                                             17 BANK0      3     3      0
          _Update_ComboPattern_Index
             _Update_Input_Mode_Type
                _WriteEEPROMDefaults
                            ___eetoc
 ---------------------------------------------------------------------------------
 (2) _WriteEEPROMDefaults                                  0     0      0    2463
                      _ReWriteEEPROM
                            ___eetoc
 ---------------------------------------------------------------------------------
 (2) ___eetoc                                              2     2      0    1049
                                             14 BANK0      2     2      0
                           _eecpymem
 ---------------------------------------------------------------------------------
 (3) _eecpymem                                             4     2      2     890
                                             10 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Update_Input_Mode_Type                               0     0      0       0
          _Update_ComboPattern_Index
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0      40
                     _WaitForSYNC_PU
 ---------------------------------------------------------------------------------
 (2) _WaitForSYNC_PU                                       1     1      0      40
                                             10 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _INC_EEPROM_MODE                                      1     1      0    1479
                                             17 BANK0      1     1      0
                      _ReWriteEEPROM
          _Update_ComboPattern_Index
 ---------------------------------------------------------------------------------
 (2) _Update_ComboPattern_Index                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReWriteEEPROM                                        1     1      0    1414
                                             16 BANK0      1     1      0
                            ___ctoee
 ---------------------------------------------------------------------------------
 (2) ___ctoee                                              2     1      1    1222
                                             14 BANK0      2     1      1
                           _memcpyee
 ---------------------------------------------------------------------------------
 (3) _memcpyee                                             4     2      2     890
                                             10 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                 11    11      0     120
                                              6 COMMON     1     1      0
                                              0 BANK0     10    10      0
                    _Read_Mode_Input
                             ___bmul
                             ___wmul
                        i1_SetOUTPUT
 ---------------------------------------------------------------------------------
 (7) i1_SetOUTPUT                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4      22
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___bmul                                               3     2      1      26
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (7) _Read_Mode_Input                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _INC_EEPROM_MODE
     _ReWriteEEPROM
       ___ctoee
         _memcpyee
     _Update_ComboPattern_Index
   _InitApp
     _WaitForSYNC_PU
   _Initial_Start
     _Update_ComboPattern_Index
     _Update_Input_Mode_Type
       _Update_ComboPattern_Index
     _WriteEEPROMDefaults
       _ReWriteEEPROM
         ___ctoee
           _memcpyee
       ___eetoc
         _eecpymem
     ___eetoc
       _eecpymem
   _ReWriteEEPROM
     ___ctoee
       _memcpyee
   _SetOUTPUT
   _Update_ComboPattern_Index
   _Update_Input_Mode_Type
     _Update_ComboPattern_Index

 _isr (ROOT)
   _Read_Mode_Input
   ___bmul
   ___wmul
   i1_SetOUTPUT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       5       0        2.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50     15      3E       4       77.5%
BANK1               20      0       0       5        0.0%
ABS                  0      0      4C       6        0.0%
BITBANK1            20      0       0       7        0.0%
DATA                 0      0      4C       8        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Feb 04 18:32:14 2019

                        __CFG_CP$ON 0000                                   pc 0002  
                  _ROM_Sub_Patterns 0246                      ___bmul@product 0078  
            _Update_Input_Mode_Type 072B                                  _RD 04E0  
                       __CFG_CPD$ON 0000                                  _WR 04E1  
                                fsr 0004                 ___wmul@multiplicand 0079  
            Initial_Start@read_data 005B                                 l302 0732  
                               l322 049D                                 l412 06E1  
                               l407 06D5                                 l352 0771  
                               l424 05F2                                 l257 074C  
                               l329 04C8                                 l419 05E4  
                               _GIE 005F                        ___ctoee@addr 0058  
                               _WPU 0095                        ___ctoee@data 0057  
                               _isr 0334                                 fsr0 0004  
                               indf 0000                  _GLOBAL_CHANNELS_EN 002F  
    _GLOBAL_sub_patterns_index_copy 0045                                l2213 06AB  
                              l2205 069C                                l2135 05ED  
                              l1503 0517                                l2223 0668  
                              l2161 06F7                                l1515 0527  
                              l2147 06DC                                l2235 0682  
                              l1517 0529                                l2181 074F  
                              l2229 0669                                l1543 054C  
                              l2175 074D                                l1529 053A  
                              l1641 05CD                                l1625 05B1  
                              l1609 05AA                                l1491 0505  
                              l1651 05DC                                l1635 05C7  
                              l1643 05D0                                l1557 055B  
                              l1653 05DF                                l1637 05C8  
                              l1629 05BF                                l2613 04F8  
                              l2541 0491                                l2525 0482  
                              l2607 04F1                                l2617 04FC  
                              l2571 04C4                                l2547 0499  
                              l1597 0737                                l2573 04CA  
                              l2549 049F                                l2567 04BE  
                              l2583 04D4                                l2587 04DC  
                              l2597 04E6                                ?_isr 0077  
                      __CFG_WDTE$ON 0000                                _GPIO 0005  
                              u2800 04B3                                u2790 04B2  
                              i1l75 0415                                _TMR0 0001  
                              _WREN 04E2              __size_of_ReWriteEEPROM 0020  
                     __CFG_FCMEN$ON 0000            __size_of_Read_Mode_Input 0025  
                              _main 047D                     isr@tenMSCounter 0039  
                              btemp 007E                       __CFG_BOREN$ON 0000  
            __size_of_Initial_Start 0027                                start 000F  
                     __CFG_IESO$OFF 0000                   ___bmul@multiplier 0079  
       _GLOBAL_Selected_Mode_Number 0070                     __end_of_InitApp 0661  
                             ??_isr 0049                      _WaitForSYNC_PU 074D  
  _GLOBAL_sub_patterns_column_index 0076                               ?_main 0077  
                   __end_of___eetoc 0767                               _EEADR 009B  
                   __end_of___ctoee 076E                               _CARRY 0018  
                             _ANSEL 009F                               i1l101 0469  
                             i1l103 0472    _GLOBAL_combo_patterns_index_copy 0044  
               _ConfigureOscillator 076E             __end_of_INC_EEPROM_MODE 06AD  
      _GLOBAL_SYNC_Line_LOW_counter 0031                        main@tempvar1 005D  
                             pclath 000A            _GLOBAL_MODE1_LOW_counter 0032  
                             status 0003                               wtemp0 007E  
              ?_ConfigureOscillator 0077                      ReWriteEEPROM@i 0059  
                    __CFG_MCLRE$OFF 0000                     __initialization 0010  
            __end_of_WaitForSYNC_PU 0757                        __end_of_main 0505  
               SetOUTPUT@pwmCounter 0024         ??_Update_ComboPattern_Index 0053  
                     _ReWriteEEPROM 06F2                              ??_main 005D  
            SetOUTPUT@temporaryGPIO 0025                       _Initial_Start 0661  
                    Initial_Start@i 005C                              _EEDATA 009A  
                            _EECON1 009C                              _EECON2 009D  
                            _CMCON0 0019                          _bDualColor 003F  
                            i1l2411 03B2                              i1l2403 03A8  
                            i1l2501 0459                              i1l2503 045A  
                            i1l2431 03E5                              i1l2281 0714  
                            i1l1801 057F                              i1l2441 0411  
                            i1l2361 0340                              i1l2285 071C  
                            i1l1813 058D                              i1l2445 0414  
                            i1l2437 040C                              i1l2429 03E3  
                            i1l2517 0471                              i1l1671 06C0  
                            i1l1663 06B6                              i1l1823 059C  
                            i1l1807 0587                              i1l1815 0590  
                            i1l1681 06C9                              i1l1673 06C1  
                            i1l1665 06B9                              i1l1825 059F  
                            i1l1809 0588                              i1l2377 0354  
                            i1l2475 043C                              i1l2467 0433  
                            i1l2459 042A                              i1l2395 039E  
                            i1l2387 0393                              i1l1781 0569  
                            i1l1687 06D0                              i1l2495 044F  
                            i1l2399 03A3                              i1l1797 0570  
                            _INTCON 000B            _GLOBAL_MODE2_LOW_counter 0030  
                            _OSCCON 008F           _bGLOBAL_SYNC_Line_PRESSED 0026  
                            _WDTCON 0018                              _TRISIO 0085  
                 _bGLOBAL_STEADY_ON 0047                           ??_InitApp 0054  
             ??_ConfigureOscillator 0053                    _GLOBAL_Mode_copy 0022  
                    __CFG_PWRTE$OFF 0000                    __end_of_eecpymem 06F2  
                __size_of_SetOUTPUT 0040         __end_of_WriteEEPROMDefaults 074D  
                 ??_Read_Mode_Input 0077                              ___bmul 060F  
                   ?_WaitForSYNC_PU 0077                              ___wmul 0712  
                         ??___eetoc 0057                           ??___ctoee 0058  
                       memcpyee@ptr 0055                      ?_ReWriteEEPROM 0077  
                  __end_of_memcpyee 060F                   _bGLOBAL_SYNC_SENT 003D  
                    ?_Initial_Start 0077            _bGLOBAL_CHANGING_PATTERN 002C  
                      ?i1_SetOUTPUT 0077                              saved_w 007E  
                  ?_INC_EEPROM_MODE 0077            __end_of_ROM_Sub_Patterns 02BD  
         _Update_ComboPattern_Index 0505             __end_of__initialization 0019  
             _ROM_Sub_Patterns_Time 02BD                      _EEprom_InPhase 0000  
               ___bmul@multiplicand 0077             ?_Update_Input_Mode_Type 0077  
                    __pcstackCOMMON 0077                      _OPTION_REGbits 0081  
                 __end_of_SetOUTPUT 05E1                          __pbssBANK0 0020  
    __end_of_Update_Input_Mode_Type 0740    _bGLOBAL_CHANGING_PATTERN_Enforce 002B  
                        __pmaintext 047D                     ??_ReWriteEEPROM 0059  
                           ?___bmul 0077                             ?___wmul 0077  
                        __pintentry 0004                     ??_Initial_Start 005A  
     _bGLOBAL_OUTPUT_BUFFER_CHANGED 0048                           ?_eecpymem 0053  
     INC_EEPROM_MODE@Temp_Mode_Data 005A           _GLOBAL_Selected_Mode_Type 0037  
             _bGLOBAL_MODE1_PRESSED 0028               _bGLOBAL_MODE2_PRESSED 0027  
                        __stringtab 0100                           ?_memcpyee 0053  
                           _InitApp 0639                     __size_of___bmul 002A  
                           ___eetoc 075F                             ___ctoee 0767  
                   __size_of___wmul 0019          _bGLOBAL_END_OF_CYCLE_COND1 0042  
        _bGLOBAL_END_OF_CYCLE_COND2 0041                        memcpyee@from 0053  
                           __ptext1 05A1                             __ptext2 0661  
                           __ptext3 0740                             __ptext4 075F  
                           __ptext5 06D2                             __ptext6 072B  
                           __ptext7 0639                             __ptext8 074D  
                           __ptext9 0688                        memcpyee@size 0054  
                      __size_of_isr 0149                          ??_eecpymem 0055  
              __size_ofi1_SetOUTPUT 0041                             clrloop0 0758  
              end_of_initialization 0019                     _Read_Mode_Input 06AD  
               _bGLOBAL_ENABLE_LEDS 0029                          ??_memcpyee 0055  
                  ??_WaitForSYNC_PU 0053                          eecpymem@cp 0055  
                        eecpymem@to 0056  __size_of_Update_ComboPattern_Index 005B  
         _GLOBAL_sub_patterns_index 0075           _GLOBAL_sub_patterns_timer 0046  
                      __pstringtext 0100         _GLOBAL_combo_patterns_index 0043  
              _channelToBeDisplayed 0072         __end_of_ConfigureOscillator 0775  
     _GLOBAL_combo_patterns_counter 0038                      __end_of___bmul 0639  
                    __end_of___wmul 072B        __size_of_WriteEEPROMDefaults 000D  
               start_initialization 0010             __end_of_Read_Mode_Input 06D2  
                       __end_of_isr 047D                           _SetOUTPUT 05A1  
          __size_of_INC_EEPROM_MODE 0025                            ??___bmul 0078  
                        memcpyee@to 0056                            ??___wmul 007B  
                       __pbssEEDATA 0000                         __pbssCOMMON 0070  
                         ___latbits 0000                       __pcstackBANK0 0049  
                 __size_of_eecpymem 0020                          ?_SetOUTPUT 0077  
                          ?_InitApp 0077                   __size_of_memcpyee 002E  
                          ?___eetoc 0077                            ?___ctoee 0057  
             __end_of_ReWriteEEPROM 0712               __end_of_Initial_Start 0688  
        __end_of_ROM_COMBO_Patterns 0246                    ?_Read_Mode_Input 0077  
 _bGLOBAL_DISABLE_SYNC_Line_PRESSED 002D                   interrupt_function 0004  
                    ___wmul@product 007B                            _GPIObits 0005  
                         clear_ram0 0757                   ??_INC_EEPROM_MODE 005A  
          _GLOBAL_SYNC_Line_counter 0034                         __stringbase 0112  
                 ___wmul@multiplier 0077      _GLOBAL_Selected_Mode_Type_copy 0036  
                     ??i1_SetOUTPUT 0077              _bGLOBAL_IS_PROGRAMMING 002A  
                       ??_SetOUTPUT 0053            ??_Update_Input_Mode_Type 0053  
               _WriteEEPROMDefaults 0740           _GLOBAL_SYNC_PULSE_Counter 0071  
                  __size_of_InitApp 0028                       isr@temp_data1 007D  
                  __size_of___eetoc 0008                     _bGLOBAL_InPhase 0040  
                  __size_of___ctoee 0007                ?_WriteEEPROMDefaults 0077  
                __end_of__stringtab 0112                        eecpymem@from 0053  
                          _eecpymem 06D2                        eecpymem@size 0054  
                          __ptext10 0505                            __ptext11 06F2  
                          __ptext12 0767                            __ptext13 05E1  
                          __ptext14 076E                            __ptext15 0334  
                          __ptext16 0560                            __ptext17 0712  
                          __ptext18 060F                            __ptext19 06AD  
               __end_ofi1_SetOUTPUT 05A1                            _memcpyee 05E1  
                     __size_of_main 0088        __size_of_ConfigureOscillator 0007  
        ?_Update_ComboPattern_Index 0077             __size_of_WaitForSYNC_PU 000A  
             ??_WriteEEPROMDefaults 005A                          _INTCONbits 000B  
_GLOBAL_combo_patterns_column_index 0073                       _OUTPUT_BUFFER 0074  
     __end_of_ROM_Sub_Patterns_Time 0334                            intlevel1 0000  
                       _EEprom_mode 0002     __size_of_Update_Input_Mode_Type 0015  
                         stringcode 010A                 _EEprom_Written_Flag 0004  
                        _OSCCONbits 008F               WaitForSYNC_PU@temp001 0053  
 __end_of_Update_ComboPattern_Index 0560               _GLOBAL_Dummy_Counter2 003A  
                _OUTPUT_BUFFER_COPY 003C                         i1_SetOUTPUT 0560  
                          stringtab 0100             _GLOBAL_CHANNELS_EN_DUAL 003E  
              _bGLOBAL_InPhase_copy 0020                _GLOBAL_Dummy_Counter 003B  
           _GLOBAL_CHANNELS_EN_copy 002E                  __CFG_FOSC$INTOSCIO 0000  
                   _INC_EEPROM_MODE 0688                  _ROM_COMBO_Patterns 0112  
                        _TRISIObits 0085                _GLOBAL_MODE1_counter 0035  
                      ___eetoc@addr 0057                        ___eetoc@data 0058  
              _GLOBAL_MODE2_counter 0033  
