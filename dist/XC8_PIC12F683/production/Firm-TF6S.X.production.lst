

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Wed Feb 06 12:50:29 2019

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	12F683
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	pa_nodes0,global,class=CODE,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC12F683 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  008C                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0092                     	;# 
   101  0095                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0096                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  0081                     	;# 
   138  0085                     	;# 
   139  008C                     	;# 
   140  008E                     	;# 
   141  008F                     	;# 
   142  0090                     	;# 
   143  0092                     	;# 
   144  0095                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0096                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  008C                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0092                     	;# 
   187  0095                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0096                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  000A                     	;# 
   206  000B                     	;# 
   207  000C                     	;# 
   208  000E                     	;# 
   209  000E                     	;# 
   210  000F                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0013                     	;# 
   216  0014                     	;# 
   217  0015                     	;# 
   218  0018                     	;# 
   219  0019                     	;# 
   220  001A                     	;# 
   221  001E                     	;# 
   222  001F                     	;# 
   223  0081                     	;# 
   224  0085                     	;# 
   225  008C                     	;# 
   226  008E                     	;# 
   227  008F                     	;# 
   228  0090                     	;# 
   229  0092                     	;# 
   230  0095                     	;# 
   231  0095                     	;# 
   232  0096                     	;# 
   233  0096                     	;# 
   234  0099                     	;# 
   235  009A                     	;# 
   236  009A                     	;# 
   237  009B                     	;# 
   238  009C                     	;# 
   239  009D                     	;# 
   240  009E                     	;# 
   241  009F                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  000A                     	;# 
   249  000B                     	;# 
   250  000C                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0013                     	;# 
   259  0014                     	;# 
   260  0015                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  008C                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0092                     	;# 
   273  0095                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0096                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285                           
   286                           	psect	stringtext
   287  0100                     __pstringtext:	
   288  0100                     stringtab:	
   289  0100                     __stringtab:	
   290                           
   291                           ;	String table - string pointers are 2 bytes each
   292  0100  1BFF               	btfsc	btemp+1,7
   293  0101  290A               	ljmp	stringcode
   294  0102  1383               	bcf	3,7
   295  0103  187F               	btfsc	btemp+1,0
   296  0104  1783               	bsf	3,7
   297  0105  0800               	movf	0,w
   298  0106  0A84               	incf	4,f
   299  0107  1903               	skipnz
   300  0108  0AFF               	incf	btemp+1,f
   301  0109  0008               	return
   302  010A                     stringcode:	
   303  010A  087F               	movf	btemp+1,w
   304  010B  397F               	andlw	127
   305  010C  008A               	movwf	10
   306  010D  0804               	movf	4,w
   307  010E  0A84               	incf	4,f
   308  010F  1903               	skipnz
   309  0110  0AFF               	incf	btemp+1,f
   310  0111  0082               	movwf	2
   311  0112                     __stringbase:	
   312  0112                     __end_of__stringtab:	
   313  0112                     _ROM_COMBO_Patterns:	
   314  0112  3403               	retlw	3
   315  0113  3402               	retlw	2
   316  0114  3403               	retlw	3
   317  0115  3402               	retlw	2
   318  0116  3463               	retlw	99
   319  0117  3463               	retlw	99
   320  0118  3463               	retlw	99
   321  0119  3463               	retlw	99
   322  011A  3463               	retlw	99
   323  011B  3463               	retlw	99
   324  011C  3463               	retlw	99
   325  011D  3463               	retlw	99
   326  011E  3463               	retlw	99
   327  011F  3463               	retlw	99
   328  0120  3463               	retlw	99
   329  0121  3463               	retlw	99
   330  0122  3463               	retlw	99
   331  0123  3463               	retlw	99
   332  0124  3463               	retlw	99
   333  0125  3463               	retlw	99
   334  0126  3463               	retlw	99
   335  0127  3463               	retlw	99
   336  0128  3401               	retlw	1
   337  0129  3400               	retlw	0
   338  012A  3401               	retlw	1
   339  012B  3400               	retlw	0
   340  012C  3463               	retlw	99
   341  012D  3463               	retlw	99
   342  012E  3463               	retlw	99
   343  012F  3463               	retlw	99
   344  0130  3463               	retlw	99
   345  0131  3463               	retlw	99
   346  0132  3463               	retlw	99
   347  0133  3463               	retlw	99
   348  0134  3463               	retlw	99
   349  0135  3463               	retlw	99
   350  0136  3463               	retlw	99
   351  0137  3463               	retlw	99
   352  0138  3463               	retlw	99
   353  0139  3463               	retlw	99
   354  013A  3463               	retlw	99
   355  013B  3463               	retlw	99
   356  013C  3463               	retlw	99
   357  013D  3463               	retlw	99
   358  013E  3403               	retlw	3
   359  013F  3402               	retlw	2
   360  0140  3403               	retlw	3
   361  0141  3402               	retlw	2
   362  0142  3403               	retlw	3
   363  0143  3402               	retlw	2
   364  0144  3401               	retlw	1
   365  0145  3400               	retlw	0
   366  0146  3401               	retlw	1
   367  0147  3400               	retlw	0
   368  0148  3401               	retlw	1
   369  0149  3400               	retlw	0
   370  014A  3401               	retlw	1
   371  014B  3400               	retlw	0
   372  014C  3463               	retlw	99
   373  014D  3463               	retlw	99
   374  014E  3463               	retlw	99
   375  014F  3463               	retlw	99
   376  0150  3463               	retlw	99
   377  0151  3463               	retlw	99
   378  0152  3463               	retlw	99
   379  0153  3463               	retlw	99
   380  0154  3404               	retlw	4
   381  0155  3402               	retlw	2
   382  0156  3404               	retlw	4
   383  0157  3402               	retlw	2
   384  0158  3463               	retlw	99
   385  0159  3463               	retlw	99
   386  015A  3463               	retlw	99
   387  015B  3463               	retlw	99
   388  015C  3463               	retlw	99
   389  015D  3463               	retlw	99
   390  015E  3463               	retlw	99
   391  015F  3463               	retlw	99
   392  0160  3463               	retlw	99
   393  0161  3463               	retlw	99
   394  0162  3463               	retlw	99
   395  0163  3463               	retlw	99
   396  0164  3463               	retlw	99
   397  0165  3463               	retlw	99
   398  0166  3463               	retlw	99
   399  0167  3463               	retlw	99
   400  0168  3463               	retlw	99
   401  0169  3463               	retlw	99
   402  016A  3406               	retlw	6
   403  016B  3400               	retlw	0
   404  016C  3406               	retlw	6
   405  016D  3400               	retlw	0
   406  016E  3463               	retlw	99
   407  016F  3463               	retlw	99
   408  0170  3463               	retlw	99
   409  0171  3463               	retlw	99
   410  0172  3463               	retlw	99
   411  0173  3463               	retlw	99
   412  0174  3463               	retlw	99
   413  0175  3463               	retlw	99
   414  0176  3463               	retlw	99
   415  0177  3463               	retlw	99
   416  0178  3463               	retlw	99
   417  0179  3463               	retlw	99
   418  017A  3463               	retlw	99
   419  017B  3463               	retlw	99
   420  017C  3463               	retlw	99
   421  017D  3463               	retlw	99
   422  017E  3463               	retlw	99
   423  017F  3463               	retlw	99
   424  0180  3404               	retlw	4
   425  0181  3402               	retlw	2
   426  0182  3404               	retlw	4
   427  0183  3402               	retlw	2
   428  0184  3404               	retlw	4
   429  0185  3402               	retlw	2
   430  0186  3406               	retlw	6
   431  0187  3400               	retlw	0
   432  0188  3406               	retlw	6
   433  0189  3400               	retlw	0
   434  018A  3406               	retlw	6
   435  018B  3400               	retlw	0
   436  018C  3406               	retlw	6
   437  018D  3400               	retlw	0
   438  018E  3463               	retlw	99
   439  018F  3463               	retlw	99
   440  0190  3463               	retlw	99
   441  0191  3463               	retlw	99
   442  0192  3463               	retlw	99
   443  0193  3463               	retlw	99
   444  0194  3463               	retlw	99
   445  0195  3463               	retlw	99
   446  0196  3405               	retlw	5
   447  0197  3402               	retlw	2
   448  0198  3405               	retlw	5
   449  0199  3402               	retlw	2
   450  019A  3463               	retlw	99
   451  019B  3463               	retlw	99
   452  019C  3463               	retlw	99
   453  019D  3463               	retlw	99
   454  019E  3463               	retlw	99
   455  019F  3463               	retlw	99
   456  01A0  3463               	retlw	99
   457  01A1  3463               	retlw	99
   458  01A2  3463               	retlw	99
   459  01A3  3463               	retlw	99
   460  01A4  3463               	retlw	99
   461  01A5  3463               	retlw	99
   462  01A6  3463               	retlw	99
   463  01A7  3463               	retlw	99
   464  01A8  3463               	retlw	99
   465  01A9  3463               	retlw	99
   466  01AA  3463               	retlw	99
   467  01AB  3463               	retlw	99
   468  01AC  3407               	retlw	7
   469  01AD  3400               	retlw	0
   470  01AE  3407               	retlw	7
   471  01AF  3400               	retlw	0
   472  01B0  3463               	retlw	99
   473  01B1  3463               	retlw	99
   474  01B2  3463               	retlw	99
   475  01B3  3463               	retlw	99
   476  01B4  3463               	retlw	99
   477  01B5  3463               	retlw	99
   478  01B6  3463               	retlw	99
   479  01B7  3463               	retlw	99
   480  01B8  3463               	retlw	99
   481  01B9  3463               	retlw	99
   482  01BA  3463               	retlw	99
   483  01BB  3463               	retlw	99
   484  01BC  3463               	retlw	99
   485  01BD  3463               	retlw	99
   486  01BE  3463               	retlw	99
   487  01BF  3463               	retlw	99
   488  01C0  3463               	retlw	99
   489  01C1  3463               	retlw	99
   490  01C2  3405               	retlw	5
   491  01C3  3402               	retlw	2
   492  01C4  3405               	retlw	5
   493  01C5  3402               	retlw	2
   494  01C6  3405               	retlw	5
   495  01C7  3402               	retlw	2
   496  01C8  3407               	retlw	7
   497  01C9  3400               	retlw	0
   498  01CA  3407               	retlw	7
   499  01CB  3400               	retlw	0
   500  01CC  3407               	retlw	7
   501  01CD  3400               	retlw	0
   502  01CE  3407               	retlw	7
   503  01CF  3400               	retlw	0
   504  01D0  3463               	retlw	99
   505  01D1  3463               	retlw	99
   506  01D2  3463               	retlw	99
   507  01D3  3463               	retlw	99
   508  01D4  3463               	retlw	99
   509  01D5  3463               	retlw	99
   510  01D6  3463               	retlw	99
   511  01D7  3463               	retlw	99
   512  01D8  340D               	retlw	13
   513  01D9  340E               	retlw	14
   514  01DA  340D               	retlw	13
   515  01DB  340E               	retlw	14
   516  01DC  340F               	retlw	15
   517  01DD  340F               	retlw	15
   518  01DE  3410               	retlw	16
   519  01DF  3410               	retlw	16
   520  01E0  340F               	retlw	15
   521  01E1  340F               	retlw	15
   522  01E2  3410               	retlw	16
   523  01E3  3410               	retlw	16
   524  01E4  340B               	retlw	11
   525  01E5  340C               	retlw	12
   526  01E6  340B               	retlw	11
   527  01E7  340C               	retlw	12
   528  01E8  340A               	retlw	10
   529  01E9  3409               	retlw	9
   530  01EA  340A               	retlw	10
   531  01EB  3409               	retlw	9
   532  01EC  340A               	retlw	10
   533  01ED  3409               	retlw	9
   534  01EE  340A               	retlw	10
   535  01EF  3409               	retlw	9
   536  01F0  340A               	retlw	10
   537  01F1  3409               	retlw	9
   538  01F2  340D               	retlw	13
   539  01F3  340D               	retlw	13
   540  01F4  3410               	retlw	16
   541  01F5  3410               	retlw	16
   542  01F6  340F               	retlw	15
   543  01F7  340F               	retlw	15
   544  01F8  3410               	retlw	16
   545  01F9  3410               	retlw	16
   546  01FA  340F               	retlw	15
   547  01FB  340F               	retlw	15
   548  01FC  3410               	retlw	16
   549  01FD  3410               	retlw	16
   550  01FE  340F               	retlw	15
   551  01FF  340F               	retlw	15
   552  0200  340D               	retlw	13
   553  0201  340E               	retlw	14
   554  0202  340D               	retlw	13
   555  0203  340E               	retlw	14
   556  0204  3407               	retlw	7
   557  0205  3408               	retlw	8
   558  0206  3408               	retlw	8
   559  0207  3408               	retlw	8
   560  0208  3463               	retlw	99
   561  0209  3463               	retlw	99
   562  020A  3463               	retlw	99
   563  020B  3463               	retlw	99
   564  020C  3463               	retlw	99
   565  020D  3463               	retlw	99
   566  020E  3463               	retlw	99
   567  020F  3463               	retlw	99
   568  0210  3463               	retlw	99
   569  0211  3463               	retlw	99
   570  0212  3463               	retlw	99
   571  0213  3463               	retlw	99
   572  0214  3463               	retlw	99
   573  0215  3463               	retlw	99
   574  0216  3463               	retlw	99
   575  0217  3463               	retlw	99
   576  0218  3463               	retlw	99
   577  0219  3463               	retlw	99
   578  021A  3408               	retlw	8
   579  021B  3408               	retlw	8
   580  021C  3408               	retlw	8
   581  021D  3408               	retlw	8
   582  021E  3463               	retlw	99
   583  021F  3463               	retlw	99
   584  0220  3463               	retlw	99
   585  0221  3463               	retlw	99
   586  0222  3463               	retlw	99
   587  0223  3463               	retlw	99
   588  0224  3463               	retlw	99
   589  0225  3463               	retlw	99
   590  0226  3463               	retlw	99
   591  0227  3463               	retlw	99
   592  0228  3463               	retlw	99
   593  0229  3463               	retlw	99
   594  022A  3463               	retlw	99
   595  022B  3463               	retlw	99
   596  022C  3463               	retlw	99
   597  022D  3463               	retlw	99
   598  022E  3463               	retlw	99
   599  022F  3463               	retlw	99
   600  0230  3408               	retlw	8
   601  0231  3408               	retlw	8
   602  0232  3408               	retlw	8
   603  0233  3408               	retlw	8
   604  0234  3463               	retlw	99
   605  0235  3463               	retlw	99
   606  0236  3463               	retlw	99
   607  0237  3463               	retlw	99
   608  0238  3463               	retlw	99
   609  0239  3463               	retlw	99
   610  023A  3463               	retlw	99
   611  023B  3463               	retlw	99
   612  023C  3463               	retlw	99
   613  023D  3463               	retlw	99
   614  023E  3463               	retlw	99
   615  023F  3463               	retlw	99
   616  0240  3463               	retlw	99
   617  0241  3463               	retlw	99
   618  0242  3463               	retlw	99
   619  0243  3463               	retlw	99
   620  0244  3463               	retlw	99
   621  0245  3463               	retlw	99
   622  0246                     __end_of_ROM_COMBO_Patterns:	
   623  0246                     _ROM_Sub_Patterns:	
   624  0246  3400               	retlw	0
   625  0247  3400               	retlw	0
   626  0248  3400               	retlw	0
   627  0249  3400               	retlw	0
   628  024A  3400               	retlw	0
   629  024B  3400               	retlw	0
   630  024C  3400               	retlw	0
   631  024D  3403               	retlw	3
   632  024E  3403               	retlw	3
   633  024F  3400               	retlw	0
   634  0250  3403               	retlw	3
   635  0251  3403               	retlw	3
   636  0252  3403               	retlw	3
   637  0253  3403               	retlw	3
   638  0254  3400               	retlw	0
   639  0255  3400               	retlw	0
   640  0256  3400               	retlw	0
   641  0257  3400               	retlw	0
   642  0258  3400               	retlw	0
   643  0259  3400               	retlw	0
   644  025A  3400               	retlw	0
   645  025B  3403               	retlw	3
   646  025C  3403               	retlw	3
   647  025D  3400               	retlw	0
   648  025E  3400               	retlw	0
   649  025F  3403               	retlw	3
   650  0260  3403               	retlw	3
   651  0261  3403               	retlw	3
   652  0262  3403               	retlw	3
   653  0263  3400               	retlw	0
   654  0264  3403               	retlw	3
   655  0265  3400               	retlw	0
   656  0266  3403               	retlw	3
   657  0267  3400               	retlw	0
   658  0268  3403               	retlw	3
   659  0269  3403               	retlw	3
   660  026A  3400               	retlw	0
   661  026B  3403               	retlw	3
   662  026C  3400               	retlw	0
   663  026D  3403               	retlw	3
   664  026E  3400               	retlw	0
   665  026F  3403               	retlw	3
   666  0270  3403               	retlw	3
   667  0271  3400               	retlw	0
   668  0272  3403               	retlw	3
   669  0273  3400               	retlw	0
   670  0274  3400               	retlw	0
   671  0275  3400               	retlw	0
   672  0276  3403               	retlw	3
   673  0277  3403               	retlw	3
   674  0278  3400               	retlw	0
   675  0279  3403               	retlw	3
   676  027A  3400               	retlw	0
   677  027B  3403               	retlw	3
   678  027C  3400               	retlw	0
   679  027D  3403               	retlw	3
   680  027E  3403               	retlw	3
   681  027F  3403               	retlw	3
   682  0280  3403               	retlw	3
   683  0281  3403               	retlw	3
   684  0282  3403               	retlw	3
   685  0283  3403               	retlw	3
   686  0284  3403               	retlw	3
   687  0285  3400               	retlw	0
   688  0286  3400               	retlw	0
   689  0287  3400               	retlw	0
   690  0288  3400               	retlw	0
   691  0289  3400               	retlw	0
   692  028A  3400               	retlw	0
   693  028B  3400               	retlw	0
   694  028C  3403               	retlw	3
   695  028D  3403               	retlw	3
   696  028E  3403               	retlw	3
   697  028F  3403               	retlw	3
   698  0290  3403               	retlw	3
   699  0291  3403               	retlw	3
   700  0292  3403               	retlw	3
   701  0293  3403               	retlw	3
   702  0294  3400               	retlw	0
   703  0295  3403               	retlw	3
   704  0296  3400               	retlw	0
   705  0297  3403               	retlw	3
   706  0298  3400               	retlw	0
   707  0299  3403               	retlw	3
   708  029A  3400               	retlw	0
   709  029B  3400               	retlw	0
   710  029C  3400               	retlw	0
   711  029D  3400               	retlw	0
   712  029E  3400               	retlw	0
   713  029F  3400               	retlw	0
   714  02A0  3400               	retlw	0
   715  02A1  3403               	retlw	3
   716  02A2  3400               	retlw	0
   717  02A3  3403               	retlw	3
   718  02A4  3400               	retlw	0
   719  02A5  3403               	retlw	3
   720  02A6  3400               	retlw	0
   721  02A7  3403               	retlw	3
   722  02A8  3400               	retlw	0
   723  02A9  3400               	retlw	0
   724  02AA  3400               	retlw	0
   725  02AB  3400               	retlw	0
   726  02AC  3400               	retlw	0
   727  02AD  3400               	retlw	0
   728  02AE  3400               	retlw	0
   729  02AF  3403               	retlw	3
   730  02B0  3403               	retlw	3
   731  02B1  3403               	retlw	3
   732  02B2  3403               	retlw	3
   733  02B3  3403               	retlw	3
   734  02B4  3403               	retlw	3
   735  02B5  3403               	retlw	3
   736  02B6  3400               	retlw	0
   737  02B7  3400               	retlw	0
   738  02B8  3400               	retlw	0
   739  02B9  3400               	retlw	0
   740  02BA  3400               	retlw	0
   741  02BB  3400               	retlw	0
   742  02BC  3400               	retlw	0
   743  02BD                     __end_of_ROM_Sub_Patterns:	
   744  02BD                     _ROM_Sub_Patterns_Time:	
   745  02BD  340E               	retlw	14
   746  02BE  3409               	retlw	9
   747  02BF  3400               	retlw	0
   748  02C0  3400               	retlw	0
   749  02C1  3400               	retlw	0
   750  02C2  3400               	retlw	0
   751  02C3  3400               	retlw	0
   752  02C4  340A               	retlw	10
   753  02C5  340A               	retlw	10
   754  02C6  3406               	retlw	6
   755  02C7  3400               	retlw	0
   756  02C8  3400               	retlw	0
   757  02C9  3400               	retlw	0
   758  02CA  3400               	retlw	0
   759  02CB  3419               	retlw	25
   760  02CC  340E               	retlw	14
   761  02CD  3400               	retlw	0
   762  02CE  3400               	retlw	0
   763  02CF  3400               	retlw	0
   764  02D0  3400               	retlw	0
   765  02D1  3400               	retlw	0
   766  02D2  3410               	retlw	16
   767  02D3  340F               	retlw	15
   768  02D4  3408               	retlw	8
   769  02D5  3400               	retlw	0
   770  02D6  3400               	retlw	0
   771  02D7  3400               	retlw	0
   772  02D8  3400               	retlw	0
   773  02D9  3410               	retlw	16
   774  02DA  3408               	retlw	8
   775  02DB  340F               	retlw	15
   776  02DC  3400               	retlw	0
   777  02DD  3400               	retlw	0
   778  02DE  3400               	retlw	0
   779  02DF  3400               	retlw	0
   780  02E0  340B               	retlw	11
   781  02E1  3404               	retlw	4
   782  02E2  340B               	retlw	11
   783  02E3  3404               	retlw	4
   784  02E4  340A               	retlw	10
   785  02E5  3400               	retlw	0
   786  02E6  3400               	retlw	0
   787  02E7  340A               	retlw	10
   788  02E8  3405               	retlw	5
   789  02E9  340A               	retlw	10
   790  02EA  3401               	retlw	1
   791  02EB  3400               	retlw	0
   792  02EC  3400               	retlw	0
   793  02ED  3400               	retlw	0
   794  02EE  3407               	retlw	7
   795  02EF  3403               	retlw	3
   796  02F0  3406               	retlw	6
   797  02F1  3403               	retlw	3
   798  02F2  3406               	retlw	6
   799  02F3  3401               	retlw	1
   800  02F4  3400               	retlw	0
   801  02F5  340A               	retlw	10
   802  02F6  340A               	retlw	10
   803  02F7  3406               	retlw	6
   804  02F8  3400               	retlw	0
   805  02F9  3400               	retlw	0
   806  02FA  3400               	retlw	0
   807  02FB  3400               	retlw	0
   808  02FC  3408               	retlw	8
   809  02FD  3409               	retlw	9
   810  02FE  3400               	retlw	0
   811  02FF  3400               	retlw	0
   812  0300  3400               	retlw	0
   813  0301  3400               	retlw	0
   814  0302  3400               	retlw	0
   815  0303  3408               	retlw	8
   816  0304  3408               	retlw	8
   817  0305  3400               	retlw	0
   818  0306  3400               	retlw	0
   819  0307  3400               	retlw	0
   820  0308  3400               	retlw	0
   821  0309  3400               	retlw	0
   822  030A  3403               	retlw	3
   823  030B  3403               	retlw	3
   824  030C  3407               	retlw	7
   825  030D  3400               	retlw	0
   826  030E  3400               	retlw	0
   827  030F  3400               	retlw	0
   828  0310  3400               	retlw	0
   829  0311  3407               	retlw	7
   830  0312  3408               	retlw	8
   831  0313  3400               	retlw	0
   832  0314  3400               	retlw	0
   833  0315  3400               	retlw	0
   834  0316  3400               	retlw	0
   835  0317  3400               	retlw	0
   836  0318  3403               	retlw	3
   837  0319  3403               	retlw	3
   838  031A  3403               	retlw	3
   839  031B  3403               	retlw	3
   840  031C  3403               	retlw	3
   841  031D  3403               	retlw	3
   842  031E  3407               	retlw	7
   843  031F  340D               	retlw	13
   844  0320  340D               	retlw	13
   845  0321  3400               	retlw	0
   846  0322  3400               	retlw	0
   847  0323  3400               	retlw	0
   848  0324  3400               	retlw	0
   849  0325  3400               	retlw	0
   850  0326  3404               	retlw	4
   851  0327  3407               	retlw	7
   852  0328  3400               	retlw	0
   853  0329  3400               	retlw	0
   854  032A  3400               	retlw	0
   855  032B  3400               	retlw	0
   856  032C  3400               	retlw	0
   857  032D  3404               	retlw	4
   858  032E  3406               	retlw	6
   859  032F  3400               	retlw	0
   860  0330  3400               	retlw	0
   861  0331  3400               	retlw	0
   862  0332  3400               	retlw	0
   863  0333  3400               	retlw	0
   864  0334                     __end_of_ROM_Sub_Patterns_Time:	
   865  000B                     _INTCON	set	11
   866  0019                     _CMCON0	set	25
   867  0018                     _WDTCON	set	24
   868  0005                     _GPIO	set	5
   869  0005                     _GPIObits	set	5
   870  0001                     _TMR0	set	1
   871  000B                     _INTCONbits	set	11
   872  005F                     _GIE	set	95
   873  0018                     _CARRY	set	24
   874  009D                     _EECON2	set	157
   875  009A                     _EEDATA	set	154
   876  009C                     _EECON1	set	156
   877  009B                     _EEADR	set	155
   878  0085                     _TRISIObits	set	133
   879  0085                     _TRISIO	set	133
   880  009F                     _ANSEL	set	159
   881  0095                     _WPU	set	149
   882  0081                     _OPTION_REGbits	set	129
   883  008F                     _OSCCONbits	set	143
   884  008F                     _OSCCON	set	143
   885  04E2                     _WREN	set	1250
   886  04E0                     _RD	set	1248
   887  04E1                     _WR	set	1249
   888                           
   889                           ; #config settings
   890  0000                     
   891                           	psect	cinit
   892  0010                     start_initialization:	
   893  0010                     __initialization:	
   894                           
   895                           ; Clear objects allocated to COMMON
   896  0010  3077               	movlw	low __pbssCOMMON
   897  0011  0084               	movwf	4
   898  0012  307D               	movlw	low (__pbssCOMMON+6)
   899  0013  26F9               	fcall	clear_ram0
   900  0014  3020               	movlw	low __pbssBANK0
   901                           
   902                           ; Clear objects allocated to BANK0
   903  0015  1383               	bcf	3,7	;select IRP bank0
   904  0016  0084               	movwf	4
   905  0017  304B               	movlw	low (__pbssBANK0+43)
   906  0018  26F9               	fcall	clear_ram0
   907  0019                     end_of_initialization:	
   908                           ;End of C runtime variable initialization code
   909                           
   910  0019                     __end_of__initialization:	
   911  0019  0183               	clrf	3
   912  001A  2C7D               	ljmp	_main	;jump to C main() function
   913                           
   914                           	psect	bssEEDATA
   915  0000                     __pbssEEDATA:	
   916  0000                     _EEprom_InPhase:	
   917  0000  0000               	db	0
   918  0001  0000               	db	0
   919  0002                     _EEprom_mode:	
   920  0002  0000               	db	0
   921  0003  0000               	db	0
   922  0004                     _EEprom_Written_Flag:	
   923  0004  0000               	db	0
   924                           
   925                           	psect	bssCOMMON
   926  0077                     __pbssCOMMON:	
   927  0077                     _GLOBAL_SYNC_PULSE_Counter:	
   928  0077                     	ds	1
   929  0078                     _GLOBAL_combo_patterns_column_index:	
   930  0078                     	ds	1
   931  0079                     _GLOBAL_combo_patterns_index:	
   932  0079                     	ds	1
   933  007A                     _OUTPUT_BUFFER:	
   934  007A                     	ds	1
   935  007B                     _GLOBAL_sub_patterns_index:	
   936  007B                     	ds	1
   937  007C                     _GLOBAL_sub_patterns_column_index:	
   938  007C                     	ds	1
   939                           
   940                           	psect	bssBANK0
   941  0020                     __pbssBANK0:	
   942  0020                     _bGLOBAL_InPhase_copy:	
   943  0020                     	ds	2
   944  0022                     _GLOBAL_Mode_copy:	
   945  0022                     	ds	2
   946  0024                     SetOUTPUT@pwmCounter:	
   947  0024                     	ds	1
   948  0025                     SetOUTPUT@temporaryGPIO:	
   949  0025                     	ds	1
   950  0026                     _pwmBool:	
   951  0026                     	ds	1
   952  0027                     _bGLOBAL_SYNC_Line_PRESSED:	
   953  0027                     	ds	1
   954  0028                     _bGLOBAL_MODE2_PRESSED:	
   955  0028                     	ds	1
   956  0029                     _bGLOBAL_MODE1_PRESSED:	
   957  0029                     	ds	1
   958  002A                     _bGLOBAL_ENABLE_LEDS:	
   959  002A                     	ds	1
   960  002B                     _bGLOBAL_IS_PROGRAMMING:	
   961  002B                     	ds	1
   962  002C                     _bGLOBAL_CHANGING_PATTERN_Enforce:	
   963  002C                     	ds	1
   964  002D                     _bGLOBAL_CHANGING_PATTERN:	
   965  002D                     	ds	1
   966  002E                     _bGLOBAL_DISABLE_SYNC_Line_PRESSED:	
   967  002E                     	ds	1
   968  002F                     _GLOBAL_CHANNELS_EN_copy:	
   969  002F                     	ds	1
   970  0030                     _GLOBAL_CHANNELS_EN:	
   971  0030                     	ds	1
   972  0031                     _GLOBAL_MODE2_LOW_counter:	
   973  0031                     	ds	1
   974  0032                     _GLOBAL_SYNC_Line_LOW_counter:	
   975  0032                     	ds	1
   976  0033                     _GLOBAL_MODE1_LOW_counter:	
   977  0033                     	ds	1
   978  0034                     _GLOBAL_MODE2_counter:	
   979  0034                     	ds	1
   980  0035                     _GLOBAL_SYNC_Line_counter:	
   981  0035                     	ds	1
   982  0036                     _GLOBAL_MODE1_counter:	
   983  0036                     	ds	1
   984  0037                     _GLOBAL_Selected_Mode_Type_copy:	
   985  0037                     	ds	1
   986  0038                     _GLOBAL_Selected_Mode_Type:	
   987  0038                     	ds	1
   988  0039                     _GLOBAL_Selected_Mode_Number:	
   989  0039                     	ds	1
   990  003A                     _GLOBAL_combo_patterns_counter:	
   991  003A                     	ds	1
   992  003B                     isr@tenMSCounter:	
   993  003B                     	ds	1
   994  003C                     _GLOBAL_Dummy_Counter2:	
   995  003C                     	ds	1
   996  003D                     _GLOBAL_Dummy_Counter:	
   997  003D                     	ds	1
   998  003E                     _OUTPUT_BUFFER_COPY:	
   999  003E                     	ds	1
  1000  003F                     _bGLOBAL_SYNC_SENT:	
  1001  003F                     	ds	1
  1002  0040                     _GLOBAL_CHANNELS_EN_DUAL:	
  1003  0040                     	ds	1
  1004  0041                     _channelToBeDisplayed:	
  1005  0041                     	ds	1
  1006  0042                     _bDualColor:	
  1007  0042                     	ds	1
  1008  0043                     _bGLOBAL_InPhase:	
  1009  0043                     	ds	1
  1010  0044                     _bGLOBAL_END_OF_CYCLE_COND2:	
  1011  0044                     	ds	1
  1012  0045                     _bGLOBAL_END_OF_CYCLE_COND1:	
  1013  0045                     	ds	1
  1014  0046                     _GLOBAL_combo_patterns_index_copy:	
  1015  0046                     	ds	1
  1016  0047                     _GLOBAL_sub_patterns_index_copy:	
  1017  0047                     	ds	1
  1018  0048                     _GLOBAL_sub_patterns_timer:	
  1019  0048                     	ds	1
  1020  0049                     _bGLOBAL_STEADY_ON:	
  1021  0049                     	ds	1
  1022  004A                     _bGLOBAL_OUTPUT_BUFFER_CHANGED:	
  1023  004A                     	ds	1
  1024                           
  1025                           	psect	clrtext
  1026  06F9                     clear_ram0:	
  1027                           ;	Called with FSR containing the base address, and
  1028                           ;	W with the last address+1
  1029                           
  1030  06F9  0064               	clrwdt	;clear the watchdog before getting into this loop
  1031  06FA                     clrloop0:	
  1032  06FA  0180               	clrf	0	;clear RAM location pointed to by FSR
  1033  06FB  0A84               	incf	4,f	;increment pointer
  1034  06FC  0604               	xorwf	4,w	;XOR with final address
  1035  06FD  1903               	btfsc	3,2	;have we reached the end yet?
  1036  06FE  3400               	retlw	0	;all done for this memory range, return
  1037  06FF  0604               	xorwf	4,w	;XOR again to restore value
  1038  0700  2EFA               	goto	clrloop0	;do the next byte
  1039                           
  1040                           	psect	cstackCOMMON
  1041  0070                     __pcstackCOMMON:	
  1042  0070                     ?_SetOUTPUT:	
  1043  0070                     ?_Read_Mode_Input:	
  1044                           ; 1 bytes @ 0x0
  1045                           
  1046  0070                     ??_Read_Mode_Input:	
  1047                           ; 1 bytes @ 0x0
  1048                           
  1049  0070                     ?_ReWriteEEPROM:	
  1050                           ; 1 bytes @ 0x0
  1051                           
  1052  0070                     ?_Update_ComboPattern_Index:	
  1053                           ; 1 bytes @ 0x0
  1054                           
  1055  0070                     ?_ConfigureOscillator:	
  1056                           ; 1 bytes @ 0x0
  1057                           
  1058  0070                     ?_InitApp:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061  0070                     ?_isr:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064  0070                     ?_WaitForSYNC_PU:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0070                     ?_WriteEEPROMDefaults:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0070                     ?_INC_EEPROM_MODE:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0070                     ?_Update_Input_Mode_Type:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076  0070                     ?_Initial_Start:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079  0070                     ?_main:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0070                     ?___eetoc:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0070                     ?___bmul:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0070                     ?i1_SetOUTPUT:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0070                     ??i1_SetOUTPUT:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0070                     ?___wmul:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  0070                     ___bmul@multiplicand:	
  1098                           ; 2 bytes @ 0x0
  1099                           
  1100  0070                     ___wmul@multiplier:	
  1101                           ; 1 bytes @ 0x0
  1102                           
  1103                           
  1104                           ; 2 bytes @ 0x0
  1105  0070                     	ds	1
  1106  0071                     ??___bmul:	
  1107  0071                     ___bmul@product:	
  1108                           ; 1 bytes @ 0x1
  1109                           
  1110                           
  1111                           ; 1 bytes @ 0x1
  1112  0071                     	ds	1
  1113  0072                     ___bmul@multiplier:	
  1114  0072                     ___wmul@multiplicand:	
  1115                           ; 1 bytes @ 0x2
  1116                           
  1117                           
  1118                           ; 2 bytes @ 0x2
  1119  0072                     	ds	2
  1120  0074                     ??___wmul:	
  1121  0074                     ___wmul@product:	
  1122                           ; 1 bytes @ 0x4
  1123                           
  1124                           
  1125                           ; 2 bytes @ 0x4
  1126  0074                     	ds	2
  1127  0076                     isr@temp_data1:	
  1128                           
  1129                           ; 1 bytes @ 0x6
  1130  0076                     	ds	1
  1131                           
  1132                           	psect	cstackBANK0
  1133  004B                     __pcstackBANK0:	
  1134  004B                     ??_isr:	
  1135                           
  1136                           ; 1 bytes @ 0x0
  1137  004B                     	ds	10
  1138  0055                     ??_SetOUTPUT:	
  1139  0055                     ??_Update_ComboPattern_Index:	
  1140                           ; 1 bytes @ 0xA
  1141                           
  1142  0055                     ??_ConfigureOscillator:	
  1143                           ; 1 bytes @ 0xA
  1144                           
  1145  0055                     ??_WaitForSYNC_PU:	
  1146                           ; 1 bytes @ 0xA
  1147                           
  1148  0055                     ??_Update_Input_Mode_Type:	
  1149                           ; 1 bytes @ 0xA
  1150                           
  1151  0055                     ?_eecpymem:	
  1152                           ; 1 bytes @ 0xA
  1153                           
  1154  0055                     ?_memcpyee:	
  1155                           ; 1 bytes @ 0xA
  1156                           
  1157  0055                     WaitForSYNC_PU@temp001:	
  1158                           ; 1 bytes @ 0xA
  1159                           
  1160  0055                     eecpymem@from:	
  1161                           ; 1 bytes @ 0xA
  1162                           
  1163  0055                     memcpyee@from:	
  1164                           ; 1 bytes @ 0xA
  1165                           
  1166                           
  1167                           ; 1 bytes @ 0xA
  1168  0055                     	ds	1
  1169  0056                     ??_InitApp:	
  1170  0056                     eecpymem@size:	
  1171                           ; 1 bytes @ 0xB
  1172                           
  1173  0056                     memcpyee@size:	
  1174                           ; 1 bytes @ 0xB
  1175                           
  1176                           
  1177                           ; 1 bytes @ 0xB
  1178  0056                     	ds	1
  1179  0057                     ??_eecpymem:	
  1180  0057                     ??_memcpyee:	
  1181                           ; 1 bytes @ 0xC
  1182                           
  1183  0057                     eecpymem@cp:	
  1184                           ; 1 bytes @ 0xC
  1185                           
  1186  0057                     memcpyee@ptr:	
  1187                           ; 1 bytes @ 0xC
  1188                           
  1189                           
  1190                           ; 1 bytes @ 0xC
  1191  0057                     	ds	1
  1192  0058                     eecpymem@to:	
  1193  0058                     memcpyee@to:	
  1194                           ; 1 bytes @ 0xD
  1195                           
  1196                           
  1197                           ; 1 bytes @ 0xD
  1198  0058                     	ds	1
  1199  0059                     ??___eetoc:	
  1200  0059                     ?___ctoee:	
  1201                           ; 1 bytes @ 0xE
  1202                           
  1203  0059                     ___eetoc@addr:	
  1204                           ; 1 bytes @ 0xE
  1205                           
  1206  0059                     ___ctoee@data:	
  1207                           ; 1 bytes @ 0xE
  1208                           
  1209                           
  1210                           ; 1 bytes @ 0xE
  1211  0059                     	ds	1
  1212  005A                     ??___ctoee:	
  1213  005A                     ___eetoc@data:	
  1214                           ; 1 bytes @ 0xF
  1215                           
  1216  005A                     ___ctoee@addr:	
  1217                           ; 1 bytes @ 0xF
  1218                           
  1219                           
  1220                           ; 1 bytes @ 0xF
  1221  005A                     	ds	1
  1222  005B                     ??_ReWriteEEPROM:	
  1223  005B                     ReWriteEEPROM@i:	
  1224                           ; 1 bytes @ 0x10
  1225                           
  1226                           
  1227                           ; 1 bytes @ 0x10
  1228  005B                     	ds	1
  1229  005C                     ??_WriteEEPROMDefaults:	
  1230  005C                     ??_INC_EEPROM_MODE:	
  1231                           ; 1 bytes @ 0x11
  1232                           
  1233  005C                     ??_Initial_Start:	
  1234                           ; 1 bytes @ 0x11
  1235                           
  1236  005C                     INC_EEPROM_MODE@Temp_Mode_Data:	
  1237                           ; 1 bytes @ 0x11
  1238                           
  1239                           
  1240                           ; 1 bytes @ 0x11
  1241  005C                     	ds	1
  1242  005D                     Initial_Start@read_data:	
  1243                           
  1244                           ; 1 bytes @ 0x12
  1245  005D                     	ds	1
  1246  005E                     Initial_Start@i:	
  1247                           
  1248                           ; 1 bytes @ 0x13
  1249  005E                     	ds	1
  1250  005F                     ??_main:	
  1251  005F                     main@tempvar1:	
  1252                           ; 1 bytes @ 0x14
  1253                           
  1254                           
  1255                           ; 1 bytes @ 0x14
  1256  005F                     	ds	1
  1257                           
  1258                           	psect	maintext
  1259  047D                     __pmaintext:	
  1260 ;;
  1261 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1262 ;;
  1263 ;; *************** function _main *****************
  1264 ;; Defined at:
  1265 ;;		line 589 in file "main.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;		None
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  tempvar1        1   20[BANK0 ] unsigned char 
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : B00/0
  1276 ;;		On exit  : 100/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMMON   BANK0   BANK1
  1279 ;;      Params:         0       0       0
  1280 ;;      Locals:         0       1       0
  1281 ;;      Temps:          0       0       0
  1282 ;;      Totals:         0       1       0
  1283 ;;Total ram usage:        1 bytes
  1284 ;; Hardware stack levels required when called:    7
  1285 ;; This function calls:
  1286 ;;		_ConfigureOscillator
  1287 ;;		_INC_EEPROM_MODE
  1288 ;;		_InitApp
  1289 ;;		_Initial_Start
  1290 ;;		_ReWriteEEPROM
  1291 ;;		_SetOUTPUT
  1292 ;;		_Update_ComboPattern_Index
  1293 ;;		_Update_Input_Mode_Type
  1294 ;; This function is called by:
  1295 ;;		Startup code after reset
  1296 ;; This function uses a non-reentrant model
  1297 ;;
  1298                           
  1299                           
  1300                           ;psect for function _main
  1301  047D                     _main:	
  1302                           
  1303                           ;main.c: 591: unsigned char tempvar1;
  1304                           ;main.c: 593: ConfigureOscillator();
  1305                           
  1306                           ;incstack = 0
  1307                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1308  047D  2710               	fcall	_ConfigureOscillator
  1309                           
  1310                           ;main.c: 595: InitApp();
  1311  047E  25B3               	fcall	_InitApp
  1312                           
  1313                           ;main.c: 596: Initial_Start();
  1314  047F  2603               	fcall	_Initial_Start
  1315                           
  1316                           ;main.c: 597: bGLOBAL_ENABLE_LEDS = 1;
  1317  0480  3001               	movlw	1
  1318  0481  00AA               	movwf	_bGLOBAL_ENABLE_LEDS	;volatile
  1319  0482                     l2428:	
  1320                           
  1321                           ;main.c: 600: {
  1322                           ;main.c: 601: if (!bGLOBAL_IS_PROGRAMMING)
  1323  0482  082B               	movf	_bGLOBAL_IS_PROGRAMMING,w	;volatile
  1324  0483  1903               	btfsc	3,2
  1325  0484  0064               	clrwdt	;# 
  1326                           
  1327                           ;main.c: 606: Update_Input_Mode_Type();
  1328  0485  26CD               	fcall	_Update_Input_Mode_Type
  1329                           
  1330                           ;main.c: 607: if ((GLOBAL_SYNC_Line_counter == 9+0) && (!bGLOBAL_SYNC_Line_PRESSED))
  1331  0486  3009               	movlw	9
  1332  0487  0635               	xorwf	_GLOBAL_SYNC_Line_counter,w	;volatile
  1333  0488  1D03               	btfss	3,2
  1334  0489  2C91               	goto	l2444
  1335  048A  0827               	movf	_bGLOBAL_SYNC_Line_PRESSED,w	;volatile
  1336  048B  1D03               	btfss	3,2
  1337  048C  2C91               	goto	l2444
  1338                           
  1339                           ;main.c: 608: {
  1340                           ;main.c: 609: bGLOBAL_SYNC_Line_PRESSED = 1;
  1341  048D  3001               	movlw	1
  1342  048E  00A7               	movwf	_bGLOBAL_SYNC_Line_PRESSED	;volatile
  1343                           
  1344                           ;main.c: 610: bGLOBAL_ENABLE_LEDS = 0;
  1345  048F  01AA               	clrf	_bGLOBAL_ENABLE_LEDS	;volatile
  1346                           
  1347                           ;main.c: 611: SetOUTPUT();
  1348  0490  2533               	fcall	_SetOUTPUT
  1349  0491                     l2444:	
  1350                           
  1351                           ;main.c: 612: }
  1352                           ;main.c: 613: if (bGLOBAL_SYNC_Line_PRESSED && (!bGLOBAL_IS_PROGRAMMING))
  1353  0491  0827               	movf	_bGLOBAL_SYNC_Line_PRESSED,w	;volatile
  1354  0492  1903               	btfsc	3,2
  1355  0493  2CD4               	goto	l2486
  1356  0494  082B               	movf	_bGLOBAL_IS_PROGRAMMING,w	;volatile
  1357  0495  1D03               	btfss	3,2
  1358  0496  2CD4               	goto	l2486
  1359                           
  1360                           ;main.c: 614: {
  1361                           ;main.c: 615: GLOBAL_Dummy_Counter = 0;
  1362  0497  01BD               	clrf	_GLOBAL_Dummy_Counter	;volatile
  1363  0498  2C9D               	goto	l307
  1364  0499                     l2450:	
  1365  0499  30C7               	movlw	199
  1366  049A  023D               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1367  049B  1803               	btfsc	3,0
  1368  049C  2C9F               	goto	l2452
  1369  049D                     l307:	
  1370                           ;main.c: 616: while ((!(GPIObits.GP4)) && (GLOBAL_Dummy_Counter < 199)) {}
  1371                           
  1372  049D  1E05               	btfss	5,4	;volatile
  1373  049E  2C99               	goto	l2450
  1374  049F                     l2452:	
  1375                           
  1376                           ;main.c: 617: tempvar1 = GLOBAL_Dummy_Counter;
  1377  049F  083D               	movf	_GLOBAL_Dummy_Counter,w	;volatile
  1378  04A0  00DF               	movwf	main@tempvar1
  1379  04A1  0064               	clrwdt	;# 
  1380                           
  1381                           ;main.c: 619: if (tempvar1 > 198)
  1382  04A2  30C7               	movlw	199
  1383  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  1384  04A4  025F               	subwf	main@tempvar1,w
  1385  04A5  1C03               	skipc
  1386  04A6  2CBE               	goto	l2470
  1387                           
  1388                           ;main.c: 620: {
  1389                           ;main.c: 621: GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type] = 0;
  1390  04A7  0838               	movf	_GLOBAL_Selected_Mode_Type,w
  1391  04A8  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  1392  04A9  0084               	movwf	4
  1393  04AA  1383               	bcf	3,7	;select IRP bank0
  1394  04AB  0180               	clrf	0
  1395                           
  1396                           ;main.c: 622: bGLOBAL_CHANGING_PATTERN = 0;
  1397  04AC  01AD               	clrf	_bGLOBAL_CHANGING_PATTERN	;volatile
  1398                           
  1399                           ;main.c: 623: bGLOBAL_InPhase = !bGLOBAL_InPhase;
  1400  04AD  0843               	movf	_bGLOBAL_InPhase,w	;volatile
  1401  04AE  1D03               	btfss	3,2
  1402  04AF  2CB2               	goto	u2670
  1403  04B0  3001               	movlw	1
  1404  04B1  2CB3               	goto	u2680
  1405  04B2                     u2670:	
  1406  04B2  3000               	movlw	0
  1407  04B3                     u2680:	
  1408  04B3  00C3               	movwf	_bGLOBAL_InPhase	;volatile
  1409                           
  1410                           ;main.c: 624: bGLOBAL_InPhase_copy[GLOBAL_Selected_Mode_Type] = bGLOBAL_InPhase;
  1411  04B4  0838               	movf	_GLOBAL_Selected_Mode_Type,w
  1412  04B5  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  1413  04B6  0084               	movwf	4
  1414  04B7  0843               	movf	_bGLOBAL_InPhase,w	;volatile
  1415  04B8  0080               	movwf	0
  1416                           
  1417                           ;main.c: 625: bGLOBAL_IS_PROGRAMMING = 1;
  1418  04B9  3001               	movlw	1
  1419  04BA  00AB               	movwf	_bGLOBAL_IS_PROGRAMMING	;volatile
  1420                           
  1421                           ;main.c: 626: SetOUTPUT();
  1422  04BB  2533               	fcall	_SetOUTPUT
  1423                           
  1424                           ;main.c: 627: ReWriteEEPROM();
  1425  04BC  2694               	fcall	_ReWriteEEPROM
  1426                           
  1427                           ;main.c: 628: Update_ComboPattern_Index();
  1428  04BD  25DB               	fcall	_Update_ComboPattern_Index
  1429  04BE                     l2470:	
  1430                           
  1431                           ;main.c: 629: }
  1432                           ;main.c: 630: if (tempvar1 < 199)
  1433  04BE  30C7               	movlw	199
  1434  04BF  025F               	subwf	main@tempvar1,w
  1435  04C0  1803               	skipnc
  1436  04C1  2CD4               	goto	l2486
  1437                           
  1438                           ;main.c: 631: {
  1439                           ;main.c: 632: GLOBAL_Dummy_Counter = 0;
  1440  04C2  01BD               	clrf	_GLOBAL_Dummy_Counter	;volatile
  1441  04C3  2CC8               	goto	l314
  1442  04C4                     l2474:	
  1443  04C4  3002               	movlw	2
  1444  04C5  023D               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1445  04C6  1803               	btfsc	3,0
  1446  04C7  2CCA               	goto	l2476
  1447  04C8                     l314:	
  1448                           ;main.c: 633: while ((GPIObits.GP4) && GLOBAL_Dummy_Counter < 2) {}
  1449                           
  1450  04C8  1A05               	btfsc	5,4	;volatile
  1451  04C9  2CC4               	goto	l2474
  1452  04CA                     l2476:	
  1453                           
  1454                           ;main.c: 634: if (GLOBAL_Dummy_Counter > 1)
  1455  04CA  3002               	movlw	2
  1456  04CB  023D               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1457  04CC  1C03               	skipc
  1458  04CD  2CD4               	goto	l2486
  1459                           
  1460                           ;main.c: 635: {
  1461                           ;main.c: 636: bGLOBAL_CHANGING_PATTERN = 1;
  1462  04CE  3001               	movlw	1
  1463  04CF  00AD               	movwf	_bGLOBAL_CHANGING_PATTERN	;volatile
  1464                           
  1465                           ;main.c: 637: INC_EEPROM_MODE();
  1466  04D0  262A               	fcall	_INC_EEPROM_MODE
  1467                           
  1468                           ;main.c: 638: GLOBAL_Dummy_Counter = 0;
  1469  04D1  01BD               	clrf	_GLOBAL_Dummy_Counter	;volatile
  1470                           
  1471                           ;main.c: 639: bGLOBAL_IS_PROGRAMMING = 1;
  1472  04D2  3001               	movlw	1
  1473  04D3  00AB               	movwf	_bGLOBAL_IS_PROGRAMMING	;volatile
  1474  04D4                     l2486:	
  1475                           
  1476                           ;main.c: 640: }
  1477                           ;main.c: 641: }
  1478                           ;main.c: 642: }
  1479                           ;main.c: 644: if (((GLOBAL_SYNC_Line_LOW_counter > 3) || (GLOBAL_Dummy_Counter > 4)) && 
      +                          (!bGLOBAL_CHANGING_PATTERN_Enforce) && bGLOBAL_CHANGING_PATTERN)
  1480  04D4  3004               	movlw	4
  1481  04D5  0232               	subwf	_GLOBAL_SYNC_Line_LOW_counter,w	;volatile
  1482  04D6  1803               	skipnc
  1483  04D7  2CDC               	goto	l2490
  1484  04D8  3005               	movlw	5
  1485  04D9  023D               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1486  04DA  1C03               	skipc
  1487  04DB  2CE6               	goto	l2500
  1488  04DC                     l2490:	
  1489  04DC  082C               	movf	_bGLOBAL_CHANGING_PATTERN_Enforce,w	;volatile
  1490  04DD  1D03               	btfss	3,2
  1491  04DE  2CE6               	goto	l2500
  1492  04DF  082D               	movf	_bGLOBAL_CHANGING_PATTERN,w	;volatile
  1493  04E0  1903               	btfsc	3,2
  1494  04E1  2CE6               	goto	l2500
  1495                           
  1496                           ;main.c: 645: {
  1497                           ;main.c: 646: bGLOBAL_CHANGING_PATTERN_Enforce = 1;
  1498  04E2  3001               	movlw	1
  1499  04E3  00AC               	movwf	_bGLOBAL_CHANGING_PATTERN_Enforce	;volatile
  1500                           
  1501                           ;main.c: 647: GLOBAL_Dummy_Counter = 0;
  1502  04E4  01BD               	clrf	_GLOBAL_Dummy_Counter	;volatile
  1503                           
  1504                           ;main.c: 648: (GPIObits.GP5) = 1;
  1505  04E5  1685               	bsf	5,5	;volatile
  1506  04E6                     l2500:	
  1507                           
  1508                           ;main.c: 649: }
  1509                           ;main.c: 651: if (bGLOBAL_CHANGING_PATTERN_Enforce && (GLOBAL_Dummy_Counter > 12))
  1510  04E6  082C               	movf	_bGLOBAL_CHANGING_PATTERN_Enforce,w	;volatile
  1511  04E7  1903               	btfsc	3,2
  1512  04E8  2CF1               	goto	l2510
  1513  04E9  300D               	movlw	13
  1514  04EA  023D               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1515  04EB  1C03               	skipc
  1516  04EC  2CF1               	goto	l2510
  1517                           
  1518                           ;main.c: 652: {
  1519                           ;main.c: 653: GLOBAL_Dummy_Counter = 0;
  1520  04ED  01BD               	clrf	_GLOBAL_Dummy_Counter	;volatile
  1521                           
  1522                           ;main.c: 654: bGLOBAL_DISABLE_SYNC_Line_PRESSED = 1;
  1523  04EE  3001               	movlw	1
  1524  04EF  00AE               	movwf	_bGLOBAL_DISABLE_SYNC_Line_PRESSED	;volatile
  1525                           
  1526                           ;main.c: 655: (GPIObits.GP5) = 0;
  1527  04F0  1285               	bcf	5,5	;volatile
  1528  04F1                     l2510:	
  1529                           
  1530                           ;main.c: 656: }
  1531                           ;main.c: 658: if (bGLOBAL_DISABLE_SYNC_Line_PRESSED)
  1532  04F1  082E               	movf	_bGLOBAL_DISABLE_SYNC_Line_PRESSED,w	;volatile
  1533  04F2  1903               	btfsc	3,2
  1534  04F3  2CFC               	goto	l2520
  1535                           
  1536                           ;main.c: 659: {
  1537                           ;main.c: 660: if (!(GPIObits.GP4))
  1538  04F4  1A05               	btfsc	5,4	;volatile
  1539  04F5  2CF8               	goto	l2516
  1540                           
  1541                           ;main.c: 661: {
  1542                           ;main.c: 662: GLOBAL_Dummy_Counter = 0;
  1543  04F6  01BD               	clrf	_GLOBAL_Dummy_Counter	;volatile
  1544                           
  1545                           ;main.c: 663: GLOBAL_SYNC_Line_counter = 0;
  1546  04F7  01B5               	clrf	_GLOBAL_SYNC_Line_counter	;volatile
  1547  04F8                     l2516:	
  1548                           
  1549                           ;main.c: 664: }
  1550                           ;main.c: 665: if (GLOBAL_Dummy_Counter > 7 + 3)
  1551  04F8  300B               	movlw	11
  1552  04F9  023D               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1553  04FA  1803               	btfsc	3,0
  1554                           
  1555                           ;main.c: 666: bGLOBAL_DISABLE_SYNC_Line_PRESSED = 0;
  1556  04FB  01AE               	clrf	_bGLOBAL_DISABLE_SYNC_Line_PRESSED	;volatile
  1557  04FC                     l2520:	
  1558                           
  1559                           ;main.c: 667: }
  1560                           ;main.c: 669: if (!bGLOBAL_SYNC_Line_PRESSED)
  1561  04FC  0827               	movf	_bGLOBAL_SYNC_Line_PRESSED,w	;volatile
  1562  04FD  1D03               	btfss	3,2
  1563  04FE  2C82               	goto	l2428
  1564                           
  1565                           ;main.c: 670: {
  1566                           ;main.c: 671: bGLOBAL_ENABLE_LEDS = 1;
  1567  04FF  3001               	movlw	1
  1568  0500  00AA               	movwf	_bGLOBAL_ENABLE_LEDS	;volatile
  1569                           
  1570                           ;main.c: 672: bGLOBAL_CHANGING_PATTERN = 0;
  1571  0501  01AD               	clrf	_bGLOBAL_CHANGING_PATTERN	;volatile
  1572                           
  1573                           ;main.c: 673: bGLOBAL_CHANGING_PATTERN_Enforce = 0;
  1574  0502  01AC               	clrf	_bGLOBAL_CHANGING_PATTERN_Enforce	;volatile
  1575                           
  1576                           ;main.c: 674: bGLOBAL_IS_PROGRAMMING = 0;
  1577  0503  01AB               	clrf	_bGLOBAL_IS_PROGRAMMING	;volatile
  1578  0504  2C82               	goto	l2428
  1579  0505                     __end_of_main:	
  1580                           
  1581                           	psect	text1
  1582  0533                     __ptext1:	
  1583 ;; *************** function _SetOUTPUT *****************
  1584 ;; Defined at:
  1585 ;;		line 315 in file "main.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;		None
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;		None
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      void 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0
  1594 ;; Tracked objects:
  1595 ;;		On entry : 900/0
  1596 ;;		On exit  : 900/0
  1597 ;;		Unchanged: 800/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1
  1599 ;;      Params:         0       0       0
  1600 ;;      Locals:         0       0       0
  1601 ;;      Temps:          0       0       0
  1602 ;;      Totals:         0       0       0
  1603 ;;Total ram usage:        0 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; Hardware stack levels required when called:    2
  1606 ;; This function calls:
  1607 ;;		Nothing
  1608 ;; This function is called by:
  1609 ;;		_main
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           
  1614                           ;psect for function _SetOUTPUT
  1615  0533                     _SetOUTPUT:	
  1616                           
  1617                           ;main.c: 317: static unsigned char temporaryGPIO = 0x00;
  1618                           ;main.c: 318: static unsigned char pwmCounter = 0;
  1619                           ;main.c: 320: if (bGLOBAL_ENABLE_LEDS)
  1620                           
  1621                           ;incstack = 0
  1622                           ; Regs used in _SetOUTPUT: [wreg+status,2+status,0]
  1623  0533  082A               	movf	_bGLOBAL_ENABLE_LEDS,w	;volatile
  1624  0534  1903               	btfsc	3,2
  1625  0535  2D4D               	goto	l2086
  1626                           
  1627                           ;main.c: 321: {
  1628                           ;main.c: 323: temporaryGPIO = OUTPUT_BUFFER & GLOBAL_CHANNELS_EN;
  1629  0536  087A               	movf	_OUTPUT_BUFFER,w	;volatile
  1630  0537  00A5               	movwf	SetOUTPUT@temporaryGPIO
  1631  0538  0830               	movf	_GLOBAL_CHANNELS_EN,w	;volatile
  1632  0539  05A5               	andwf	SetOUTPUT@temporaryGPIO,f
  1633                           
  1634                           ;main.c: 328: if(pwmBool == 1)
  1635  053A  0B26               	decfsz	_pwmBool,w	;volatile
  1636  053B  2D4A               	goto	l2084
  1637  053C  3004               	movlw	4
  1638                           
  1639                           ;main.c: 329: {
  1640                           ;main.c: 330: pwmCounter++;
  1641  053D  0AA4               	incf	SetOUTPUT@pwmCounter,f
  1642                           
  1643                           ;main.c: 331: if(pwmCounter<4)
  1644  053E  0224               	subwf	SetOUTPUT@pwmCounter,w
  1645  053F  1803               	skipnc
  1646  0540  2D44               	goto	l2078
  1647                           
  1648                           ;main.c: 332: {
  1649                           ;main.c: 333: GPIO = temporaryGPIO;
  1650  0541  0825               	movf	SetOUTPUT@temporaryGPIO,w
  1651  0542  0085               	movwf	5	;volatile
  1652                           
  1653                           ;main.c: 334: }
  1654  0543  2D45               	goto	l2080
  1655  0544                     l2078:	
  1656                           
  1657                           ;main.c: 335: else
  1658                           ;main.c: 336: {
  1659                           ;main.c: 337: GPIO = 0;
  1660  0544  0185               	clrf	5	;volatile
  1661  0545                     l2080:	
  1662                           
  1663                           ;main.c: 338: }
  1664                           ;main.c: 340: if(pwmCounter>10)
  1665  0545  300B               	movlw	11
  1666  0546  0224               	subwf	SetOUTPUT@pwmCounter,w
  1667  0547  1803               	btfsc	3,0
  1668                           
  1669                           ;main.c: 341: {
  1670                           ;main.c: 342: pwmCounter = 0;
  1671  0548  01A4               	clrf	SetOUTPUT@pwmCounter
  1672  0549  0008               	return
  1673  054A                     l2084:	
  1674                           
  1675                           ;main.c: 345: else
  1676                           ;main.c: 346: {
  1677                           ;main.c: 347: GPIO = temporaryGPIO;
  1678  054A  0825               	movf	SetOUTPUT@temporaryGPIO,w
  1679  054B  0085               	movwf	5	;volatile
  1680  054C  0008               	return
  1681  054D                     l2086:	
  1682                           
  1683                           ;main.c: 350: else
  1684                           ;main.c: 351: {
  1685                           ;main.c: 352: if (bGLOBAL_IS_PROGRAMMING)
  1686  054D  082B               	movf	_bGLOBAL_IS_PROGRAMMING,w	;volatile
  1687  054E  1903               	btfsc	3,2
  1688  054F  2D5C               	goto	l2096
  1689                           
  1690                           ;main.c: 353: {
  1691                           ;main.c: 354: if (!bGLOBAL_CHANGING_PATTERN)
  1692  0550  082D               	movf	_bGLOBAL_CHANGING_PATTERN,w	;volatile
  1693  0551  1D03               	btfss	3,2
  1694  0552  0008               	return
  1695                           
  1696                           ;main.c: 355: {
  1697                           ;main.c: 356: if (bGLOBAL_InPhase)
  1698  0553  0843               	movf	_bGLOBAL_InPhase,w	;volatile
  1699  0554  1903               	btfsc	3,2
  1700  0555  2D59               	goto	l2094
  1701                           
  1702                           ;main.c: 357: GPIO = 0x23;
  1703  0556  3023               	movlw	35
  1704  0557  0085               	movwf	5	;volatile
  1705  0558  0008               	return
  1706  0559                     l2094:	
  1707                           
  1708                           ;main.c: 358: else
  1709                           ;main.c: 359: GPIO = 0x20;
  1710  0559  3020               	movlw	32
  1711  055A  0085               	movwf	5	;volatile
  1712  055B  0008               	return
  1713  055C                     l2096:	
  1714                           
  1715                           ;main.c: 362: {
  1716                           ;main.c: 363: GPIO = 0;
  1717  055C  0185               	clrf	5	;volatile
  1718  055D  0008               	return
  1719  055E                     __end_of_SetOUTPUT:	
  1720                           
  1721                           	psect	text2
  1722  0603                     __ptext2:	
  1723 ;; *************** function _Initial_Start *****************
  1724 ;; Defined at:
  1725 ;;		line 571 in file "main.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  i               1   19[BANK0 ] unsigned char 
  1730 ;;  read_data       1   18[BANK0 ] unsigned char 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 100/0
  1737 ;;		On exit  : 900/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMMON   BANK0   BANK1
  1740 ;;      Params:         0       0       0
  1741 ;;      Locals:         0       2       0
  1742 ;;      Temps:          0       1       0
  1743 ;;      Totals:         0       3       0
  1744 ;;Total ram usage:        3 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    6
  1747 ;; This function calls:
  1748 ;;		_Update_ComboPattern_Index
  1749 ;;		_Update_Input_Mode_Type
  1750 ;;		_WriteEEPROMDefaults
  1751 ;;		___eetoc
  1752 ;; This function is called by:
  1753 ;;		_main
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           
  1758                           ;psect for function _Initial_Start
  1759  0603                     _Initial_Start:	
  1760                           
  1761                           ;main.c: 573: unsigned char read_data;
  1762                           ;main.c: 574: read_data = EEprom_Written_Flag;
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _Initial_Start: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1766  0603  3004               	movlw	(low _EEprom_Written_Flag)& (0+255)
  1767  0604  2701               	fcall	___eetoc
  1768  0605  00DD               	movwf	Initial_Start@read_data
  1769                           
  1770                           ;main.c: 575: if (read_data ^ 0xA6)
  1771  0606  3AA6               	xorlw	166
  1772  0607  1903               	btfsc	3,2
  1773  0608  2E0A               	goto	l2126
  1774                           
  1775                           ;main.c: 576: WriteEEPROMDefaults();
  1776  0609  26E2               	fcall	_WriteEEPROMDefaults
  1777  060A                     l2126:	
  1778                           
  1779                           ;main.c: 577: for (unsigned char i=0;i<2;i++)
  1780  060A  01DE               	clrf	Initial_Start@i
  1781  060B                     l2132:	
  1782                           
  1783                           ;main.c: 578: {
  1784                           ;main.c: 579: GLOBAL_Mode_copy[i] = EEprom_mode[i];
  1785  060B  085E               	movf	Initial_Start@i,w
  1786  060C  3E02               	addlw	low _EEprom_mode
  1787  060D  2701               	fcall	___eetoc
  1788  060E  00DC               	movwf	??_Initial_Start
  1789  060F  085E               	movf	Initial_Start@i,w
  1790  0610  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  1791  0611  0084               	movwf	4
  1792  0612  085C               	movf	??_Initial_Start,w
  1793  0613  1383               	bcf	3,7	;select IRP bank0
  1794  0614  0080               	movwf	0
  1795                           
  1796                           ;main.c: 580: bGLOBAL_InPhase_copy[i] = EEprom_InPhase[i];
  1797  0615  085E               	movf	Initial_Start@i,w
  1798  0616  3E00               	addlw	low _EEprom_InPhase
  1799  0617  2701               	fcall	___eetoc
  1800  0618  00DC               	movwf	??_Initial_Start
  1801  0619  085E               	movf	Initial_Start@i,w
  1802  061A  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  1803  061B  0084               	movwf	4
  1804  061C  085C               	movf	??_Initial_Start,w
  1805  061D  1383               	bcf	3,7	;select IRP bank0
  1806  061E  0080               	movwf	0
  1807  061F  3002               	movlw	2
  1808  0620  0ADE               	incf	Initial_Start@i,f
  1809  0621  025E               	subwf	Initial_Start@i,w
  1810  0622  1C03               	skipc
  1811  0623  2E0B               	goto	l2132
  1812  0624                     l2138:	
  1813  0624  3005               	movlw	5
  1814  0625  023D               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1815  0626  1C03               	skipc
  1816  0627  2E24               	goto	l2138
  1817                           
  1818                           ;main.c: 583: Update_Input_Mode_Type();
  1819  0628  26CD               	fcall	_Update_Input_Mode_Type
  1820                           
  1821                           ;main.c: 584: Update_ComboPattern_Index();
  1822  0629  2DDB               	ljmp	l1998
  1823  062A                     __end_of_Initial_Start:	
  1824                           
  1825                           	psect	text3
  1826  06E2                     __ptext3:	
  1827 ;; *************** function _WriteEEPROMDefaults *****************
  1828 ;; Defined at:
  1829 ;;		line 380 in file "main.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;		None
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 100/0
  1840 ;;		On exit  : 100/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMMON   BANK0   BANK1
  1843 ;;      Params:         0       0       0
  1844 ;;      Locals:         0       0       0
  1845 ;;      Temps:          0       0       0
  1846 ;;      Totals:         0       0       0
  1847 ;;Total ram usage:        0 bytes
  1848 ;; Hardware stack levels used:    1
  1849 ;; Hardware stack levels required when called:    5
  1850 ;; This function calls:
  1851 ;;		_ReWriteEEPROM
  1852 ;;		___eetoc
  1853 ;; This function is called by:
  1854 ;;		_Initial_Start
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           
  1859                           ;psect for function _WriteEEPROMDefaults
  1860  06E2                     _WriteEEPROMDefaults:	
  1861                           
  1862                           ;main.c: 382: GLOBAL_Mode_copy[0] = 0;
  1863                           
  1864                           ;incstack = 0
  1865                           ; Regs used in _WriteEEPROMDefaults: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1866  06E2  01A2               	clrf	_GLOBAL_Mode_copy	;volatile
  1867                           
  1868                           ;main.c: 383: GLOBAL_Mode_copy[1] = 3;
  1869  06E3  3003               	movlw	3
  1870  06E4  00A3               	movwf	_GLOBAL_Mode_copy+1	;volatile
  1871                           
  1872                           ;main.c: 385: bGLOBAL_InPhase_copy[0] = 1;
  1873  06E5  3001               	movlw	1
  1874  06E6  00A0               	movwf	_bGLOBAL_InPhase_copy	;volatile
  1875                           
  1876                           ;main.c: 386: bGLOBAL_InPhase_copy[1] = 1;
  1877  06E7  00A1               	movwf	_bGLOBAL_InPhase_copy+1	;volatile
  1878                           
  1879                           ;main.c: 389: ReWriteEEPROM();
  1880  06E8  2694               	fcall	_ReWriteEEPROM
  1881                           
  1882                           ;main.c: 391: if (EEprom_Written_Flag != 0xA6)
  1883  06E9  3004               	movlw	(low _EEprom_Written_Flag)& (0+255)
  1884  06EA  2701               	fcall	___eetoc
  1885  06EB  3AA6               	xorlw	166
  1886  06EC  1903               	skipnz
  1887  06ED  0008               	return
  1888  06EE                     l247:	
  1889                           ;main.c: 392: while (1) {}
  1890                           
  1891  06EE  2EEE               	goto	l247
  1892  06EF                     __end_of_WriteEEPROMDefaults:	
  1893                           
  1894                           	psect	text4
  1895  0701                     __ptext4:	
  1896 ;; *************** function ___eetoc *****************
  1897 ;; Defined at:
  1898 ;;		line 96 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eeprom.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;  addr            1    wreg     PTR eeprom void 
  1901 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  addr            1   14[BANK0 ] PTR eeprom void 
  1904 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  1905 ;;  data            1   15[BANK0 ] unsigned char 
  1906 ;; Return value:  Size  Location     Type
  1907 ;;                  1    wreg      unsigned char 
  1908 ;; Registers used:
  1909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 100/0
  1912 ;;		On exit  : 100/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMMON   BANK0   BANK1
  1915 ;;      Params:         0       0       0
  1916 ;;      Locals:         0       2       0
  1917 ;;      Temps:          0       0       0
  1918 ;;      Totals:         0       2       0
  1919 ;;Total ram usage:        2 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    3
  1922 ;; This function calls:
  1923 ;;		_eecpymem
  1924 ;; This function is called by:
  1925 ;;		_WriteEEPROMDefaults
  1926 ;;		_Initial_Start
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           
  1931                           ;psect for function ___eetoc
  1932  0701                     ___eetoc:	
  1933                           
  1934                           ;incstack = 0
  1935                           ; Regs used in ___eetoc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1936                           ;___eetoc@addr stored from wreg
  1937  0701  00D9               	movwf	___eetoc@addr
  1938  0702  00D5               	movwf	eecpymem@from
  1939  0703  305A               	movlw	(low (___eetoc@data| 0))& (0+255)
  1940  0704  01D6               	clrf	eecpymem@size
  1941  0705  0AD6               	incf	eecpymem@size,f
  1942  0706  2674               	fcall	_eecpymem
  1943  0707  085A               	movf	___eetoc@data,w
  1944  0708  0008               	return
  1945  0709                     __end_of___eetoc:	
  1946                           
  1947                           	psect	text5
  1948  0674                     __ptext5:	
  1949 ;; *************** function _eecpymem *****************
  1950 ;; Defined at:
  1951 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eeprom.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  to              1    wreg     PTR volatile unsigned ch
  1954 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetol@data(4), __eetom@data(3), 
  1955 ;;		 -> __eetoi@data(2), __eetoc@data(1), 
  1956 ;;  from            1   10[BANK0 ] PTR eeprom unsigned char
  1957 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  1958 ;;  size            1   11[BANK0 ] unsigned char 
  1959 ;; Auto vars:     Size  Location     Type
  1960 ;;  to              1   13[BANK0 ] PTR volatile unsigned ch
  1961 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetol@data(4), __eetom@data(3), 
  1962 ;;		 -> __eetoi@data(2), __eetoc@data(1), 
  1963 ;;  cp              1   12[BANK0 ] PTR volatile unsigned ch
  1964 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetol@data(4), __eetom@data(3), 
  1965 ;;		 -> __eetoi@data(2), __eetoc@data(1), 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1970 ;; Tracked objects:
  1971 ;;		On entry : 100/0
  1972 ;;		On exit  : 100/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON   BANK0   BANK1
  1975 ;;      Params:         0       2       0
  1976 ;;      Locals:         0       2       0
  1977 ;;      Temps:          0       0       0
  1978 ;;      Totals:         0       4       0
  1979 ;;Total ram usage:        4 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:    2
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		___eetoc
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           
  1990                           ;psect for function _eecpymem
  1991  0674                     _eecpymem:	
  1992                           
  1993                           ;incstack = 0
  1994                           ; Regs used in _eecpymem: [wreg-fsr0h+status,2+status,0]
  1995                           ;eecpymem@to stored from wreg
  1996  0674  00D8               	movwf	eecpymem@to
  1997  0675  0858               	movf	eecpymem@to,w
  1998  0676  00D7               	movwf	eecpymem@cp
  1999  0677                     l392:	
  2000  0677  1683               	bsf	3,5	;RP0=1, select bank1
  2001  0678  189C               	btfsc	28,1	;volsfr
  2002  0679  2E77               	goto	l392
  2003  067A  1283               	bcf	3,5	;RP0=0, select bank0
  2004  067B  0855               	movf	eecpymem@from,w
  2005  067C  1683               	bsf	3,5	;RP0=1, select bank1
  2006  067D  009B               	movwf	27	;volatile
  2007  067E                     l1976:	
  2008  067E  1283               	bcf	3,5	;RP0=0, select bank0
  2009  067F  03D6               	decf	eecpymem@size,f
  2010  0680  0F56               	incfsz	eecpymem@size,w
  2011  0681  2E83               	goto	l397
  2012  0682  0008               	return
  2013  0683                     l397:	
  2014  0683  1683               	bsf	3,5	;RP0=1, select bank1
  2015  0684  189C               	btfsc	28,1	;volsfr
  2016  0685  2E83               	goto	l397
  2017  0686  139C               	bcf	28,7	;volsfr
  2018  0687  141C               	bsf	28,0	;volsfr
  2019  0688  1283               	bcf	3,5	;RP0=0, select bank0
  2020  0689  0857               	movf	eecpymem@cp,w
  2021  068A  0084               	movwf	4
  2022  068B  1683               	bsf	3,5	;RP0=1, select bank1
  2023  068C  081A               	movf	26,w	;volatile
  2024  068D  1383               	bcf	3,7	;select IRP bank0
  2025  068E  0080               	movwf	0
  2026  068F  1283               	bcf	3,5	;RP0=0, select bank0
  2027  0690  0AD7               	incf	eecpymem@cp,f
  2028  0691  1683               	bsf	3,5	;RP0=1, select bank1
  2029  0692  0A9B               	incf	27,f	;volatile
  2030  0693  2E7E               	goto	l1976
  2031  0694                     __end_of_eecpymem:	
  2032                           
  2033                           	psect	text6
  2034  06CD                     __ptext6:	
  2035 ;; *************** function _Update_Input_Mode_Type *****************
  2036 ;; Defined at:
  2037 ;;		line 558 in file "main.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;		None
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;		None
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 900/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMMON   BANK0   BANK1
  2051 ;;      Params:         0       0       0
  2052 ;;      Locals:         0       0       0
  2053 ;;      Temps:          0       0       0
  2054 ;;      Totals:         0       0       0
  2055 ;;Total ram usage:        0 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:    3
  2058 ;; This function calls:
  2059 ;;		_Update_ComboPattern_Index
  2060 ;; This function is called by:
  2061 ;;		_Initial_Start
  2062 ;;		_main
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           
  2067                           ;psect for function _Update_Input_Mode_Type
  2068  06CD                     _Update_Input_Mode_Type:	
  2069                           
  2070                           ;main.c: 560: GLOBAL_Selected_Mode_Type = 0;
  2071                           
  2072                           ;incstack = 0
  2073                           ; Regs used in _Update_Input_Mode_Type: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2074  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  2075  06CE  01B8               	clrf	_GLOBAL_Selected_Mode_Type	;volatile
  2076                           
  2077                           ;main.c: 561: if (bGLOBAL_MODE1_PRESSED)
  2078  06CF  0829               	movf	_bGLOBAL_MODE1_PRESSED,w	;volatile
  2079  06D0  1903               	btfsc	3,2
  2080  06D1  2ED4               	goto	l287
  2081                           
  2082                           ;main.c: 562: GLOBAL_Selected_Mode_Type = 1;
  2083  06D2  3001               	movlw	1
  2084  06D3  00B8               	movwf	_GLOBAL_Selected_Mode_Type	;volatile
  2085  06D4                     l287:	
  2086                           
  2087                           ;main.c: 565: if (GLOBAL_Selected_Mode_Type_copy != GLOBAL_Selected_Mode_Type)
  2088  06D4  0837               	movf	_GLOBAL_Selected_Mode_Type_copy,w	;volatile
  2089  06D5  0638               	xorwf	_GLOBAL_Selected_Mode_Type,w	;volatile
  2090  06D6  1903               	skipnz
  2091  06D7  2ED9               	goto	l2060
  2092                           
  2093                           ;main.c: 566: Update_ComboPattern_Index();
  2094  06D8  25DB               	fcall	_Update_ComboPattern_Index
  2095  06D9                     l2060:	
  2096                           
  2097                           ;main.c: 567: bGLOBAL_InPhase = bGLOBAL_InPhase_copy[GLOBAL_Selected_Mode_Type];
  2098  06D9  0838               	movf	_GLOBAL_Selected_Mode_Type,w
  2099  06DA  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  2100  06DB  0084               	movwf	4
  2101  06DC  1383               	bcf	3,7	;select IRP bank0
  2102  06DD  0800               	movf	0,w
  2103  06DE  00C3               	movwf	_bGLOBAL_InPhase	;volatile
  2104                           
  2105                           ;main.c: 568: GLOBAL_Selected_Mode_Type_copy = GLOBAL_Selected_Mode_Type;
  2106  06DF  0838               	movf	_GLOBAL_Selected_Mode_Type,w	;volatile
  2107  06E0  00B7               	movwf	_GLOBAL_Selected_Mode_Type_copy	;volatile
  2108  06E1  0008               	return
  2109  06E2                     __end_of_Update_Input_Mode_Type:	
  2110                           
  2111                           	psect	text7
  2112  05B3                     __ptext7:	
  2113 ;; *************** function _InitApp *****************
  2114 ;; Defined at:
  2115 ;;		line 22 in file "user.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;		None
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;		None
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  1    wreg      void 
  2122 ;; Registers used:
  2123 ;;		wreg, status,2, status,0, pclath, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : B00/100
  2126 ;;		On exit  : 100/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMMON   BANK0   BANK1
  2129 ;;      Params:         0       0       0
  2130 ;;      Locals:         0       0       0
  2131 ;;      Temps:          0       0       0
  2132 ;;      Totals:         0       0       0
  2133 ;;Total ram usage:        0 bytes
  2134 ;; Hardware stack levels used:    1
  2135 ;; Hardware stack levels required when called:    3
  2136 ;; This function calls:
  2137 ;;		_WaitForSYNC_PU
  2138 ;; This function is called by:
  2139 ;;		_main
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           
  2144                           ;psect for function _InitApp
  2145  05B3                     _InitApp:	
  2146                           
  2147                           ;user.c: 32: WDTCON = 0x17;
  2148                           
  2149                           ;incstack = 0
  2150                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
  2151  05B3  3017               	movlw	23
  2152  05B4  1283               	bcf	3,5	;RP0=0, select bank0
  2153  05B5  0098               	movwf	24	;volatile
  2154                           
  2155                           ;user.c: 33: OPTION_REGbits.nGPPU = 0;
  2156  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  2157  05B7  1381               	bcf	1,7	;volatile
  2158                           
  2159                           ;user.c: 34: WPU = 0x10;
  2160  05B8  3010               	movlw	16
  2161  05B9  0095               	movwf	21	;volatile
  2162                           
  2163                           ;user.c: 35: GPIO = 0;
  2164  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  2165  05BB  0185               	clrf	5	;volatile
  2166                           
  2167                           ;user.c: 36: CMCON0 = 0x07;
  2168  05BC  3007               	movlw	7
  2169  05BD  0099               	movwf	25	;volatile
  2170                           
  2171                           ;user.c: 37: ANSEL = 0;
  2172  05BE  1683               	bsf	3,5	;RP0=1, select bank1
  2173  05BF  019F               	clrf	31	;volatile
  2174                           
  2175                           ;user.c: 38: TRISIO = ~(0x1 + 0x2 + 0x20);
  2176  05C0  30DC               	movlw	220
  2177  05C1  0085               	movwf	5	;volatile
  2178                           
  2179                           ;user.c: 39: bGLOBAL_ENABLE_LEDS = 0;
  2180  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  2181  05C3  01AA               	clrf	_bGLOBAL_ENABLE_LEDS	;volatile
  2182                           
  2183                           ;user.c: 41: OPTION_REGbits.T0CS = 0;
  2184  05C4  1683               	bsf	3,5	;RP0=1, select bank1
  2185  05C5  1281               	bcf	1,5	;volatile
  2186                           
  2187                           ;user.c: 42: OPTION_REGbits.PS = 0x3;
  2188  05C6  0801               	movf	1,w	;volatile
  2189  05C7  39F8               	andlw	-8
  2190  05C8  3803               	iorlw	3
  2191  05C9  0081               	movwf	1	;volatile
  2192                           
  2193                           ;user.c: 43: OPTION_REGbits.PSA = 0;
  2194  05CA  1181               	bcf	1,3	;volatile
  2195  05CB  0064               	clrwdt	;# 
  2196                           
  2197                           ;user.c: 47: WaitForSYNC_PU();
  2198  05CC  26EF               	fcall	_WaitForSYNC_PU
  2199                           
  2200                           ;user.c: 48: WPU = 0x00;
  2201  05CD  1683               	bsf	3,5	;RP0=1, select bank1
  2202  05CE  0195               	clrf	21	;volatile
  2203                           
  2204                           ;user.c: 49: TRISIObits.TRISIO4 = 0;
  2205  05CF  1205               	bcf	5,4	;volatile
  2206                           
  2207                           ;user.c: 50: GPIO = 0;
  2208  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  2209  05D1  0185               	clrf	5	;volatile
  2210                           
  2211                           ;user.c: 51: TRISIObits.TRISIO4 = 1;
  2212  05D2  1683               	bsf	3,5	;RP0=1, select bank1
  2213  05D3  1605               	bsf	5,4	;volatile
  2214                           
  2215                           ;user.c: 52: WaitForSYNC_PU();
  2216  05D4  26EF               	fcall	_WaitForSYNC_PU
  2217                           
  2218                           ;user.c: 53: TMR0 = 131;
  2219  05D5  3083               	movlw	131
  2220  05D6  0081               	movwf	1	;volatile
  2221                           
  2222                           ;user.c: 54: INTCONbits.TMR0IF = 0;
  2223  05D7  110B               	bcf	11,2	;volatile
  2224                           
  2225                           ;user.c: 55: INTCON = 0x20 + 0x80;
  2226  05D8  30A0               	movlw	160
  2227  05D9  008B               	movwf	11	;volatile
  2228  05DA  0008               	return
  2229  05DB                     __end_of_InitApp:	
  2230                           
  2231                           	psect	text8
  2232  06EF                     __ptext8:	
  2233 ;; *************** function _WaitForSYNC_PU *****************
  2234 ;; Defined at:
  2235 ;;		line 368 in file "main.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;		None
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  temp001         1   10[BANK0 ] unsigned char 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg, status,2, status,0
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/100
  2246 ;;		On exit  : 100/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMMON   BANK0   BANK1
  2249 ;;      Params:         0       0       0
  2250 ;;      Locals:         0       1       0
  2251 ;;      Temps:          0       0       0
  2252 ;;      Totals:         0       1       0
  2253 ;;Total ram usage:        1 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; Hardware stack levels required when called:    2
  2256 ;; This function calls:
  2257 ;;		Nothing
  2258 ;; This function is called by:
  2259 ;;		_InitApp
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           
  2264                           ;psect for function _WaitForSYNC_PU
  2265  06EF                     _WaitForSYNC_PU:	
  2266  06EF                     l2032:	
  2267                           ;incstack = 0
  2268                           ; Regs used in _WaitForSYNC_PU: [wreg+status,2+status,0]
  2269                           
  2270                           
  2271                           ;main.c: 370: unsigned char temp001 = 0;
  2272  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  2273  06F0  01D5               	clrf	WaitForSYNC_PU@temp001
  2274  06F1                     l2038:	
  2275                           ;main.c: 371: while(temp001 < 250)
  2276                           
  2277  06F1  30FA               	movlw	250
  2278  06F2  0255               	subwf	WaitForSYNC_PU@temp001,w
  2279  06F3  1803               	btfsc	3,0
  2280  06F4  0008               	return
  2281                           
  2282                           ;main.c: 372: {
  2283                           ;main.c: 373: if ((GPIObits.GP4))
  2284  06F5  1E05               	btfss	5,4	;volatile
  2285  06F6  2EEF               	goto	l2032
  2286                           
  2287                           ;main.c: 374: temp001++;
  2288  06F7  0AD5               	incf	WaitForSYNC_PU@temp001,f
  2289  06F8  2EF1               	goto	l2038
  2290  06F9                     __end_of_WaitForSYNC_PU:	
  2291                           
  2292                           	psect	text9
  2293  062A                     __ptext9:	
  2294 ;; *************** function _INC_EEPROM_MODE *****************
  2295 ;; Defined at:
  2296 ;;		line 406 in file "main.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;		None
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  Temp_Mode_Da    1   17[BANK0 ] unsigned char 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 100/0
  2307 ;;		On exit  : 900/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMMON   BANK0   BANK1
  2310 ;;      Params:         0       0       0
  2311 ;;      Locals:         0       1       0
  2312 ;;      Temps:          0       0       0
  2313 ;;      Totals:         0       1       0
  2314 ;;Total ram usage:        1 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:    5
  2317 ;; This function calls:
  2318 ;;		_ReWriteEEPROM
  2319 ;;		_Update_ComboPattern_Index
  2320 ;; This function is called by:
  2321 ;;		_main
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           
  2326                           ;psect for function _INC_EEPROM_MODE
  2327  062A                     _INC_EEPROM_MODE:	
  2328                           
  2329                           ;main.c: 408: unsigned char Temp_Mode_Data;
  2330                           ;main.c: 409: Temp_Mode_Data = GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type];
  2331                           
  2332                           ;incstack = 0
  2333                           ; Regs used in _INC_EEPROM_MODE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2334  062A  0838               	movf	_GLOBAL_Selected_Mode_Type,w
  2335  062B  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2336  062C  0084               	movwf	4
  2337  062D  1383               	bcf	3,7	;select IRP bank0
  2338  062E  0800               	movf	0,w
  2339  062F  00DC               	movwf	INC_EEPROM_MODE@Temp_Mode_Data
  2340                           
  2341                           ;main.c: 417: if (GLOBAL_Selected_Mode_Type == 1)
  2342  0630  0B38               	decfsz	_GLOBAL_Selected_Mode_Type,w	;volatile
  2343  0631  2E3E               	goto	l2108
  2344                           
  2345                           ;main.c: 418: {
  2346                           ;main.c: 419: if (Temp_Mode_Data < (14 - 1))
  2347  0632  300D               	movlw	13
  2348  0633  025C               	subwf	INC_EEPROM_MODE@Temp_Mode_Data,w
  2349                           
  2350                           ;main.c: 420: GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type]++;
  2351  0634  0838               	movf	_GLOBAL_Selected_Mode_Type,w
  2352  0635  1803               	skipnc
  2353  0636  2E3B               	goto	L1
  2354  0637  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2355  0638  0084               	movwf	4
  2356  0639  0A80               	incf	0,f
  2357  063A  2E3E               	goto	l2108
  2358  063B                     L1:	
  2359                           ;main.c: 421: else GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type] = 0;
  2360                           
  2361  063B  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2362  063C  0084               	movwf	4
  2363  063D  0180               	clrf	0
  2364  063E                     l2108:	
  2365                           
  2366                           ;main.c: 422: }
  2367                           ;main.c: 423: if (GLOBAL_Selected_Mode_Type == 0)
  2368  063E  0838               	movf	_GLOBAL_Selected_Mode_Type,w	;volatile
  2369  063F  1D03               	btfss	3,2
  2370  0640  2E4D               	goto	l2116
  2371                           
  2372                           ;main.c: 424: {
  2373                           ;main.c: 425: if (Temp_Mode_Data < (14 - 1))
  2374  0641  300D               	movlw	13
  2375  0642  025C               	subwf	INC_EEPROM_MODE@Temp_Mode_Data,w
  2376                           
  2377                           ;main.c: 426: GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type]++;
  2378  0643  0838               	movf	_GLOBAL_Selected_Mode_Type,w
  2379  0644  1803               	skipnc
  2380  0645  2E4A               	goto	L2
  2381  0646  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2382  0647  0084               	movwf	4
  2383  0648  0A80               	incf	0,f
  2384  0649  2E4D               	goto	l2116
  2385  064A                     L2:	
  2386                           ;main.c: 427: else GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type] = 0;
  2387                           
  2388  064A  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2389  064B  0084               	movwf	4
  2390  064C  0180               	clrf	0
  2391  064D                     l2116:	
  2392                           
  2393                           ;main.c: 428: }
  2394                           ;main.c: 429: ReWriteEEPROM();
  2395  064D  2694               	fcall	_ReWriteEEPROM
  2396                           
  2397                           ;main.c: 430: Update_ComboPattern_Index();
  2398  064E  2DDB               	ljmp	l1998
  2399  064F                     __end_of_INC_EEPROM_MODE:	
  2400                           
  2401                           	psect	text10
  2402  05DB                     __ptext10:	
  2403 ;; *************** function _Update_ComboPattern_Index *****************
  2404 ;; Defined at:
  2405 ;;		line 464 in file "main.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;		None
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;		None
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      void 
  2412 ;; Registers used:
  2413 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2414 ;; Tracked objects:
  2415 ;;		On entry : 100/0
  2416 ;;		On exit  : 900/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMMON   BANK0   BANK1
  2419 ;;      Params:         0       0       0
  2420 ;;      Locals:         0       0       0
  2421 ;;      Temps:          0       0       0
  2422 ;;      Totals:         0       0       0
  2423 ;;Total ram usage:        0 bytes
  2424 ;; Hardware stack levels used:    1
  2425 ;; Hardware stack levels required when called:    2
  2426 ;; This function calls:
  2427 ;;		Nothing
  2428 ;; This function is called by:
  2429 ;;		_INC_EEPROM_MODE
  2430 ;;		_Update_Input_Mode_Type
  2431 ;;		_Initial_Start
  2432 ;;		_main
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           
  2437                           ;psect for function _Update_ComboPattern_Index
  2438  05DB                     _Update_ComboPattern_Index:	
  2439  05DB                     l1998:	
  2440                           ;incstack = 0
  2441                           ; Regs used in _Update_ComboPattern_Index: [wreg-fsr0h+status,2+status,0]
  2442                           
  2443                           
  2444                           ;main.c: 466: GLOBAL_Selected_Mode_Number = GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type];
  2445  05DB  0838               	movf	_GLOBAL_Selected_Mode_Type,w
  2446  05DC  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2447  05DD  0084               	movwf	4
  2448  05DE  1383               	bcf	3,7	;select IRP bank0
  2449  05DF  0800               	movf	0,w
  2450  05E0  00B9               	movwf	_GLOBAL_Selected_Mode_Number	;volatile
  2451                           
  2452                           ;main.c: 467: GLOBAL_combo_patterns_index = GLOBAL_Selected_Mode_Number;
  2453  05E1  0839               	movf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2454  05E2  00F9               	movwf	_GLOBAL_combo_patterns_index	;volatile
  2455                           
  2456                           ;main.c: 469: pwmBool = 0;
  2457  05E3  01A6               	clrf	_pwmBool	;volatile
  2458                           
  2459                           ;main.c: 471: if(GLOBAL_Selected_Mode_Number < 11)
  2460  05E4  300B               	movlw	11
  2461  05E5  0239               	subwf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2462  05E6  1803               	skipnc
  2463  05E7  2DEE               	goto	l2012
  2464                           
  2465                           ;main.c: 472: {
  2466                           ;main.c: 473: bGLOBAL_STEADY_ON = 0;
  2467  05E8  01C9               	clrf	_bGLOBAL_STEADY_ON	;volatile
  2468                           
  2469                           ;main.c: 474: GLOBAL_combo_patterns_index = GLOBAL_Selected_Mode_Number;
  2470  05E9  0839               	movf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2471  05EA  00F9               	movwf	_GLOBAL_combo_patterns_index	;volatile
  2472                           
  2473                           ;main.c: 475: GLOBAL_CHANNELS_EN = 0xFE;
  2474  05EB  30FE               	movlw	254
  2475  05EC  00B0               	movwf	_GLOBAL_CHANNELS_EN	;volatile
  2476                           
  2477                           ;main.c: 476: bDualColor = 0;
  2478  05ED  01C2               	clrf	_bDualColor	;volatile
  2479  05EE                     l2012:	
  2480                           
  2481                           ;main.c: 477: }
  2482                           ;main.c: 535: if(GLOBAL_combo_patterns_index == 14-1)
  2483  05EE  300D               	movlw	13
  2484  05EF  0679               	xorwf	_GLOBAL_combo_patterns_index,w	;volatile
  2485  05F0  1D03               	btfss	3,2
  2486  05F1  2DF4               	goto	l281
  2487                           
  2488                           ;main.c: 536: {
  2489                           ;main.c: 537: pwmBool = 1;
  2490  05F2  3001               	movlw	1
  2491  05F3  00A6               	movwf	_pwmBool	;volatile
  2492  05F4                     l281:	
  2493                           
  2494                           ;main.c: 538: }
  2495                           ;main.c: 540: if (GLOBAL_combo_patterns_index >= 11)
  2496  05F4  300B               	movlw	11
  2497  05F5  0279               	subwf	_GLOBAL_combo_patterns_index,w	;volatile
  2498  05F6  1C03               	skipc
  2499  05F7  2DFD               	goto	l2018
  2500                           
  2501                           ;main.c: 541: {
  2502                           ;main.c: 542: bGLOBAL_STEADY_ON = 1;
  2503  05F8  3001               	movlw	1
  2504  05F9  00C9               	movwf	_bGLOBAL_STEADY_ON	;volatile
  2505                           
  2506                           ;main.c: 543: GLOBAL_CHANNELS_EN = 0xFE;
  2507  05FA  30FE               	movlw	254
  2508  05FB  00B0               	movwf	_GLOBAL_CHANNELS_EN	;volatile
  2509                           
  2510                           ;main.c: 544: }
  2511  05FC  2DFE               	goto	l2020
  2512  05FD                     l2018:	
  2513                           
  2514                           ;main.c: 545: else
  2515                           ;main.c: 546: {
  2516                           ;main.c: 547: bGLOBAL_STEADY_ON = 0;
  2517  05FD  01C9               	clrf	_bGLOBAL_STEADY_ON	;volatile
  2518  05FE                     l2020:	
  2519                           
  2520                           ;main.c: 548: }
  2521                           ;main.c: 551: GLOBAL_sub_patterns_column_index = 7;
  2522  05FE  3007               	movlw	7
  2523  05FF  00FC               	movwf	_GLOBAL_sub_patterns_column_index	;volatile
  2524                           
  2525                           ;main.c: 552: GLOBAL_sub_patterns_timer = 0;
  2526  0600  01C8               	clrf	_GLOBAL_sub_patterns_timer	;volatile
  2527                           
  2528                           ;main.c: 553: GLOBAL_Dummy_Counter2 = 0;
  2529  0601  01BC               	clrf	_GLOBAL_Dummy_Counter2	;volatile
  2530  0602  0008               	return
  2531  0603                     __end_of_Update_ComboPattern_Index:	
  2532                           
  2533                           	psect	text11
  2534  0694                     __ptext11:	
  2535 ;; *************** function _ReWriteEEPROM *****************
  2536 ;; Defined at:
  2537 ;;		line 395 in file "main.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;		None
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;  i               1   16[BANK0 ] unsigned char 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      void 
  2544 ;; Registers used:
  2545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 100/0
  2548 ;;		On exit  : 100/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMMON   BANK0   BANK1
  2551 ;;      Params:         0       0       0
  2552 ;;      Locals:         0       1       0
  2553 ;;      Temps:          0       0       0
  2554 ;;      Totals:         0       1       0
  2555 ;;Total ram usage:        1 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; Hardware stack levels required when called:    4
  2558 ;; This function calls:
  2559 ;;		___ctoee
  2560 ;; This function is called by:
  2561 ;;		_WriteEEPROMDefaults
  2562 ;;		_INC_EEPROM_MODE
  2563 ;;		_main
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           
  2568                           ;psect for function _ReWriteEEPROM
  2569  0694                     _ReWriteEEPROM:	
  2570                           
  2571                           ;main.c: 397: EEprom_Written_Flag = 0xFF;
  2572                           
  2573                           ;incstack = 0
  2574                           ; Regs used in _ReWriteEEPROM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2575  0694  30FF               	movlw	255
  2576  0695  00D9               	movwf	___ctoee@data
  2577  0696  3004               	movlw	(low _EEprom_Written_Flag)& (0+255)
  2578  0697  2709               	fcall	___ctoee
  2579                           
  2580                           ;main.c: 398: for (unsigned char i=0;i<2;i++)
  2581  0698  01DB               	clrf	ReWriteEEPROM@i
  2582  0699                     l1990:	
  2583                           
  2584                           ;main.c: 399: {
  2585                           ;main.c: 400: EEprom_mode[i] = GLOBAL_Mode_copy[i];
  2586  0699  085B               	movf	ReWriteEEPROM@i,w
  2587  069A  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2588  069B  0084               	movwf	4
  2589  069C  1383               	bcf	3,7	;select IRP bank0
  2590  069D  0800               	movf	0,w
  2591  069E  00D9               	movwf	___ctoee@data
  2592  069F  085B               	movf	ReWriteEEPROM@i,w
  2593  06A0  3E02               	addlw	low _EEprom_mode
  2594  06A1  2709               	fcall	___ctoee
  2595                           
  2596                           ;main.c: 401: EEprom_InPhase[i] = bGLOBAL_InPhase_copy[i];
  2597  06A2  085B               	movf	ReWriteEEPROM@i,w
  2598  06A3  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  2599  06A4  0084               	movwf	4
  2600  06A5  1383               	bcf	3,7	;select IRP bank0
  2601  06A6  0800               	movf	0,w
  2602  06A7  00D9               	movwf	___ctoee@data
  2603  06A8  085B               	movf	ReWriteEEPROM@i,w
  2604  06A9  3E00               	addlw	low _EEprom_InPhase
  2605  06AA  2709               	fcall	___ctoee
  2606  06AB  3002               	movlw	2
  2607  06AC  0ADB               	incf	ReWriteEEPROM@i,f
  2608  06AD  025B               	subwf	ReWriteEEPROM@i,w
  2609  06AE  1C03               	skipc
  2610  06AF  2E99               	goto	l1990
  2611                           
  2612                           ;main.c: 402: }
  2613                           ;main.c: 403: EEprom_Written_Flag = 0xA6;
  2614  06B0  30A6               	movlw	166
  2615  06B1  00D9               	movwf	___ctoee@data
  2616  06B2  3004               	movlw	(low _EEprom_Written_Flag)& (0+255)
  2617  06B3  2F09               	ljmp	___ctoee
  2618  06B4                     __end_of_ReWriteEEPROM:	
  2619                           
  2620                           	psect	text12
  2621  0709                     __ptext12:	
  2622 ;; *************** function ___ctoee *****************
  2623 ;; Defined at:
  2624 ;;		line 128 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eeprom.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  addr            1    wreg     PTR eeprom void 
  2627 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  2628 ;;  data            1   14[BANK0 ] unsigned char 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  addr            1   15[BANK0 ] PTR eeprom void 
  2631 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      unsigned char 
  2634 ;; Registers used:
  2635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 100/0
  2638 ;;		On exit  : 100/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMMON   BANK0   BANK1
  2641 ;;      Params:         0       1       0
  2642 ;;      Locals:         0       1       0
  2643 ;;      Temps:          0       0       0
  2644 ;;      Totals:         0       2       0
  2645 ;;Total ram usage:        2 bytes
  2646 ;; Hardware stack levels used:    1
  2647 ;; Hardware stack levels required when called:    3
  2648 ;; This function calls:
  2649 ;;		_memcpyee
  2650 ;; This function is called by:
  2651 ;;		_ReWriteEEPROM
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           
  2656                           ;psect for function ___ctoee
  2657  0709                     ___ctoee:	
  2658                           
  2659                           ;incstack = 0
  2660                           ; Regs used in ___ctoee: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2661                           ;___ctoee@addr stored from wreg
  2662  0709  00DA               	movwf	___ctoee@addr
  2663  070A  3059               	movlw	(low (___ctoee@data| 0))& (0+255)
  2664  070B  00D5               	movwf	memcpyee@from
  2665  070C  01D6               	clrf	memcpyee@size
  2666  070D  0AD6               	incf	memcpyee@size,f
  2667  070E  085A               	movf	___ctoee@addr,w
  2668  070F  2D05               	ljmp	_memcpyee
  2669  0710                     __end_of___ctoee:	
  2670                           
  2671                           	psect	text13
  2672  0505                     __ptext13:	
  2673 ;; *************** function _memcpyee *****************
  2674 ;; Defined at:
  2675 ;;		line 39 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eeprom.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  to              1    wreg     PTR eeprom unsigned char
  2678 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  2679 ;;  from            1   10[BANK0 ] PTR const unsigned char 
  2680 ;;		 -> __fltoee@data(3), __fttoee@data(3), __ltoee@data(4), __mtoee@data(3), 
  2681 ;;		 -> __itoee@data(2), __ctoee@data(1), 
  2682 ;;  size            1   11[BANK0 ] unsigned char 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  to              1   13[BANK0 ] PTR eeprom unsigned char
  2685 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  2686 ;;  ptr             1   12[BANK0 ] PTR const unsigned char 
  2687 ;;		 -> __fltoee@data(3), __fttoee@data(3), __ltoee@data(4), __mtoee@data(3), 
  2688 ;;		 -> __itoee@data(2), __ctoee@data(1), 
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      void 
  2691 ;; Registers used:
  2692 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2693 ;; Tracked objects:
  2694 ;;		On entry : 100/0
  2695 ;;		On exit  : 100/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMMON   BANK0   BANK1
  2698 ;;      Params:         0       2       0
  2699 ;;      Locals:         0       2       0
  2700 ;;      Temps:          0       0       0
  2701 ;;      Totals:         0       4       0
  2702 ;;Total ram usage:        4 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    2
  2705 ;; This function calls:
  2706 ;;		Nothing
  2707 ;; This function is called by:
  2708 ;;		___ctoee
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           
  2713                           ;psect for function _memcpyee
  2714  0505                     _memcpyee:	
  2715                           
  2716                           ;incstack = 0
  2717                           ; Regs used in _memcpyee: [wreg-fsr0h+status,2+status,0]
  2718                           ;memcpyee@to stored from wreg
  2719  0505  00D8               	movwf	memcpyee@to
  2720  0506  0855               	movf	memcpyee@from,w
  2721  0507  00D7               	movwf	memcpyee@ptr
  2722  0508                     l404:	
  2723  0508  1683               	bsf	3,5	;RP0=1, select bank1
  2724  0509  189C               	btfsc	28,1	;volsfr
  2725  050A  2D08               	goto	l404
  2726  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2727  050C  0858               	movf	memcpyee@to,w
  2728  050D  3EFF               	addlw	255
  2729  050E  1683               	bsf	3,5	;RP0=1, select bank1
  2730  050F  009B               	movwf	27	;volatile
  2731  0510  139C               	bcf	28,7	;volsfr
  2732  0511                     l1964:	
  2733  0511  1283               	bcf	3,5	;RP0=0, select bank0
  2734  0512  03D6               	decf	memcpyee@size,f
  2735  0513  0F56               	incfsz	memcpyee@size,w
  2736  0514  2D16               	goto	l409
  2737  0515  0008               	return
  2738  0516                     l409:	
  2739  0516  1683               	bsf	3,5	;RP0=1, select bank1
  2740  0517  189C               	btfsc	28,1	;volsfr
  2741  0518  2D16               	goto	l409
  2742  0519  1283               	bcf	3,5	;RP0=0, select bank0
  2743  051A  0857               	movf	memcpyee@ptr,w
  2744  051B  0084               	movwf	4
  2745  051C  1383               	bcf	3,7	;select IRP bank0
  2746  051D  0800               	movf	0,w
  2747  051E  1683               	bsf	3,5	;RP0=1, select bank1
  2748  051F  009A               	movwf	26	;volatile
  2749  0520  1283               	bcf	3,5	;RP0=0, select bank0
  2750  0521  0AD7               	incf	memcpyee@ptr,f
  2751  0522  1683               	bsf	3,5	;RP0=1, select bank1
  2752  0523  0A9B               	incf	27,f	;volatile
  2753  0524  1003               	bcf	3,0	;volatile
  2754  0525  1B8B               	btfsc	11,7	;volatile
  2755  0526  1403               	bsf	3,0	;volatile
  2756  0527  138B               	bcf	11,7	;volatile
  2757  0528  151C               	bsf	28,2	;volsfr
  2758  0529  3055               	movlw	85
  2759  052A  009D               	movwf	29	;volsfr
  2760  052B  30AA               	movlw	170
  2761  052C  009D               	movwf	29	;volsfr
  2762  052D  149C               	bsf	28,1	;volsfr
  2763  052E  111C               	bcf	28,2	;volsfr
  2764  052F  1C03               	btfss	3,0	;volatile
  2765  0530  2D11               	goto	l1964
  2766  0531  178B               	bsf	11,7	;volatile
  2767  0532  2D11               	goto	l1964
  2768  0533                     __end_of_memcpyee:	
  2769                           
  2770                           	psect	text14
  2771  0710                     __ptext14:	
  2772 ;; *************** function _ConfigureOscillator *****************
  2773 ;; Defined at:
  2774 ;;		line 18 in file "system.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      void 
  2781 ;; Registers used:
  2782 ;;		wreg
  2783 ;; Tracked objects:
  2784 ;;		On entry : B00/0
  2785 ;;		On exit  : B00/100
  2786 ;;		Unchanged: A00/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1
  2788 ;;      Params:         0       0       0
  2789 ;;      Locals:         0       0       0
  2790 ;;      Temps:          0       0       0
  2791 ;;      Totals:         0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    2
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_main
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           
  2803                           ;psect for function _ConfigureOscillator
  2804  0710                     _ConfigureOscillator:	
  2805                           
  2806                           ;system.c: 27: OSCCON = 0x40 | 0x20 | 0x10 | 0x1 & (~0x8) ;
  2807                           
  2808                           ;incstack = 0
  2809                           ; Regs used in _ConfigureOscillator: [wreg]
  2810  0710  3071               	movlw	113
  2811  0711  1683               	bsf	3,5	;RP0=1, select bank1
  2812  0712  008F               	movwf	15	;volatile
  2813  0713                     l337:	
  2814                           ;system.c: 29: {}
  2815                           
  2816  0713  190F               	btfsc	15,2	;volatile
  2817  0714  1C8F               	btfss	15,1	;volatile
  2818  0715  0008               	return
  2819  0716  2F13               	goto	l337
  2820  0717                     __end_of_ConfigureOscillator:	
  2821                           
  2822                           	psect	text15
  2823  0334                     __ptext15:	
  2824 ;; *************** function _isr *****************
  2825 ;; Defined at:
  2826 ;;		line 26 in file "interrupts.c"
  2827 ;; Parameters:    Size  Location     Type
  2828 ;;		None
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  temp_data1      1    6[COMMON] volatile unsigned char 
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  1    wreg      void 
  2833 ;; Registers used:
  2834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 100/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMMON   BANK0   BANK1
  2840 ;;      Params:         0       0       0
  2841 ;;      Locals:         1       0       0
  2842 ;;      Temps:          0      10       0
  2843 ;;      Totals:         1      10       0
  2844 ;;Total ram usage:       11 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; Hardware stack levels required when called:    1
  2847 ;; This function calls:
  2848 ;;		_Read_Mode_Input
  2849 ;;		___bmul
  2850 ;;		___wmul
  2851 ;;		i1_SetOUTPUT
  2852 ;; This function is called by:
  2853 ;;		Interrupt level 1
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           
  2858                           ;psect for function _isr
  2859  0334                     _isr:	
  2860                           
  2861                           ;interrupts.c: 28: volatile unsigned char temp_data1;
  2862                           ;interrupts.c: 29: static unsigned char tenMSCounter = 0;
  2863                           ;interrupts.c: 30: static unsigned char pwmCounter = 0;
  2864                           ;interrupts.c: 57: if (INTCONbits.TMR0IF && INTCONbits.TMR0IE)
  2865  0334  190B               	btfsc	11,2	;volatile
  2866  0335  1E8B               	btfss	11,5	;volatile
  2867  0336  2C72               	goto	i1l103
  2868                           
  2869                           ;interrupts.c: 58: {
  2870                           ;interrupts.c: 59: TMR0 = 131;
  2871  0337  3083               	movlw	131
  2872  0338  0081               	movwf	1	;volatile
  2873                           
  2874                           ;interrupts.c: 61: if (bGLOBAL_OUTPUT_BUFFER_CHANGED || bGLOBAL_STEADY_ON)
  2875  0339  084A               	movf	_bGLOBAL_OUTPUT_BUFFER_CHANGED,w	;volatile
  2876  033A  1903               	btfsc	3,2
  2877  033B  0849               	movf	_bGLOBAL_STEADY_ON,w	;volatile
  2878  033C  1903               	btfsc	3,2
  2879  033D  2B40               	goto	i1l2264
  2880                           
  2881                           ;interrupts.c: 62: {
  2882                           ;interrupts.c: 63: SetOUTPUT();
  2883  033E  255E               	fcall	i1_SetOUTPUT
  2884                           
  2885                           ;interrupts.c: 64: bGLOBAL_OUTPUT_BUFFER_CHANGED = 0;
  2886  033F  01CA               	clrf	_bGLOBAL_OUTPUT_BUFFER_CHANGED	;volatile
  2887  0340                     i1l2264:	
  2888  0340  300A               	movlw	10
  2889                           
  2890                           ;interrupts.c: 65: }
  2891                           ;interrupts.c: 66: tenMSCounter++;
  2892  0341  0ABB               	incf	isr@tenMSCounter,f
  2893                           
  2894                           ;interrupts.c: 67: if(tenMSCounter>9)
  2895  0342  023B               	subwf	isr@tenMSCounter,w
  2896  0343  1C03               	skipc
  2897  0344  2C71               	goto	i1l2420
  2898  0345  3007               	movlw	7
  2899                           
  2900                           ;interrupts.c: 68: {
  2901                           ;interrupts.c: 69: tenMSCounter = 0;
  2902  0346  01BB               	clrf	isr@tenMSCounter
  2903                           
  2904                           ;interrupts.c: 70: if ((GLOBAL_sub_patterns_column_index < 7) && (GLOBAL_sub_patterns_ti
      +                          mer == 0))
  2905  0347  027C               	subwf	_GLOBAL_sub_patterns_column_index,w	;volatile
  2906  0348  1803               	skipnc
  2907  0349  2B93               	goto	i1l2290
  2908  034A  0848               	movf	_GLOBAL_sub_patterns_timer,w	;volatile
  2909  034B  1D03               	btfss	3,2
  2910  034C  2B93               	goto	i1l2290
  2911                           
  2912                           ;interrupts.c: 71: {
  2913                           ;interrupts.c: 72: if (GLOBAL_sub_patterns_index_copy != GLOBAL_sub_patterns_index)
  2914  034D  0847               	movf	_GLOBAL_sub_patterns_index_copy,w	;volatile
  2915  034E  067B               	xorwf	_GLOBAL_sub_patterns_index,w	;volatile
  2916  034F  1903               	skipnz
  2917  0350  2B54               	goto	i1l2280
  2918                           
  2919                           ;interrupts.c: 73: {
  2920                           ;interrupts.c: 74: GLOBAL_sub_patterns_column_index = 0;
  2921  0351  01FC               	clrf	_GLOBAL_sub_patterns_column_index	;volatile
  2922                           
  2923                           ;interrupts.c: 75: GLOBAL_sub_patterns_index_copy = GLOBAL_sub_patterns_index;
  2924  0352  087B               	movf	_GLOBAL_sub_patterns_index,w	;volatile
  2925  0353  00C7               	movwf	_GLOBAL_sub_patterns_index_copy	;volatile
  2926  0354                     i1l2280:	
  2927                           
  2928                           ;interrupts.c: 76: }
  2929                           ;interrupts.c: 78: GLOBAL_sub_patterns_timer = ROM_Sub_Patterns_Time[GLOBAL_sub_patterns
      +                          _index][GLOBAL_sub_patterns_column_index];
  2930  0354  3007               	movlw	7
  2931  0355  00F0               	movwf	___bmul@multiplicand
  2932  0356  087B               	movf	_GLOBAL_sub_patterns_index,w
  2933  0357  2589               	fcall	___bmul
  2934  0358  3EBD               	addlw	low (_ROM_Sub_Patterns_Time| (0+32768))
  2935  0359  00CB               	movwf	??_isr
  2936  035A  3082               	movlw	high (_ROM_Sub_Patterns_Time| (0+32768))
  2937  035B  1803               	skipnc
  2938  035C  3E01               	addlw	1
  2939  035D  00CC               	movwf	??_isr+1
  2940  035E  087C               	movf	_GLOBAL_sub_patterns_column_index,w
  2941  035F  074B               	addwf	??_isr,w
  2942  0360  0084               	movwf	4
  2943  0361  084C               	movf	??_isr+1,w
  2944  0362  1803               	skipnc
  2945  0363  0A4C               	incf	??_isr+1,w
  2946  0364  00FF               	movwf	127
  2947  0365  2100               	fcall	stringtab
  2948  0366  00C8               	movwf	_GLOBAL_sub_patterns_timer	;volatile
  2949                           
  2950                           ;interrupts.c: 80: OUTPUT_BUFFER = ROM_Sub_Patterns[GLOBAL_sub_patterns_index][GLOBAL_su
      +                          b_patterns_column_index];
  2951  0367  3007               	movlw	7
  2952  0368  00F0               	movwf	___bmul@multiplicand
  2953  0369  087B               	movf	_GLOBAL_sub_patterns_index,w
  2954  036A  2589               	fcall	___bmul
  2955  036B  3E46               	addlw	low (_ROM_Sub_Patterns| (0+32768))
  2956  036C  00CB               	movwf	??_isr
  2957  036D  3082               	movlw	high (_ROM_Sub_Patterns| (0+32768))
  2958  036E  1803               	skipnc
  2959  036F  3E01               	addlw	1
  2960  0370  00CC               	movwf	??_isr+1
  2961  0371  087C               	movf	_GLOBAL_sub_patterns_column_index,w
  2962  0372  074B               	addwf	??_isr,w
  2963  0373  0084               	movwf	4
  2964  0374  084C               	movf	??_isr+1,w
  2965  0375  1803               	skipnc
  2966  0376  0A4C               	incf	??_isr+1,w
  2967  0377  00FF               	movwf	127
  2968  0378  2100               	fcall	stringtab
  2969  0379  00FA               	movwf	_OUTPUT_BUFFER	;volatile
  2970                           
  2971                           ;interrupts.c: 82: GLOBAL_sub_patterns_column_index++;
  2972  037A  0AFC               	incf	_GLOBAL_sub_patterns_column_index,f	;volatile
  2973                           
  2974                           ;interrupts.c: 83: if (ROM_Sub_Patterns_Time[GLOBAL_sub_patterns_index][GLOBAL_sub_patte
      +                          rns_column_index] == 0)
  2975  037B  3007               	movlw	7
  2976  037C  00F0               	movwf	___bmul@multiplicand
  2977  037D  087B               	movf	_GLOBAL_sub_patterns_index,w
  2978  037E  2589               	fcall	___bmul
  2979  037F  3EBD               	addlw	low (_ROM_Sub_Patterns_Time| (0+32768))
  2980  0380  00CB               	movwf	??_isr
  2981  0381  3082               	movlw	high (_ROM_Sub_Patterns_Time| (0+32768))
  2982  0382  1803               	skipnc
  2983  0383  3E01               	addlw	1
  2984  0384  00CC               	movwf	??_isr+1
  2985  0385  087C               	movf	_GLOBAL_sub_patterns_column_index,w
  2986  0386  074B               	addwf	??_isr,w
  2987  0387  0084               	movwf	4
  2988  0388  084C               	movf	??_isr+1,w
  2989  0389  1803               	skipnc
  2990  038A  0A4C               	incf	??_isr+1,w
  2991  038B  00FF               	movwf	127
  2992  038C  2100               	fcall	stringtab
  2993  038D  3A00               	xorlw	0
  2994  038E  1D03               	skipz
  2995  038F  2C15               	goto	i1l75
  2996                           
  2997                           ;interrupts.c: 84: GLOBAL_sub_patterns_column_index = 7;
  2998  0390  3007               	movlw	7
  2999  0391  00FC               	movwf	_GLOBAL_sub_patterns_column_index	;volatile
  3000  0392  2C15               	goto	i1l75
  3001  0393                     i1l2290:	
  3002                           
  3003                           ;interrupts.c: 86: else {
  3004                           ;interrupts.c: 87: if (GLOBAL_sub_patterns_column_index > (7 - 1))
  3005  0393  3007               	movlw	7
  3006  0394  027C               	subwf	_GLOBAL_sub_patterns_column_index,w	;volatile
  3007  0395  1C03               	skipc
  3008  0396  2C15               	goto	i1l75
  3009                           
  3010                           ;interrupts.c: 88: {
  3011                           ;interrupts.c: 90: if (GLOBAL_combo_patterns_index_copy != GLOBAL_combo_patterns_index)
  3012  0397  0846               	movf	_GLOBAL_combo_patterns_index_copy,w	;volatile
  3013  0398  0679               	xorwf	_GLOBAL_combo_patterns_index,w	;volatile
  3014  0399  1903               	skipnz
  3015  039A  2B9E               	goto	i1l2298
  3016                           
  3017                           ;interrupts.c: 91: {
  3018                           ;interrupts.c: 92: GLOBAL_combo_patterns_column_index = 0;
  3019  039B  01F8               	clrf	_GLOBAL_combo_patterns_column_index	;volatile
  3020                           
  3021                           ;interrupts.c: 93: GLOBAL_combo_patterns_index_copy = GLOBAL_combo_patterns_index;
  3022  039C  0879               	movf	_GLOBAL_combo_patterns_index,w	;volatile
  3023  039D  00C6               	movwf	_GLOBAL_combo_patterns_index_copy	;volatile
  3024  039E                     i1l2298:	
  3025                           
  3026                           ;interrupts.c: 94: }
  3027                           ;interrupts.c: 96: if (bGLOBAL_END_OF_CYCLE_COND1)
  3028  039E  0845               	movf	_bGLOBAL_END_OF_CYCLE_COND1,w	;volatile
  3029  039F  1903               	btfsc	3,2
  3030  03A0  2BA3               	goto	i1l2302
  3031                           
  3032                           ;interrupts.c: 97: bGLOBAL_END_OF_CYCLE_COND2 = 1;
  3033  03A1  3001               	movlw	1
  3034  03A2  00C4               	movwf	_bGLOBAL_END_OF_CYCLE_COND2	;volatile
  3035  03A3                     i1l2302:	
  3036                           
  3037                           ;interrupts.c: 99: if (bGLOBAL_InPhase)
  3038  03A3  0843               	movf	_bGLOBAL_InPhase,w	;volatile
  3039  03A4  1903               	btfsc	3,2
  3040  03A5  2BA8               	goto	i1l2306
  3041                           
  3042                           ;interrupts.c: 100: GLOBAL_sub_patterns_index = ROM_COMBO_Patterns[GLOBAL_combo_patterns
      +                          _index][GLOBAL_combo_patterns_column_index];
  3043  03A6  0878               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  3044  03A7  2BB6               	goto	L3
  3045  03A8                     i1l2306:	
  3046                           
  3047                           ;interrupts.c: 101: else
  3048                           ;interrupts.c: 102: {
  3049                           ;interrupts.c: 103: temp_data1 = GLOBAL_combo_patterns_column_index & 0x01;
  3050  03A8  0878               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  3051  03A9  00F6               	movwf	isr@temp_data1	;volatile
  3052  03AA  3001               	movlw	1
  3053  03AB  05F6               	andwf	isr@temp_data1,f	;volatile
  3054                           
  3055                           ;interrupts.c: 104: if (temp_data1)
  3056  03AC  0876               	movf	isr@temp_data1,w	;volatile
  3057  03AD  1903               	btfsc	3,2
  3058  03AE  2BB2               	goto	i1l2314
  3059                           
  3060                           ;interrupts.c: 105: temp_data1 = GLOBAL_combo_patterns_column_index - 1;
  3061  03AF  0878               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  3062  03B0  3EFF               	addlw	255
  3063  03B1  2BB4               	goto	L4
  3064  03B2                     i1l2314:	
  3065                           
  3066                           ;interrupts.c: 106: else
  3067                           ;interrupts.c: 107: temp_data1 = GLOBAL_combo_patterns_column_index + 1;
  3068  03B2  0878               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  3069  03B3  3E01               	addlw	1
  3070  03B4                     L4:	
  3071  03B4  00F6               	movwf	isr@temp_data1	;volatile
  3072                           
  3073                           ;interrupts.c: 108: GLOBAL_sub_patterns_index = ROM_COMBO_Patterns[GLOBAL_combo_patterns
      +                          _index][temp_data1];
  3074  03B5  0876               	movf	isr@temp_data1,w	;volatile
  3075  03B6                     L3:	
  3076  03B6  00CB               	movwf	??_isr
  3077  03B7  01CC               	clrf	??_isr+1
  3078  03B8  0879               	movf	_GLOBAL_combo_patterns_index,w	;volatile
  3079  03B9  00F0               	movwf	___wmul@multiplier
  3080  03BA  3016               	movlw	22
  3081  03BB  01F1               	clrf	___wmul@multiplier+1
  3082  03BC  00F2               	movwf	___wmul@multiplicand
  3083  03BD  01F3               	clrf	___wmul@multiplicand+1
  3084  03BE  26B4               	fcall	___wmul
  3085  03BF  3012               	movlw	low (_ROM_COMBO_Patterns| (0+32768))
  3086  03C0  00CD               	movwf	??_isr+2
  3087  03C1  3081               	movlw	high (_ROM_COMBO_Patterns| (0+32768))
  3088  03C2  00CE               	movwf	??_isr+3
  3089  03C3  0870               	movf	?___wmul,w
  3090  03C4  074D               	addwf	??_isr+2,w
  3091  03C5  00CF               	movwf	??_isr+4
  3092  03C6  0871               	movf	?___wmul+1,w
  3093  03C7  1803               	skipnc
  3094  03C8  0A71               	incf	?___wmul+1,w
  3095  03C9  074E               	addwf	??_isr+3,w
  3096  03CA  00D0               	movwf	??_isr+5
  3097  03CB  084B               	movf	??_isr,w
  3098  03CC  074F               	addwf	??_isr+4,w
  3099  03CD  0084               	movwf	4
  3100  03CE  084C               	movf	??_isr+1,w
  3101  03CF  1803               	skipnc
  3102  03D0  0A4C               	incf	??_isr+1,w
  3103  03D1  0750               	addwf	??_isr+5,w
  3104  03D2  00FF               	movwf	127
  3105  03D3  2100               	fcall	stringtab
  3106  03D4  00FB               	movwf	_GLOBAL_sub_patterns_index	;volatile
  3107                           
  3108                           ;interrupts.c: 109: }
  3109                           ;interrupts.c: 111: if(bDualColor == 1)
  3110  03D5  0B42               	decfsz	_bDualColor,w	;volatile
  3111  03D6  2BE5               	goto	i1l2334
  3112                           
  3113                           ;interrupts.c: 112: {
  3114                           ;interrupts.c: 113: if(GLOBAL_combo_patterns_column_index%2==1)
  3115  03D7  1C78               	btfss	_GLOBAL_combo_patterns_column_index,0	;volatile
  3116  03D8  2BE5               	goto	i1l2334
  3117                           
  3118                           ;interrupts.c: 114: {
  3119                           ;interrupts.c: 115: channelToBeDisplayed++;
  3120  03D9  0AC1               	incf	_channelToBeDisplayed,f	;volatile
  3121                           
  3122                           ;interrupts.c: 116: if(channelToBeDisplayed>1)
  3123  03DA  3002               	movlw	2
  3124  03DB  0241               	subwf	_channelToBeDisplayed,w	;volatile
  3125  03DC  1803               	btfsc	3,0
  3126                           
  3127                           ;interrupts.c: 117: {
  3128                           ;interrupts.c: 118: channelToBeDisplayed = 0;
  3129  03DD  01C1               	clrf	_channelToBeDisplayed	;volatile
  3130                           
  3131                           ;interrupts.c: 119: }
  3132                           ;interrupts.c: 121: if(channelToBeDisplayed == 0)
  3133  03DE  0841               	movf	_channelToBeDisplayed,w	;volatile
  3134  03DF  1D03               	btfss	3,2
  3135  03E0  2BE3               	goto	i1l2332
  3136                           
  3137                           ;interrupts.c: 122: {
  3138                           ;interrupts.c: 123: GLOBAL_CHANNELS_EN_DUAL = 0xFD;
  3139  03E1  30FD               	movlw	253
  3140  03E2  2BE4               	goto	L5
  3141  03E3                     i1l2332:	
  3142                           ;interrupts.c: 124: }
  3143                           
  3144                           
  3145                           ;interrupts.c: 125: else
  3146                           ;interrupts.c: 126: {
  3147                           ;interrupts.c: 127: GLOBAL_CHANNELS_EN_DUAL = 0xFE;
  3148  03E3  30FE               	movlw	254
  3149  03E4                     L5:	
  3150  03E4  00C0               	movwf	_GLOBAL_CHANNELS_EN_DUAL	;volatile
  3151  03E5                     i1l2334:	
  3152                           
  3153                           ;interrupts.c: 128: }
  3154                           ;interrupts.c: 129: }
  3155                           ;interrupts.c: 130: }
  3156                           ;interrupts.c: 132: GLOBAL_combo_patterns_column_index++;
  3157  03E5  0AF8               	incf	_GLOBAL_combo_patterns_column_index,f	;volatile
  3158                           
  3159                           ;interrupts.c: 133: if ((GLOBAL_combo_patterns_column_index > (22 - 1)) || (ROM_COMBO_Pa
      +                          tterns[GLOBAL_combo_patterns_index][GLOBAL_combo_patterns_column_index] == 99))
  3160  03E6  3016               	movlw	22
  3161  03E7  0278               	subwf	_GLOBAL_combo_patterns_column_index,w	;volatile
  3162  03E8  1803               	skipnc
  3163  03E9  2C0C               	goto	i1l2340
  3164  03EA  0878               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  3165  03EB  00CB               	movwf	??_isr
  3166  03EC  01CC               	clrf	??_isr+1
  3167  03ED  0879               	movf	_GLOBAL_combo_patterns_index,w	;volatile
  3168  03EE  00F0               	movwf	___wmul@multiplier
  3169  03EF  3016               	movlw	22
  3170  03F0  01F1               	clrf	___wmul@multiplier+1
  3171  03F1  00F2               	movwf	___wmul@multiplicand
  3172  03F2  01F3               	clrf	___wmul@multiplicand+1
  3173  03F3  26B4               	fcall	___wmul
  3174  03F4  3012               	movlw	low (_ROM_COMBO_Patterns| (0+32768))
  3175  03F5  00CD               	movwf	??_isr+2
  3176  03F6  3081               	movlw	high (_ROM_COMBO_Patterns| (0+32768))
  3177  03F7  00CE               	movwf	??_isr+3
  3178  03F8  0870               	movf	?___wmul,w
  3179  03F9  074D               	addwf	??_isr+2,w
  3180  03FA  00CF               	movwf	??_isr+4
  3181  03FB  0871               	movf	?___wmul+1,w
  3182  03FC  1803               	skipnc
  3183  03FD  0A71               	incf	?___wmul+1,w
  3184  03FE  074E               	addwf	??_isr+3,w
  3185  03FF  00D0               	movwf	??_isr+5
  3186  0400  084B               	movf	??_isr,w
  3187  0401  074F               	addwf	??_isr+4,w
  3188  0402  0084               	movwf	4
  3189  0403  084C               	movf	??_isr+1,w
  3190  0404  1803               	skipnc
  3191  0405  0A4C               	incf	??_isr+1,w
  3192  0406  0750               	addwf	??_isr+5,w
  3193  0407  00FF               	movwf	127
  3194  0408  2100               	fcall	stringtab
  3195  0409  3A63               	xorlw	99
  3196  040A  1D03               	skipz
  3197  040B  2C14               	goto	i1l2348
  3198  040C                     i1l2340:	
  3199                           
  3200                           ;interrupts.c: 134: {
  3201                           ;interrupts.c: 135: if (bGLOBAL_STEADY_ON)
  3202  040C  0849               	movf	_bGLOBAL_STEADY_ON,w	;volatile
  3203  040D  1903               	btfsc	3,2
  3204  040E  2C11               	goto	i1l2344
  3205                           
  3206                           ;interrupts.c: 136: GLOBAL_combo_patterns_column_index--;
  3207  040F  03F8               	decf	_GLOBAL_combo_patterns_column_index,f	;volatile
  3208  0410  2C14               	goto	i1l2348
  3209  0411                     i1l2344:	
  3210                           
  3211                           ;interrupts.c: 137: else
  3212                           ;interrupts.c: 138: {
  3213                           ;interrupts.c: 139: GLOBAL_combo_patterns_column_index = 0;
  3214  0411  01F8               	clrf	_GLOBAL_combo_patterns_column_index	;volatile
  3215                           
  3216                           ;interrupts.c: 140: bGLOBAL_END_OF_CYCLE_COND1 = 1;
  3217  0412  3001               	movlw	1
  3218  0413  00C5               	movwf	_bGLOBAL_END_OF_CYCLE_COND1	;volatile
  3219  0414                     i1l2348:	
  3220                           
  3221                           ;interrupts.c: 141: }
  3222                           ;interrupts.c: 142: }
  3223                           ;interrupts.c: 143: GLOBAL_sub_patterns_column_index = 0;
  3224  0414  01FC               	clrf	_GLOBAL_sub_patterns_column_index	;volatile
  3225  0415                     i1l75:	
  3226                           
  3227                           ;interrupts.c: 144: }
  3228                           ;interrupts.c: 145: }
  3229                           ;interrupts.c: 147: if ((GLOBAL_sub_patterns_timer < 6) && bGLOBAL_END_OF_CYCLE_COND1 &&
      +                           (GPIObits.GP4) && (GLOBAL_SYNC_PULSE_Counter == 0) && bGLOBAL_END_OF_CYCLE_COND2)
  3230  0415  3006               	movlw	6
  3231  0416  0248               	subwf	_GLOBAL_sub_patterns_timer,w	;volatile
  3232  0417  1803               	skipnc
  3233  0418  2C2A               	goto	i1l2362
  3234  0419  0845               	movf	_bGLOBAL_END_OF_CYCLE_COND1,w	;volatile
  3235  041A  1D03               	btfss	3,2
  3236  041B  1E05               	btfss	5,4	;volatile
  3237  041C  2C2A               	goto	i1l2362
  3238  041D  0877               	movf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  3239  041E  1D03               	btfss	3,2
  3240  041F  2C2A               	goto	i1l2362
  3241  0420  0844               	movf	_bGLOBAL_END_OF_CYCLE_COND2,w	;volatile
  3242  0421  1903               	btfsc	3,2
  3243  0422  2C2A               	goto	i1l2362
  3244                           
  3245                           ;interrupts.c: 148: {
  3246                           ;interrupts.c: 149: OUTPUT_BUFFER = OUTPUT_BUFFER | 0x20;
  3247  0423  087A               	movf	_OUTPUT_BUFFER,w	;volatile
  3248  0424  3820               	iorlw	32
  3249  0425  00FA               	movwf	_OUTPUT_BUFFER	;volatile
  3250                           
  3251                           ;interrupts.c: 150: bGLOBAL_SYNC_SENT = 1;
  3252  0426  3001               	movlw	1
  3253  0427  00BF               	movwf	_bGLOBAL_SYNC_SENT	;volatile
  3254                           
  3255                           ;interrupts.c: 151: bGLOBAL_END_OF_CYCLE_COND1 = 0;
  3256  0428  01C5               	clrf	_bGLOBAL_END_OF_CYCLE_COND1	;volatile
  3257                           
  3258                           ;interrupts.c: 152: bGLOBAL_END_OF_CYCLE_COND2 = 0;
  3259  0429  01C4               	clrf	_bGLOBAL_END_OF_CYCLE_COND2	;volatile
  3260  042A                     i1l2362:	
  3261                           
  3262                           ;interrupts.c: 153: }
  3263                           ;interrupts.c: 155: if (!bGLOBAL_SYNC_SENT)
  3264  042A  083F               	movf	_bGLOBAL_SYNC_SENT,w	;volatile
  3265  042B  1903               	btfsc	3,2
  3266                           
  3267                           ;interrupts.c: 156: {
  3268                           ;interrupts.c: 157: if ((!(GPIObits.GP4)) && (GLOBAL_SYNC_PULSE_Counter < 200))
  3269  042C  1A05               	btfsc	5,4	;volatile
  3270  042D  2C33               	goto	i1l2370
  3271  042E  30C8               	movlw	200
  3272  042F  0277               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  3273  0430  1803               	skipnc
  3274  0431  2C33               	goto	i1l2370
  3275                           
  3276                           ;interrupts.c: 158: GLOBAL_SYNC_PULSE_Counter++;
  3277  0432  0AF7               	incf	_GLOBAL_SYNC_PULSE_Counter,f	;volatile
  3278  0433                     i1l2370:	
  3279                           
  3280                           ;interrupts.c: 159: }
  3281                           ;interrupts.c: 161: if ((GLOBAL_sub_patterns_timer < 3) && bGLOBAL_SYNC_SENT)
  3282  0433  3003               	movlw	3
  3283  0434  0248               	subwf	_GLOBAL_sub_patterns_timer,w	;volatile
  3284  0435  1803               	skipnc
  3285  0436  2C3C               	goto	i1l2378
  3286  0437  083F               	movf	_bGLOBAL_SYNC_SENT,w	;volatile
  3287  0438  1903               	btfsc	3,2
  3288  0439  2C3C               	goto	i1l2378
  3289                           
  3290                           ;interrupts.c: 162: {
  3291                           ;interrupts.c: 163: OUTPUT_BUFFER = OUTPUT_BUFFER & 0xDF;
  3292  043A  12FA               	bcf	_OUTPUT_BUFFER,5	;volatile
  3293                           
  3294                           ;interrupts.c: 164: bGLOBAL_SYNC_SENT = 0;
  3295  043B  01BF               	clrf	_bGLOBAL_SYNC_SENT	;volatile
  3296  043C                     i1l2378:	
  3297                           
  3298                           ;interrupts.c: 165: }
  3299                           ;interrupts.c: 167: if ((GLOBAL_SYNC_PULSE_Counter > 1) && (GLOBAL_SYNC_PULSE_Counter < 
      +                          7) && (GPIObits.GP4) && !bGLOBAL_STEADY_ON)
  3300  043C  3002               	movlw	2
  3301  043D  0277               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  3302  043E  1C03               	skipc
  3303  043F  2C4F               	goto	i1l2398
  3304  0440  3007               	movlw	7
  3305  0441  0277               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  3306  0442  1C03               	btfss	3,0
  3307  0443  1E05               	btfss	5,4	;volatile
  3308  0444  2C4F               	goto	i1l2398
  3309  0445  0849               	movf	_bGLOBAL_STEADY_ON,w	;volatile
  3310  0446  1D03               	btfss	3,2
  3311  0447  2C4F               	goto	i1l2398
  3312                           
  3313                           ;interrupts.c: 168: {
  3314                           ;interrupts.c: 169: GLOBAL_sub_patterns_column_index = 7;
  3315  0448  3007               	movlw	7
  3316  0449  00FC               	movwf	_GLOBAL_sub_patterns_column_index	;volatile
  3317                           
  3318                           ;interrupts.c: 170: GLOBAL_sub_patterns_timer =0;
  3319  044A  01C8               	clrf	_GLOBAL_sub_patterns_timer	;volatile
  3320                           
  3321                           ;interrupts.c: 171: GLOBAL_combo_patterns_column_index = 0;
  3322  044B  01F8               	clrf	_GLOBAL_combo_patterns_column_index	;volatile
  3323                           
  3324                           ;interrupts.c: 172: GLOBAL_SYNC_PULSE_Counter = 0;
  3325  044C  01F7               	clrf	_GLOBAL_SYNC_PULSE_Counter	;volatile
  3326                           
  3327                           ;interrupts.c: 173: bGLOBAL_END_OF_CYCLE_COND1 = 0;
  3328  044D  01C5               	clrf	_bGLOBAL_END_OF_CYCLE_COND1	;volatile
  3329                           
  3330                           ;interrupts.c: 174: bGLOBAL_END_OF_CYCLE_COND2 = 0;
  3331  044E  01C4               	clrf	_bGLOBAL_END_OF_CYCLE_COND2	;volatile
  3332  044F                     i1l2398:	
  3333                           
  3334                           ;interrupts.c: 175: }
  3335                           ;interrupts.c: 177: if ((GPIObits.GP4) && ((GLOBAL_SYNC_PULSE_Counter > 6) || (GLOBAL_SY
      +                          NC_PULSE_Counter < 2)))
  3336  044F  1E05               	btfss	5,4	;volatile
  3337  0450  2C5A               	goto	i1l2406
  3338  0451  3007               	movlw	7
  3339  0452  0277               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  3340  0453  1803               	skipnc
  3341  0454  2C59               	goto	i1l2404
  3342  0455  3002               	movlw	2
  3343  0456  0277               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  3344  0457  1803               	skipnc
  3345  0458  2C5A               	goto	i1l2406
  3346  0459                     i1l2404:	
  3347                           
  3348                           ;interrupts.c: 178: GLOBAL_SYNC_PULSE_Counter = 0;
  3349  0459  01F7               	clrf	_GLOBAL_SYNC_PULSE_Counter	;volatile
  3350  045A                     i1l2406:	
  3351                           
  3352                           ;interrupts.c: 180: if ((OUTPUT_BUFFER_COPY - OUTPUT_BUFFER) != 0)
  3353  045A  083E               	movf	_OUTPUT_BUFFER_COPY,w	;volatile
  3354  045B  00CB               	movwf	??_isr
  3355  045C  01CC               	clrf	??_isr+1
  3356  045D  084C               	movf	??_isr+1,w
  3357  045E  00CE               	movwf	??_isr+3
  3358  045F  087A               	movf	_OUTPUT_BUFFER,w	;volatile
  3359  0460  024B               	subwf	??_isr,w
  3360  0461  00CD               	movwf	??_isr+2
  3361  0462  1C03               	skipc
  3362  0463  03CE               	decf	??_isr+3,f
  3363  0464  044E               	iorwf	??_isr+3,w
  3364  0465  1903               	btfsc	3,2
  3365  0466  2C69               	goto	i1l101
  3366                           
  3367                           ;interrupts.c: 181: bGLOBAL_OUTPUT_BUFFER_CHANGED = 1;
  3368  0467  3001               	movlw	1
  3369  0468  00CA               	movwf	_bGLOBAL_OUTPUT_BUFFER_CHANGED	;volatile
  3370  0469                     i1l101:	
  3371                           
  3372                           ;interrupts.c: 182: OUTPUT_BUFFER_COPY = OUTPUT_BUFFER;
  3373  0469  087A               	movf	_OUTPUT_BUFFER,w	;volatile
  3374  046A  00BE               	movwf	_OUTPUT_BUFFER_COPY	;volatile
  3375                           
  3376                           ;interrupts.c: 183: GLOBAL_Dummy_Counter++;
  3377  046B  0ABD               	incf	_GLOBAL_Dummy_Counter,f	;volatile
  3378                           
  3379                           ;interrupts.c: 184: GLOBAL_Dummy_Counter2++;
  3380  046C  0ABC               	incf	_GLOBAL_Dummy_Counter2,f	;volatile
  3381                           
  3382                           ;interrupts.c: 185: if (GLOBAL_sub_patterns_timer > 0)
  3383  046D  0848               	movf	_GLOBAL_sub_patterns_timer,w	;volatile
  3384  046E  1D03               	btfss	3,2
  3385                           
  3386                           ;interrupts.c: 186: GLOBAL_sub_patterns_timer--;
  3387  046F  03C8               	decf	_GLOBAL_sub_patterns_timer,f	;volatile
  3388                           
  3389                           ;interrupts.c: 187: Read_Mode_Input();
  3390  0470  264F               	fcall	_Read_Mode_Input
  3391  0471                     i1l2420:	
  3392                           
  3393                           ;interrupts.c: 188: }
  3394                           ;interrupts.c: 189: INTCONbits.TMR0IF = 0;
  3395  0471  110B               	bcf	11,2	;volatile
  3396  0472                     i1l103:	
  3397  0472  0854               	movf	??_isr+9,w
  3398  0473  00FF               	movwf	127
  3399  0474  0853               	movf	??_isr+8,w
  3400  0475  008A               	movwf	10
  3401  0476  0852               	movf	??_isr+7,w
  3402  0477  0084               	movwf	4
  3403  0478  0E51               	swapf	(??_isr+6)^0,w
  3404  0479  0083               	movwf	3
  3405  047A  0EFE               	swapf	126,f
  3406  047B  0E7E               	swapf	126,w
  3407  047C  0009               	retfie
  3408  047D                     __end_of_isr:	
  3409                           
  3410                           	psect	intentry
  3411  0004                     __pintentry:	
  3412                           ;incstack = 0
  3413                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3414                           
  3415  0004                     interrupt_function:	
  3416  007E                     saved_w	set	btemp
  3417  0004  00FE               	movwf	btemp
  3418  0005  0E03               	swapf	3,w
  3419  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3420  0007  00D1               	movwf	??_isr+6
  3421  0008  0804               	movf	4,w
  3422  0009  00D2               	movwf	??_isr+7
  3423  000A  080A               	movf	10,w
  3424  000B  00D3               	movwf	??_isr+8
  3425  000C  087F               	movf	btemp+1,w
  3426  000D  00D4               	movwf	??_isr+9
  3427  000E  2B34               	ljmp	_isr
  3428                           
  3429                           	psect	text16
  3430  055E                     __ptext16:	
  3431 ;; *************** function i1_SetOUTPUT *****************
  3432 ;; Defined at:
  3433 ;;		line 315 in file "main.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;		None
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;		None
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  1    wreg      void 
  3440 ;; Registers used:
  3441 ;;		wreg, status,2, status,0
  3442 ;; Tracked objects:
  3443 ;;		On entry : 100/0
  3444 ;;		On exit  : 100/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMMON   BANK0   BANK1
  3447 ;;      Params:         0       0       0
  3448 ;;      Locals:         0       0       0
  3449 ;;      Temps:          0       0       0
  3450 ;;      Totals:         0       0       0
  3451 ;;Total ram usage:        0 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; This function calls:
  3454 ;;		Nothing
  3455 ;; This function is called by:
  3456 ;;		_isr
  3457 ;; This function uses a non-reentrant model
  3458 ;;
  3459                           
  3460                           
  3461                           ;psect for function i1_SetOUTPUT
  3462  055E                     i1_SetOUTPUT:	
  3463                           
  3464                           ;main.c: 317: static unsigned char temporaryGPIO = 0x00;
  3465                           ;main.c: 318: static unsigned char pwmCounter = 0;
  3466                           ;main.c: 320: if (bGLOBAL_ENABLE_LEDS)
  3467                           
  3468                           ;incstack = 0
  3469                           ; Regs used in i1_SetOUTPUT: [wreg+status,2+status,0]
  3470  055E  082A               	movf	_bGLOBAL_ENABLE_LEDS,w	;volatile
  3471  055F  1903               	btfsc	3,2
  3472  0560  2D78               	goto	i1l1644
  3473                           
  3474                           ;main.c: 321: {
  3475                           ;main.c: 323: temporaryGPIO = OUTPUT_BUFFER & GLOBAL_CHANNELS_EN;
  3476  0561  087A               	movf	_OUTPUT_BUFFER,w	;volatile
  3477  0562  00A5               	movwf	SetOUTPUT@temporaryGPIO
  3478  0563  0830               	movf	_GLOBAL_CHANNELS_EN,w	;volatile
  3479  0564  05A5               	andwf	SetOUTPUT@temporaryGPIO,f
  3480                           
  3481                           ;main.c: 328: if(pwmBool == 1)
  3482  0565  0B26               	decfsz	_pwmBool,w	;volatile
  3483  0566  2D75               	goto	i1l1642
  3484  0567  3004               	movlw	4
  3485                           
  3486                           ;main.c: 329: {
  3487                           ;main.c: 330: pwmCounter++;
  3488  0568  0AA4               	incf	SetOUTPUT@pwmCounter,f
  3489                           
  3490                           ;main.c: 331: if(pwmCounter<4)
  3491  0569  0224               	subwf	SetOUTPUT@pwmCounter,w
  3492  056A  1803               	skipnc
  3493  056B  2D6F               	goto	i1l1636
  3494                           
  3495                           ;main.c: 332: {
  3496                           ;main.c: 333: GPIO = temporaryGPIO;
  3497  056C  0825               	movf	SetOUTPUT@temporaryGPIO,w
  3498  056D  0085               	movwf	5	;volatile
  3499                           
  3500                           ;main.c: 334: }
  3501  056E  2D70               	goto	i1l1638
  3502  056F                     i1l1636:	
  3503                           
  3504                           ;main.c: 335: else
  3505                           ;main.c: 336: {
  3506                           ;main.c: 337: GPIO = 0;
  3507  056F  0185               	clrf	5	;volatile
  3508  0570                     i1l1638:	
  3509                           
  3510                           ;main.c: 338: }
  3511                           ;main.c: 340: if(pwmCounter>10)
  3512  0570  300B               	movlw	11
  3513  0571  0224               	subwf	SetOUTPUT@pwmCounter,w
  3514  0572  1803               	btfsc	3,0
  3515                           
  3516                           ;main.c: 341: {
  3517                           ;main.c: 342: pwmCounter = 0;
  3518  0573  01A4               	clrf	SetOUTPUT@pwmCounter
  3519  0574  0008               	return
  3520  0575                     i1l1642:	
  3521                           
  3522                           ;main.c: 345: else
  3523                           ;main.c: 346: {
  3524                           ;main.c: 347: GPIO = temporaryGPIO;
  3525  0575  0825               	movf	SetOUTPUT@temporaryGPIO,w
  3526  0576  0085               	movwf	5	;volatile
  3527  0577  0008               	return
  3528  0578                     i1l1644:	
  3529                           
  3530                           ;main.c: 350: else
  3531                           ;main.c: 351: {
  3532                           ;main.c: 352: if (bGLOBAL_IS_PROGRAMMING)
  3533  0578  082B               	movf	_bGLOBAL_IS_PROGRAMMING,w	;volatile
  3534  0579  1903               	btfsc	3,2
  3535  057A  2D87               	goto	i1l1654
  3536                           
  3537                           ;main.c: 353: {
  3538                           ;main.c: 354: if (!bGLOBAL_CHANGING_PATTERN)
  3539  057B  082D               	movf	_bGLOBAL_CHANGING_PATTERN,w	;volatile
  3540  057C  1D03               	btfss	3,2
  3541  057D  0008               	return
  3542                           
  3543                           ;main.c: 355: {
  3544                           ;main.c: 356: if (bGLOBAL_InPhase)
  3545  057E  0843               	movf	_bGLOBAL_InPhase,w	;volatile
  3546  057F  1903               	btfsc	3,2
  3547  0580  2D84               	goto	i1l1652
  3548                           
  3549                           ;main.c: 357: GPIO = 0x23;
  3550  0581  3023               	movlw	35
  3551  0582  0085               	movwf	5	;volatile
  3552  0583  0008               	return
  3553  0584                     i1l1652:	
  3554                           
  3555                           ;main.c: 358: else
  3556                           ;main.c: 359: GPIO = 0x20;
  3557  0584  3020               	movlw	32
  3558  0585  0085               	movwf	5	;volatile
  3559  0586  0008               	return
  3560  0587                     i1l1654:	
  3561                           
  3562                           ;main.c: 362: {
  3563                           ;main.c: 363: GPIO = 0;
  3564  0587  0185               	clrf	5	;volatile
  3565  0588  0008               	return
  3566  0589                     __end_ofi1_SetOUTPUT:	
  3567                           
  3568                           	psect	text17
  3569  06B4                     __ptext17:	
  3570 ;; *************** function ___wmul *****************
  3571 ;; Defined at:
  3572 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  multiplier      2    0[COMMON] unsigned int 
  3575 ;;  multiplicand    2    2[COMMON] unsigned int 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;  product         2    4[COMMON] unsigned int 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  2    0[COMMON] unsigned int 
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0
  3582 ;; Tracked objects:
  3583 ;;		On entry : 100/0
  3584 ;;		On exit  : 100/0
  3585 ;;		Unchanged: 100/0
  3586 ;; Data sizes:     COMMON   BANK0   BANK1
  3587 ;;      Params:         4       0       0
  3588 ;;      Locals:         2       0       0
  3589 ;;      Temps:          0       0       0
  3590 ;;      Totals:         6       0       0
  3591 ;;Total ram usage:        6 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_isr
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           
  3601                           ;psect for function ___wmul
  3602  06B4                     ___wmul:	
  3603                           
  3604                           ;incstack = 0
  3605                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3606  06B4  01F4               	clrf	___wmul@product
  3607  06B5  01F5               	clrf	___wmul@product+1
  3608  06B6                     i1l2184:	
  3609  06B6  1C70               	btfss	___wmul@multiplier,0
  3610  06B7  2EBE               	goto	i1l2188
  3611  06B8  0872               	movf	___wmul@multiplicand,w
  3612  06B9  07F4               	addwf	___wmul@product,f
  3613  06BA  1803               	skipnc
  3614  06BB  0AF5               	incf	___wmul@product+1,f
  3615  06BC  0873               	movf	___wmul@multiplicand+1,w
  3616  06BD  07F5               	addwf	___wmul@product+1,f
  3617  06BE                     i1l2188:	
  3618  06BE  1003               	clrc
  3619  06BF  0DF2               	rlf	___wmul@multiplicand,f
  3620  06C0  0DF3               	rlf	___wmul@multiplicand+1,f
  3621  06C1  1003               	clrc
  3622  06C2  0CF1               	rrf	___wmul@multiplier+1,f
  3623  06C3  0CF0               	rrf	___wmul@multiplier,f
  3624  06C4  0870               	movf	___wmul@multiplier,w
  3625  06C5  0471               	iorwf	___wmul@multiplier+1,w
  3626  06C6  1D03               	btfss	3,2
  3627  06C7  2EB6               	goto	i1l2184
  3628  06C8  0875               	movf	___wmul@product+1,w
  3629  06C9  00F1               	movwf	?___wmul+1
  3630  06CA  0874               	movf	___wmul@product,w
  3631  06CB  00F0               	movwf	?___wmul
  3632  06CC  0008               	return
  3633  06CD                     __end_of___wmul:	
  3634                           
  3635                           	psect	text18
  3636  0589                     __ptext18:	
  3637 ;; *************** function ___bmul *****************
  3638 ;; Defined at:
  3639 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  multiplier      1    wreg     unsigned char 
  3642 ;;  multiplicand    1    0[COMMON] unsigned char 
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;  multiplier      1    2[COMMON] unsigned char 
  3645 ;;  product         1    1[COMMON] unsigned char 
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  1    wreg      unsigned char 
  3648 ;; Registers used:
  3649 ;;		wreg, status,2, status,0
  3650 ;; Tracked objects:
  3651 ;;		On entry : 100/0
  3652 ;;		On exit  : 100/0
  3653 ;;		Unchanged: 100/0
  3654 ;; Data sizes:     COMMON   BANK0   BANK1
  3655 ;;      Params:         1       0       0
  3656 ;;      Locals:         2       0       0
  3657 ;;      Temps:          0       0       0
  3658 ;;      Totals:         3       0       0
  3659 ;;Total ram usage:        3 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; This function calls:
  3662 ;;		Nothing
  3663 ;; This function is called by:
  3664 ;;		_isr
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668                           
  3669                           ;psect for function ___bmul
  3670  0589                     ___bmul:	
  3671                           
  3672                           ;incstack = 0
  3673                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3674                           ;___bmul@multiplier stored from wreg
  3675  0589  00F2               	movwf	___bmul@multiplier
  3676  058A  01F1               	clrf	___bmul@product
  3677  058B  0870               	movf	___bmul@multiplicand,w
  3678  058C  1872               	btfsc	___bmul@multiplier,0
  3679  058D  07F1               	addwf	___bmul@product,f
  3680  058E  1003               	clrc
  3681  058F  0DF0               	rlf	___bmul@multiplicand,f
  3682  0590  0870               	movf	___bmul@multiplicand,w
  3683  0591  18F2               	btfsc	___bmul@multiplier,1
  3684  0592  07F1               	addwf	___bmul@product,f
  3685  0593  1003               	clrc
  3686  0594  0DF0               	rlf	___bmul@multiplicand,f
  3687  0595  0870               	movf	___bmul@multiplicand,w
  3688  0596  1972               	btfsc	___bmul@multiplier,2
  3689  0597  07F1               	addwf	___bmul@product,f
  3690  0598  1003               	clrc
  3691  0599  0DF0               	rlf	___bmul@multiplicand,f
  3692  059A  0870               	movf	___bmul@multiplicand,w
  3693  059B  19F2               	btfsc	___bmul@multiplier,3
  3694  059C  07F1               	addwf	___bmul@product,f
  3695  059D  1003               	clrc
  3696  059E  0DF0               	rlf	___bmul@multiplicand,f
  3697  059F  0870               	movf	___bmul@multiplicand,w
  3698  05A0  1A72               	btfsc	___bmul@multiplier,4
  3699  05A1  07F1               	addwf	___bmul@product,f
  3700  05A2  1003               	clrc
  3701  05A3  0DF0               	rlf	___bmul@multiplicand,f
  3702  05A4  0870               	movf	___bmul@multiplicand,w
  3703  05A5  1AF2               	btfsc	___bmul@multiplier,5
  3704  05A6  07F1               	addwf	___bmul@product,f
  3705  05A7  1003               	clrc
  3706  05A8  0DF0               	rlf	___bmul@multiplicand,f
  3707  05A9  0870               	movf	___bmul@multiplicand,w
  3708  05AA  1B72               	btfsc	___bmul@multiplier,6
  3709  05AB  07F1               	addwf	___bmul@product,f
  3710  05AC  1003               	clrc
  3711  05AD  0DF0               	rlf	___bmul@multiplicand,f
  3712  05AE  0870               	movf	___bmul@multiplicand,w
  3713  05AF  1BF2               	btfsc	___bmul@multiplier,7
  3714  05B0  07F1               	addwf	___bmul@product,f
  3715  05B1  0871               	movf	___bmul@product,w
  3716  05B2  0008               	return
  3717  05B3                     __end_of___bmul:	
  3718                           
  3719                           	psect	text19
  3720  064F                     __ptext19:	
  3721 ;; *************** function _Read_Mode_Input *****************
  3722 ;; Defined at:
  3723 ;;		line 433 in file "main.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;		None
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;		None
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0
  3732 ;; Tracked objects:
  3733 ;;		On entry : 100/0
  3734 ;;		On exit  : 100/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMMON   BANK0   BANK1
  3737 ;;      Params:         0       0       0
  3738 ;;      Locals:         0       0       0
  3739 ;;      Temps:          0       0       0
  3740 ;;      Totals:         0       0       0
  3741 ;;Total ram usage:        0 bytes
  3742 ;; Hardware stack levels used:    1
  3743 ;; This function calls:
  3744 ;;		Nothing
  3745 ;; This function is called by:
  3746 ;;		_isr
  3747 ;; This function uses a non-reentrant model
  3748 ;;
  3749                           
  3750                           
  3751                           ;psect for function _Read_Mode_Input
  3752  064F                     _Read_Mode_Input:	
  3753                           
  3754                           ;main.c: 435: if ((GPIObits.GP2))
  3755                           
  3756                           ;incstack = 0
  3757                           ; Regs used in _Read_Mode_Input: [wreg+status,2+status,0]
  3758  064F  1D05               	btfss	5,2	;volatile
  3759  0650  2E5B               	goto	i1l1514
  3760                           
  3761                           ;main.c: 436: { GLOBAL_MODE1_LOW_counter = 0;
  3762  0651  01B3               	clrf	_GLOBAL_MODE1_LOW_counter	;volatile
  3763                           
  3764                           ;main.c: 437: if (GLOBAL_MODE1_counter < 4) GLOBAL_MODE1_counter++;
  3765  0652  3004               	movlw	4
  3766  0653  0236               	subwf	_GLOBAL_MODE1_counter,w	;volatile
  3767  0654  1803               	skipnc
  3768  0655  2E58               	goto	i1l1512
  3769  0656  0AB6               	incf	_GLOBAL_MODE1_counter,f	;volatile
  3770  0657  2E63               	goto	i1l1522
  3771  0658                     i1l1512:	
  3772                           
  3773                           ;main.c: 438: else bGLOBAL_MODE1_PRESSED = 1;
  3774  0658  3001               	movlw	1
  3775  0659  00A9               	movwf	_bGLOBAL_MODE1_PRESSED	;volatile
  3776  065A  2E63               	goto	i1l1522
  3777  065B                     i1l1514:	
  3778                           
  3779                           ;main.c: 440: GLOBAL_MODE1_counter = 0;
  3780  065B  01B6               	clrf	_GLOBAL_MODE1_counter	;volatile
  3781                           
  3782                           ;main.c: 441: if (GLOBAL_MODE1_LOW_counter < 4) GLOBAL_MODE1_LOW_counter++;
  3783  065C  3004               	movlw	4
  3784  065D  0233               	subwf	_GLOBAL_MODE1_LOW_counter,w	;volatile
  3785  065E  1803               	skipnc
  3786  065F  2E62               	goto	i1l1520
  3787  0660  0AB3               	incf	_GLOBAL_MODE1_LOW_counter,f	;volatile
  3788  0661  2E63               	goto	i1l1522
  3789  0662                     i1l1520:	
  3790                           
  3791                           ;main.c: 442: else bGLOBAL_MODE1_PRESSED = 0;
  3792  0662  01A9               	clrf	_bGLOBAL_MODE1_PRESSED	;volatile
  3793  0663                     i1l1522:	
  3794                           
  3795                           ;main.c: 443: }
  3796                           ;main.c: 453: if (!(GPIObits.GP4))
  3797  0663  1A05               	btfsc	5,4	;volatile
  3798  0664  2E6B               	goto	i1l1530
  3799                           
  3800                           ;main.c: 454: { GLOBAL_SYNC_Line_LOW_counter = 0;
  3801  0665  01B2               	clrf	_GLOBAL_SYNC_Line_LOW_counter	;volatile
  3802                           
  3803                           ;main.c: 455: if (GLOBAL_SYNC_Line_counter < 9+0) GLOBAL_SYNC_Line_counter++;
  3804  0666  3009               	movlw	9
  3805  0667  0235               	subwf	_GLOBAL_SYNC_Line_counter,w	;volatile
  3806  0668  1C03               	btfss	3,0
  3807  0669  0AB5               	incf	_GLOBAL_SYNC_Line_counter,f	;volatile
  3808  066A  0008               	return
  3809  066B                     i1l1530:	
  3810                           
  3811                           ;main.c: 458: GLOBAL_SYNC_Line_counter = 0;
  3812  066B  01B5               	clrf	_GLOBAL_SYNC_Line_counter	;volatile
  3813                           
  3814                           ;main.c: 459: if (GLOBAL_SYNC_Line_LOW_counter < 7) GLOBAL_SYNC_Line_LOW_counter++;
  3815  066C  3007               	movlw	7
  3816  066D  0232               	subwf	_GLOBAL_SYNC_Line_LOW_counter,w	;volatile
  3817  066E  1803               	skipnc
  3818  066F  2E72               	goto	i1l1536
  3819  0670  0AB2               	incf	_GLOBAL_SYNC_Line_LOW_counter,f	;volatile
  3820  0671  0008               	return
  3821  0672                     i1l1536:	
  3822                           
  3823                           ;main.c: 460: else bGLOBAL_SYNC_Line_PRESSED = 0;
  3824  0672  01A7               	clrf	_bGLOBAL_SYNC_Line_PRESSED	;volatile
  3825  0673  0008               	return
  3826  0674                     __end_of_Read_Mode_Input:	
  3827  007E                     btemp	set	126	;btemp
  3828  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    546
    Data        0
    BSS         54
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      13
    BANK0            80     21      64
    BANK1            32      0       0

Pointer List with Targets:

    __ctoee@addr	PTR eeprom void  size(1) Largest target is 2
		 -> EEprom_InPhase(EEDATA[2]), EEprom_mode(EEDATA[2]), EEprom_Written_Flag(EEDATA[1]), 

    __eetoc@addr	PTR eeprom void  size(1) Largest target is 2
		 -> EEprom_InPhase(EEDATA[2]), EEprom_mode(EEDATA[2]), EEprom_Written_Flag(EEDATA[1]), 

    memcpyee@to	PTR eeprom unsigned char  size(1) Largest target is 2
		 -> EEprom_InPhase(EEDATA[2]), EEprom_mode(EEDATA[2]), EEprom_Written_Flag(EEDATA[1]), 

    memcpyee@from	PTR const unsigned char  size(1) Largest target is 4
		 -> __fltoee@data(COMMON[3]), __fttoee@data(COMMON[3]), __ltoee@data(COMMON[4]), __mtoee@data(COMMON[3]), 
		 -> __itoee@data(COMMON[2]), __ctoee@data(BANK0[1]), 

    memcpyee@ptr	PTR const unsigned char  size(1) Largest target is 4
		 -> __fltoee@data(COMMON[3]), __fttoee@data(COMMON[3]), __ltoee@data(COMMON[4]), __mtoee@data(COMMON[3]), 
		 -> __itoee@data(COMMON[2]), __ctoee@data(BANK0[1]), 

    eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 2
		 -> EEprom_InPhase(EEDATA[2]), EEprom_mode(EEDATA[2]), EEprom_Written_Flag(EEDATA[1]), 

    eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 4
		 -> __eetofl@data(COMMON[3]), __eetoft@data(COMMON[3]), __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), 
		 -> __eetoi@data(COMMON[2]), __eetoc@data(BANK0[1]), 

    eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 4
		 -> __eetofl@data(COMMON[3]), __eetoft@data(COMMON[3]), __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), 
		 -> __eetoi@data(COMMON[2]), __eetoc@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___wmul

Critical Paths under _main in BANK0

    _main->_Initial_Start
    _WriteEEPROMDefaults->_ReWriteEEPROM
    ___eetoc->_eecpymem
    _InitApp->_WaitForSYNC_PU
    _INC_EEPROM_MODE->_ReWriteEEPROM
    _ReWriteEEPROM->___ctoee
    ___ctoee->_memcpyee

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    6736
                                             20 BANK0      1     1      0
                _ConfigureOscillator
                    _INC_EEPROM_MODE
                            _InitApp
                      _Initial_Start
                      _ReWriteEEPROM
                          _SetOUTPUT
          _Update_ComboPattern_Index
             _Update_Input_Mode_Type
 ---------------------------------------------------------------------------------
 (1) _SetOUTPUT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initial_Start                                        3     3      0    3738
                                             17 BANK0      3     3      0
          _Update_ComboPattern_Index
             _Update_Input_Mode_Type
                _WriteEEPROMDefaults
                            ___eetoc
 ---------------------------------------------------------------------------------
 (2) _WriteEEPROMDefaults                                  0     0      0    2463
                      _ReWriteEEPROM
                            ___eetoc
 ---------------------------------------------------------------------------------
 (2) ___eetoc                                              2     2      0    1049
                                             14 BANK0      2     2      0
                           _eecpymem
 ---------------------------------------------------------------------------------
 (3) _eecpymem                                             4     2      2     890
                                             10 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Update_Input_Mode_Type                               0     0      0       0
          _Update_ComboPattern_Index
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0      40
                     _WaitForSYNC_PU
 ---------------------------------------------------------------------------------
 (2) _WaitForSYNC_PU                                       1     1      0      40
                                             10 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _INC_EEPROM_MODE                                      1     1      0    1479
                                             17 BANK0      1     1      0
                      _ReWriteEEPROM
          _Update_ComboPattern_Index
 ---------------------------------------------------------------------------------
 (2) _Update_ComboPattern_Index                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReWriteEEPROM                                        1     1      0    1414
                                             16 BANK0      1     1      0
                            ___ctoee
 ---------------------------------------------------------------------------------
 (2) ___ctoee                                              2     1      1    1222
                                             14 BANK0      2     1      1
                           _memcpyee
 ---------------------------------------------------------------------------------
 (3) _memcpyee                                             4     2      2     890
                                             10 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                 11    11      0     120
                                              6 COMMON     1     1      0
                                              0 BANK0     10    10      0
                    _Read_Mode_Input
                             ___bmul
                             ___wmul
                        i1_SetOUTPUT
 ---------------------------------------------------------------------------------
 (7) i1_SetOUTPUT                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4      22
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___bmul                                               3     2      1      26
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (7) _Read_Mode_Input                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _INC_EEPROM_MODE
     _ReWriteEEPROM
       ___ctoee
         _memcpyee
     _Update_ComboPattern_Index
   _InitApp
     _WaitForSYNC_PU
   _Initial_Start
     _Update_ComboPattern_Index
     _Update_Input_Mode_Type
       _Update_ComboPattern_Index
     _WriteEEPROMDefaults
       _ReWriteEEPROM
         ___ctoee
           _memcpyee
       ___eetoc
         _eecpymem
     ___eetoc
       _eecpymem
   _ReWriteEEPROM
     ___ctoee
       _memcpyee
   _SetOUTPUT
   _Update_ComboPattern_Index
   _Update_Input_Mode_Type
     _Update_ComboPattern_Index

 _isr (ROOT)
   _Read_Mode_Input
   ___bmul
   ___wmul
   i1_SetOUTPUT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       5       0        2.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50     15      40       4       80.0%
BANK1               20      0       0       5        0.0%
ABS                  0      0      4D       6        0.0%
BITBANK1            20      0       0       7        0.0%
DATA                 0      0      4D       8        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Feb 06 12:50:29 2019

                        __CFG_CP$ON 0000                                   pc 0002  
                  _ROM_Sub_Patterns 0246                      ___bmul@product 0071  
            _Update_Input_Mode_Type 06CD                                  _RD 04E0  
                       __CFG_CPD$ON 0000                                  _WR 04E1  
                                fsr 0004                 ___wmul@multiplicand 0072  
            Initial_Start@read_data 005D                                 l314 04C8  
                               l307 049D                                 l404 0508  
                               l247 06EE                                 l337 0713  
                               l409 0516                                 l281 05F4  
                               l287 06D4                                 l392 0677  
                               l397 0683                                 _GIE 005F  
                      ___ctoee@addr 005A                                 _WPU 0095  
                      ___ctoee@data 0059                                 _isr 0334  
                               fsr0 0004                                 indf 0000  
                _GLOBAL_CHANNELS_EN 0030      _GLOBAL_sub_patterns_index_copy 0047  
                              l2020 05FE                                l2012 05EE  
                              l2032 06EF                                l2018 05FD  
                              l2116 064D                                l2108 063E  
                              l2060 06D9                                l2132 060B  
                              l2038 06F1                                l2126 060A  
                              l2080 0545                                l2138 0624  
                              l2084 054A                                l2500 04E6  
                              l2094 0559                                l2078 0544  
                              l2086 054D                                l2510 04F1  
                              l2096 055C                                l2520 04FC  
                              l2450 0499                                l2516 04F8  
                              l2452 049F                                l2444 0491  
                              l2428 0482                                l2470 04BE  
                              l2490 04DC                                l2474 04C4  
                              l2476 04CA                                l2486 04D4  
                              l1964 0511                                l1990 0699  
                              l1976 067E                                l1998 05DB  
                              ?_isr 0070                        __CFG_WDTE$ON 0000  
                              _GPIO 0005                                u2670 04B2  
                              u2680 04B3                                i1l75 0415  
                              _TMR0 0001                                _WREN 04E2  
            __size_of_ReWriteEEPROM 0020                       __CFG_FCMEN$ON 0000  
          __size_of_Read_Mode_Input 0025                                _main 047D  
                   isr@tenMSCounter 003B                                btemp 007E  
                     __CFG_BOREN$ON 0000              __size_of_Initial_Start 0027  
                              start 000F                       __CFG_IESO$OFF 0000  
                 ___bmul@multiplier 0072         _GLOBAL_Selected_Mode_Number 0039  
                   __end_of_InitApp 05DB                               ??_isr 004B  
                    _WaitForSYNC_PU 06EF    _GLOBAL_sub_patterns_column_index 007C  
                             ?_main 0070                     __end_of___eetoc 0709  
                             _EEADR 009B                     __end_of___ctoee 0710  
                             _CARRY 0018                               _ANSEL 009F  
                             i1l101 0469                               i1l103 0472  
  _GLOBAL_combo_patterns_index_copy 0046                 _ConfigureOscillator 0710  
           __end_of_INC_EEPROM_MODE 064F        _GLOBAL_SYNC_Line_LOW_counter 0032  
                      main@tempvar1 005F                               pclath 000A  
          _GLOBAL_MODE1_LOW_counter 0033                               status 0003  
                             wtemp0 007E                ?_ConfigureOscillator 0070  
                    ReWriteEEPROM@i 005B                      __CFG_MCLRE$OFF 0000  
                   __initialization 0010              __end_of_WaitForSYNC_PU 06F9  
                      __end_of_main 0505                 SetOUTPUT@pwmCounter 0024  
       ??_Update_ComboPattern_Index 0055                       _ReWriteEEPROM 0694  
                            ??_main 005F              SetOUTPUT@temporaryGPIO 0025  
                     _Initial_Start 0603                      Initial_Start@i 005E  
                            _EEDATA 009A                              _EECON1 009C  
                            _EECON2 009D                              _CMCON0 0019  
                        _bDualColor 0042                              i1l2302 03A3  
                            i1l1520 0662                              i1l1512 0658  
                            i1l1530 066B                              i1l1522 0663  
                            i1l1514 065B                              i1l2314 03B2  
                            i1l2306 03A8                              i1l2404 0459  
                            i1l2340 040C                              i1l2332 03E3  
                            i1l2420 0471                              i1l2406 045A  
                            i1l2334 03E5                              i1l1536 0672  
                            i1l2184 06B6                              i1l2344 0411  
                            i1l2280 0354                              i1l2264 0340  
                            i1l1642 0575                              i1l2370 0433  
                            i1l2362 042A                              i1l2290 0393  
                            i1l2188 06BE                              i1l1652 0584  
                            i1l1636 056F                              i1l1644 0578  
                            i1l2348 0414                              i1l1654 0587  
                            i1l1638 0570                              i1l2378 043C  
                            i1l2298 039E                              i1l2398 044F  
                            _INTCON 000B            _GLOBAL_MODE2_LOW_counter 0031  
                            _OSCCON 008F           _bGLOBAL_SYNC_Line_PRESSED 0027  
                            _WDTCON 0018                              _TRISIO 0085  
                 _bGLOBAL_STEADY_ON 0049                           ??_InitApp 0056  
             ??_ConfigureOscillator 0055                    _GLOBAL_Mode_copy 0022  
                    __CFG_PWRTE$OFF 0000                    __end_of_eecpymem 0694  
                __size_of_SetOUTPUT 002B         __end_of_WriteEEPROMDefaults 06EF  
                 ??_Read_Mode_Input 0070                              ___bmul 0589  
                   ?_WaitForSYNC_PU 0070                              ___wmul 06B4  
                         ??___eetoc 0059                           ??___ctoee 005A  
                       memcpyee@ptr 0057                      ?_ReWriteEEPROM 0070  
                  __end_of_memcpyee 0533                   _bGLOBAL_SYNC_SENT 003F  
                    ?_Initial_Start 0070            _bGLOBAL_CHANGING_PATTERN 002D  
                      ?i1_SetOUTPUT 0070                              saved_w 007E  
                  ?_INC_EEPROM_MODE 0070            __end_of_ROM_Sub_Patterns 02BD  
         _Update_ComboPattern_Index 05DB             __end_of__initialization 0019  
             _ROM_Sub_Patterns_Time 02BD                      _EEprom_InPhase 0000  
               ___bmul@multiplicand 0070             ?_Update_Input_Mode_Type 0070  
                    __pcstackCOMMON 0070                      _OPTION_REGbits 0081  
                 __end_of_SetOUTPUT 055E                          __pbssBANK0 0020  
    __end_of_Update_Input_Mode_Type 06E2    _bGLOBAL_CHANGING_PATTERN_Enforce 002C  
                        __pmaintext 047D                     ??_ReWriteEEPROM 005B  
                           ?___bmul 0070                             ?___wmul 0070  
                        __pintentry 0004                     ??_Initial_Start 005C  
     _bGLOBAL_OUTPUT_BUFFER_CHANGED 004A                           ?_eecpymem 0055  
     INC_EEPROM_MODE@Temp_Mode_Data 005C           _GLOBAL_Selected_Mode_Type 0038  
             _bGLOBAL_MODE1_PRESSED 0029               _bGLOBAL_MODE2_PRESSED 0028  
                        __stringtab 0100                           ?_memcpyee 0055  
                           _InitApp 05B3                     __size_of___bmul 002A  
                           ___eetoc 0701                             ___ctoee 0709  
                   __size_of___wmul 0019          _bGLOBAL_END_OF_CYCLE_COND1 0045  
        _bGLOBAL_END_OF_CYCLE_COND2 0044                        memcpyee@from 0055  
                           __ptext1 0533                             __ptext2 0603  
                           __ptext3 06E2                             __ptext4 0701  
                           __ptext5 0674                             __ptext6 06CD  
                           __ptext7 05B3                             __ptext8 06EF  
                           __ptext9 062A                        memcpyee@size 0056  
                      __size_of_isr 0149                          ??_eecpymem 0057  
                           _pwmBool 0026                __size_ofi1_SetOUTPUT 002B  
                           clrloop0 06FA                end_of_initialization 0019  
                   _Read_Mode_Input 064F                 _bGLOBAL_ENABLE_LEDS 002A  
                        ??_memcpyee 0057                    ??_WaitForSYNC_PU 0055  
                        eecpymem@cp 0057                          eecpymem@to 0058  
__size_of_Update_ComboPattern_Index 0028           _GLOBAL_sub_patterns_index 007B  
         _GLOBAL_sub_patterns_timer 0048                        __pstringtext 0100  
       _GLOBAL_combo_patterns_index 0079                _channelToBeDisplayed 0041  
       __end_of_ConfigureOscillator 0717       _GLOBAL_combo_patterns_counter 003A  
                    __end_of___bmul 05B3                      __end_of___wmul 06CD  
      __size_of_WriteEEPROMDefaults 000D                 start_initialization 0010  
           __end_of_Read_Mode_Input 0674                         __end_of_isr 047D  
                         _SetOUTPUT 0533            __size_of_INC_EEPROM_MODE 0025  
                          ??___bmul 0071                          memcpyee@to 0058  
                          ??___wmul 0074                         __pbssEEDATA 0000  
                       __pbssCOMMON 0077                           ___latbits 0000  
                     __pcstackBANK0 004B                   __size_of_eecpymem 0020  
                        ?_SetOUTPUT 0070                            ?_InitApp 0070  
                 __size_of_memcpyee 002E                            ?___eetoc 0070  
                          ?___ctoee 0059               __end_of_ReWriteEEPROM 06B4  
             __end_of_Initial_Start 062A          __end_of_ROM_COMBO_Patterns 0246  
                  ?_Read_Mode_Input 0070   _bGLOBAL_DISABLE_SYNC_Line_PRESSED 002E  
                 interrupt_function 0004                      ___wmul@product 0074  
                          _GPIObits 0005                           clear_ram0 06F9  
                 ??_INC_EEPROM_MODE 005C            _GLOBAL_SYNC_Line_counter 0035  
                       __stringbase 0112                   ___wmul@multiplier 0070  
    _GLOBAL_Selected_Mode_Type_copy 0037                       ??i1_SetOUTPUT 0070  
            _bGLOBAL_IS_PROGRAMMING 002B                         ??_SetOUTPUT 0055  
          ??_Update_Input_Mode_Type 0055                 _WriteEEPROMDefaults 06E2  
         _GLOBAL_SYNC_PULSE_Counter 0077                    __size_of_InitApp 0028  
                     isr@temp_data1 0076                    __size_of___eetoc 0008  
                   _bGLOBAL_InPhase 0043                    __size_of___ctoee 0007  
              ?_WriteEEPROMDefaults 0070                  __end_of__stringtab 0112  
                      eecpymem@from 0055                            _eecpymem 0674  
                      eecpymem@size 0056                            __ptext10 05DB  
                          __ptext11 0694                            __ptext12 0709  
                          __ptext13 0505                            __ptext14 0710  
                          __ptext15 0334                            __ptext16 055E  
                          __ptext17 06B4                            __ptext18 0589  
                          __ptext19 064F                 __end_ofi1_SetOUTPUT 0589  
                          _memcpyee 0505                       __size_of_main 0088  
      __size_of_ConfigureOscillator 0007          ?_Update_ComboPattern_Index 0070  
           __size_of_WaitForSYNC_PU 000A               ??_WriteEEPROMDefaults 005C  
                        _INTCONbits 000B  _GLOBAL_combo_patterns_column_index 0078  
                     _OUTPUT_BUFFER 007A       __end_of_ROM_Sub_Patterns_Time 0334  
                          intlevel1 0000                         _EEprom_mode 0002  
   __size_of_Update_Input_Mode_Type 0015                           stringcode 010A  
               _EEprom_Written_Flag 0004                          _OSCCONbits 008F  
             WaitForSYNC_PU@temp001 0055   __end_of_Update_ComboPattern_Index 0603  
             _GLOBAL_Dummy_Counter2 003C                  _OUTPUT_BUFFER_COPY 003E  
                       i1_SetOUTPUT 055E                            stringtab 0100  
           _GLOBAL_CHANNELS_EN_DUAL 0040                _bGLOBAL_InPhase_copy 0020  
              _GLOBAL_Dummy_Counter 003D             _GLOBAL_CHANNELS_EN_copy 002F  
                __CFG_FOSC$INTOSCIO 0000                     _INC_EEPROM_MODE 062A  
                _ROM_COMBO_Patterns 0112                          _TRISIObits 0085  
              _GLOBAL_MODE1_counter 0036                        ___eetoc@addr 0059  
                      ___eetoc@data 005A                _GLOBAL_MODE2_counter 0034  
