

Microchip Technology PIC PRO Macro Assembler V1.45 build -152302408 
                                                                                               Mon Feb 04 10:05:28 2019

Microchip Technology Omniscient Code Generator v1.45 (PRO mode) build 201711160504
     1                           	processor	12F683
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssEEDATA,global,class=EEDATA,space=3,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	pa_nodes0,global,class=CODE,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.45
    37                           ; Generated 16/11/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC12F683 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  008C                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0092                     	;# 
   101  0095                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0096                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  0081                     	;# 
   138  0085                     	;# 
   139  008C                     	;# 
   140  008E                     	;# 
   141  008F                     	;# 
   142  0090                     	;# 
   143  0092                     	;# 
   144  0095                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0096                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0018                     	;# 
   176  0019                     	;# 
   177  001A                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  008C                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0092                     	;# 
   187  0095                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0096                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0000                     	;# 
   200  0001                     	;# 
   201  0002                     	;# 
   202  0003                     	;# 
   203  0004                     	;# 
   204  0005                     	;# 
   205  000A                     	;# 
   206  000B                     	;# 
   207  000C                     	;# 
   208  000E                     	;# 
   209  000E                     	;# 
   210  000F                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0013                     	;# 
   216  0014                     	;# 
   217  0015                     	;# 
   218  0018                     	;# 
   219  0019                     	;# 
   220  001A                     	;# 
   221  001E                     	;# 
   222  001F                     	;# 
   223  0081                     	;# 
   224  0085                     	;# 
   225  008C                     	;# 
   226  008E                     	;# 
   227  008F                     	;# 
   228  0090                     	;# 
   229  0092                     	;# 
   230  0095                     	;# 
   231  0095                     	;# 
   232  0096                     	;# 
   233  0096                     	;# 
   234  0099                     	;# 
   235  009A                     	;# 
   236  009A                     	;# 
   237  009B                     	;# 
   238  009C                     	;# 
   239  009D                     	;# 
   240  009E                     	;# 
   241  009F                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  000A                     	;# 
   249  000B                     	;# 
   250  000C                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0013                     	;# 
   259  0014                     	;# 
   260  0015                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001E                     	;# 
   265  001F                     	;# 
   266  0081                     	;# 
   267  0085                     	;# 
   268  008C                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0092                     	;# 
   273  0095                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0096                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285                           
   286                           	psect	stringtext
   287  0100                     __pstringtext:	
   288  0100                     stringtab:	
   289  0100                     __stringtab:	
   290                           
   291                           ;	String table - string pointers are 2 bytes each
   292  0100  1BFF               	btfsc	btemp+1,7
   293  0101  290A               	ljmp	stringcode
   294  0102  1383               	bcf	3,7
   295  0103  187F               	btfsc	btemp+1,0
   296  0104  1783               	bsf	3,7
   297  0105  0800               	movf	0,w
   298  0106  0A84               	incf	4,f
   299  0107  1903               	skipnz
   300  0108  0AFF               	incf	btemp+1,f
   301  0109  0008               	return
   302  010A                     stringcode:	
   303  010A  087F               	movf	btemp+1,w
   304  010B  397F               	andlw	127
   305  010C  008A               	movwf	10
   306  010D  0804               	movf	4,w
   307  010E  0A84               	incf	4,f
   308  010F  1903               	skipnz
   309  0110  0AFF               	incf	btemp+1,f
   310  0111  0082               	movwf	2
   311  0112                     __stringbase:	
   312  0112                     __end_of__stringtab:	
   313  0112                     _ROM_COMBO_Patterns:	
   314  0112  3403               	retlw	3
   315  0113  3402               	retlw	2
   316  0114  3403               	retlw	3
   317  0115  3402               	retlw	2
   318  0116  3463               	retlw	99
   319  0117  3463               	retlw	99
   320  0118  3463               	retlw	99
   321  0119  3463               	retlw	99
   322  011A  3463               	retlw	99
   323  011B  3463               	retlw	99
   324  011C  3463               	retlw	99
   325  011D  3463               	retlw	99
   326  011E  3463               	retlw	99
   327  011F  3463               	retlw	99
   328  0120  3463               	retlw	99
   329  0121  3463               	retlw	99
   330  0122  3463               	retlw	99
   331  0123  3463               	retlw	99
   332  0124  3463               	retlw	99
   333  0125  3463               	retlw	99
   334  0126  3463               	retlw	99
   335  0127  3463               	retlw	99
   336  0128  3401               	retlw	1
   337  0129  3400               	retlw	0
   338  012A  3401               	retlw	1
   339  012B  3400               	retlw	0
   340  012C  3463               	retlw	99
   341  012D  3463               	retlw	99
   342  012E  3463               	retlw	99
   343  012F  3463               	retlw	99
   344  0130  3463               	retlw	99
   345  0131  3463               	retlw	99
   346  0132  3463               	retlw	99
   347  0133  3463               	retlw	99
   348  0134  3463               	retlw	99
   349  0135  3463               	retlw	99
   350  0136  3463               	retlw	99
   351  0137  3463               	retlw	99
   352  0138  3463               	retlw	99
   353  0139  3463               	retlw	99
   354  013A  3463               	retlw	99
   355  013B  3463               	retlw	99
   356  013C  3463               	retlw	99
   357  013D  3463               	retlw	99
   358  013E  3403               	retlw	3
   359  013F  3402               	retlw	2
   360  0140  3403               	retlw	3
   361  0141  3402               	retlw	2
   362  0142  3403               	retlw	3
   363  0143  3402               	retlw	2
   364  0144  3401               	retlw	1
   365  0145  3400               	retlw	0
   366  0146  3401               	retlw	1
   367  0147  3400               	retlw	0
   368  0148  3401               	retlw	1
   369  0149  3400               	retlw	0
   370  014A  3401               	retlw	1
   371  014B  3400               	retlw	0
   372  014C  3463               	retlw	99
   373  014D  3463               	retlw	99
   374  014E  3463               	retlw	99
   375  014F  3463               	retlw	99
   376  0150  3463               	retlw	99
   377  0151  3463               	retlw	99
   378  0152  3463               	retlw	99
   379  0153  3463               	retlw	99
   380  0154  3404               	retlw	4
   381  0155  3402               	retlw	2
   382  0156  3404               	retlw	4
   383  0157  3402               	retlw	2
   384  0158  3463               	retlw	99
   385  0159  3463               	retlw	99
   386  015A  3463               	retlw	99
   387  015B  3463               	retlw	99
   388  015C  3463               	retlw	99
   389  015D  3463               	retlw	99
   390  015E  3463               	retlw	99
   391  015F  3463               	retlw	99
   392  0160  3463               	retlw	99
   393  0161  3463               	retlw	99
   394  0162  3463               	retlw	99
   395  0163  3463               	retlw	99
   396  0164  3463               	retlw	99
   397  0165  3463               	retlw	99
   398  0166  3463               	retlw	99
   399  0167  3463               	retlw	99
   400  0168  3463               	retlw	99
   401  0169  3463               	retlw	99
   402  016A  3406               	retlw	6
   403  016B  3400               	retlw	0
   404  016C  3406               	retlw	6
   405  016D  3400               	retlw	0
   406  016E  3463               	retlw	99
   407  016F  3463               	retlw	99
   408  0170  3463               	retlw	99
   409  0171  3463               	retlw	99
   410  0172  3463               	retlw	99
   411  0173  3463               	retlw	99
   412  0174  3463               	retlw	99
   413  0175  3463               	retlw	99
   414  0176  3463               	retlw	99
   415  0177  3463               	retlw	99
   416  0178  3463               	retlw	99
   417  0179  3463               	retlw	99
   418  017A  3463               	retlw	99
   419  017B  3463               	retlw	99
   420  017C  3463               	retlw	99
   421  017D  3463               	retlw	99
   422  017E  3463               	retlw	99
   423  017F  3463               	retlw	99
   424  0180  3404               	retlw	4
   425  0181  3402               	retlw	2
   426  0182  3404               	retlw	4
   427  0183  3402               	retlw	2
   428  0184  3404               	retlw	4
   429  0185  3402               	retlw	2
   430  0186  3406               	retlw	6
   431  0187  3400               	retlw	0
   432  0188  3406               	retlw	6
   433  0189  3400               	retlw	0
   434  018A  3406               	retlw	6
   435  018B  3400               	retlw	0
   436  018C  3406               	retlw	6
   437  018D  3400               	retlw	0
   438  018E  3463               	retlw	99
   439  018F  3463               	retlw	99
   440  0190  3463               	retlw	99
   441  0191  3463               	retlw	99
   442  0192  3463               	retlw	99
   443  0193  3463               	retlw	99
   444  0194  3463               	retlw	99
   445  0195  3463               	retlw	99
   446  0196  3405               	retlw	5
   447  0197  3402               	retlw	2
   448  0198  3405               	retlw	5
   449  0199  3402               	retlw	2
   450  019A  3463               	retlw	99
   451  019B  3463               	retlw	99
   452  019C  3463               	retlw	99
   453  019D  3463               	retlw	99
   454  019E  3463               	retlw	99
   455  019F  3463               	retlw	99
   456  01A0  3463               	retlw	99
   457  01A1  3463               	retlw	99
   458  01A2  3463               	retlw	99
   459  01A3  3463               	retlw	99
   460  01A4  3463               	retlw	99
   461  01A5  3463               	retlw	99
   462  01A6  3463               	retlw	99
   463  01A7  3463               	retlw	99
   464  01A8  3463               	retlw	99
   465  01A9  3463               	retlw	99
   466  01AA  3463               	retlw	99
   467  01AB  3463               	retlw	99
   468  01AC  3407               	retlw	7
   469  01AD  3400               	retlw	0
   470  01AE  3407               	retlw	7
   471  01AF  3400               	retlw	0
   472  01B0  3463               	retlw	99
   473  01B1  3463               	retlw	99
   474  01B2  3463               	retlw	99
   475  01B3  3463               	retlw	99
   476  01B4  3463               	retlw	99
   477  01B5  3463               	retlw	99
   478  01B6  3463               	retlw	99
   479  01B7  3463               	retlw	99
   480  01B8  3463               	retlw	99
   481  01B9  3463               	retlw	99
   482  01BA  3463               	retlw	99
   483  01BB  3463               	retlw	99
   484  01BC  3463               	retlw	99
   485  01BD  3463               	retlw	99
   486  01BE  3463               	retlw	99
   487  01BF  3463               	retlw	99
   488  01C0  3463               	retlw	99
   489  01C1  3463               	retlw	99
   490  01C2  3405               	retlw	5
   491  01C3  3402               	retlw	2
   492  01C4  3405               	retlw	5
   493  01C5  3402               	retlw	2
   494  01C6  3405               	retlw	5
   495  01C7  3402               	retlw	2
   496  01C8  3407               	retlw	7
   497  01C9  3400               	retlw	0
   498  01CA  3407               	retlw	7
   499  01CB  3400               	retlw	0
   500  01CC  3407               	retlw	7
   501  01CD  3400               	retlw	0
   502  01CE  3407               	retlw	7
   503  01CF  3400               	retlw	0
   504  01D0  3463               	retlw	99
   505  01D1  3463               	retlw	99
   506  01D2  3463               	retlw	99
   507  01D3  3463               	retlw	99
   508  01D4  3463               	retlw	99
   509  01D5  3463               	retlw	99
   510  01D6  3463               	retlw	99
   511  01D7  3463               	retlw	99
   512  01D8  340D               	retlw	13
   513  01D9  340E               	retlw	14
   514  01DA  340D               	retlw	13
   515  01DB  340E               	retlw	14
   516  01DC  340F               	retlw	15
   517  01DD  340F               	retlw	15
   518  01DE  3410               	retlw	16
   519  01DF  3410               	retlw	16
   520  01E0  340F               	retlw	15
   521  01E1  340F               	retlw	15
   522  01E2  3410               	retlw	16
   523  01E3  3410               	retlw	16
   524  01E4  340B               	retlw	11
   525  01E5  340C               	retlw	12
   526  01E6  340B               	retlw	11
   527  01E7  340C               	retlw	12
   528  01E8  340A               	retlw	10
   529  01E9  3409               	retlw	9
   530  01EA  340A               	retlw	10
   531  01EB  3409               	retlw	9
   532  01EC  340A               	retlw	10
   533  01ED  3409               	retlw	9
   534  01EE  340A               	retlw	10
   535  01EF  3409               	retlw	9
   536  01F0  340A               	retlw	10
   537  01F1  3409               	retlw	9
   538  01F2  340D               	retlw	13
   539  01F3  340D               	retlw	13
   540  01F4  3410               	retlw	16
   541  01F5  3410               	retlw	16
   542  01F6  340F               	retlw	15
   543  01F7  340F               	retlw	15
   544  01F8  3410               	retlw	16
   545  01F9  3410               	retlw	16
   546  01FA  340F               	retlw	15
   547  01FB  340F               	retlw	15
   548  01FC  3410               	retlw	16
   549  01FD  3410               	retlw	16
   550  01FE  340F               	retlw	15
   551  01FF  340F               	retlw	15
   552  0200  340D               	retlw	13
   553  0201  340E               	retlw	14
   554  0202  340D               	retlw	13
   555  0203  340E               	retlw	14
   556  0204  3407               	retlw	7
   557  0205  3408               	retlw	8
   558  0206  3408               	retlw	8
   559  0207  3408               	retlw	8
   560  0208  3463               	retlw	99
   561  0209  3463               	retlw	99
   562  020A  3463               	retlw	99
   563  020B  3463               	retlw	99
   564  020C  3463               	retlw	99
   565  020D  3463               	retlw	99
   566  020E  3463               	retlw	99
   567  020F  3463               	retlw	99
   568  0210  3463               	retlw	99
   569  0211  3463               	retlw	99
   570  0212  3463               	retlw	99
   571  0213  3463               	retlw	99
   572  0214  3463               	retlw	99
   573  0215  3463               	retlw	99
   574  0216  3463               	retlw	99
   575  0217  3463               	retlw	99
   576  0218  3463               	retlw	99
   577  0219  3463               	retlw	99
   578  021A  3408               	retlw	8
   579  021B  3408               	retlw	8
   580  021C  3408               	retlw	8
   581  021D  3408               	retlw	8
   582  021E  3463               	retlw	99
   583  021F  3463               	retlw	99
   584  0220  3463               	retlw	99
   585  0221  3463               	retlw	99
   586  0222  3463               	retlw	99
   587  0223  3463               	retlw	99
   588  0224  3463               	retlw	99
   589  0225  3463               	retlw	99
   590  0226  3463               	retlw	99
   591  0227  3463               	retlw	99
   592  0228  3463               	retlw	99
   593  0229  3463               	retlw	99
   594  022A  3463               	retlw	99
   595  022B  3463               	retlw	99
   596  022C  3463               	retlw	99
   597  022D  3463               	retlw	99
   598  022E  3463               	retlw	99
   599  022F  3463               	retlw	99
   600  0230  3408               	retlw	8
   601  0231  3408               	retlw	8
   602  0232  3408               	retlw	8
   603  0233  3408               	retlw	8
   604  0234  3463               	retlw	99
   605  0235  3463               	retlw	99
   606  0236  3463               	retlw	99
   607  0237  3463               	retlw	99
   608  0238  3463               	retlw	99
   609  0239  3463               	retlw	99
   610  023A  3463               	retlw	99
   611  023B  3463               	retlw	99
   612  023C  3463               	retlw	99
   613  023D  3463               	retlw	99
   614  023E  3463               	retlw	99
   615  023F  3463               	retlw	99
   616  0240  3463               	retlw	99
   617  0241  3463               	retlw	99
   618  0242  3463               	retlw	99
   619  0243  3463               	retlw	99
   620  0244  3463               	retlw	99
   621  0245  3463               	retlw	99
   622  0246                     __end_of_ROM_COMBO_Patterns:	
   623  0246                     _ROM_Sub_Patterns:	
   624  0246  3400               	retlw	0
   625  0247  3400               	retlw	0
   626  0248  3400               	retlw	0
   627  0249  3400               	retlw	0
   628  024A  3400               	retlw	0
   629  024B  3400               	retlw	0
   630  024C  3400               	retlw	0
   631  024D  3403               	retlw	3
   632  024E  3403               	retlw	3
   633  024F  3400               	retlw	0
   634  0250  3403               	retlw	3
   635  0251  3403               	retlw	3
   636  0252  3403               	retlw	3
   637  0253  3403               	retlw	3
   638  0254  3400               	retlw	0
   639  0255  3400               	retlw	0
   640  0256  3400               	retlw	0
   641  0257  3400               	retlw	0
   642  0258  3400               	retlw	0
   643  0259  3400               	retlw	0
   644  025A  3400               	retlw	0
   645  025B  3403               	retlw	3
   646  025C  3403               	retlw	3
   647  025D  3400               	retlw	0
   648  025E  3400               	retlw	0
   649  025F  3403               	retlw	3
   650  0260  3403               	retlw	3
   651  0261  3403               	retlw	3
   652  0262  3403               	retlw	3
   653  0263  3400               	retlw	0
   654  0264  3403               	retlw	3
   655  0265  3400               	retlw	0
   656  0266  3403               	retlw	3
   657  0267  3400               	retlw	0
   658  0268  3403               	retlw	3
   659  0269  3403               	retlw	3
   660  026A  3400               	retlw	0
   661  026B  3403               	retlw	3
   662  026C  3400               	retlw	0
   663  026D  3403               	retlw	3
   664  026E  3400               	retlw	0
   665  026F  3403               	retlw	3
   666  0270  3403               	retlw	3
   667  0271  3400               	retlw	0
   668  0272  3403               	retlw	3
   669  0273  3400               	retlw	0
   670  0274  3400               	retlw	0
   671  0275  3400               	retlw	0
   672  0276  3403               	retlw	3
   673  0277  3403               	retlw	3
   674  0278  3400               	retlw	0
   675  0279  3403               	retlw	3
   676  027A  3400               	retlw	0
   677  027B  3403               	retlw	3
   678  027C  3400               	retlw	0
   679  027D  3403               	retlw	3
   680  027E  3403               	retlw	3
   681  027F  3403               	retlw	3
   682  0280  3403               	retlw	3
   683  0281  3403               	retlw	3
   684  0282  3403               	retlw	3
   685  0283  3403               	retlw	3
   686  0284  3403               	retlw	3
   687  0285  3400               	retlw	0
   688  0286  3400               	retlw	0
   689  0287  3400               	retlw	0
   690  0288  3400               	retlw	0
   691  0289  3400               	retlw	0
   692  028A  3400               	retlw	0
   693  028B  3400               	retlw	0
   694  028C  3403               	retlw	3
   695  028D  3403               	retlw	3
   696  028E  3403               	retlw	3
   697  028F  3403               	retlw	3
   698  0290  3403               	retlw	3
   699  0291  3403               	retlw	3
   700  0292  3403               	retlw	3
   701  0293  3403               	retlw	3
   702  0294  3400               	retlw	0
   703  0295  3403               	retlw	3
   704  0296  3400               	retlw	0
   705  0297  3403               	retlw	3
   706  0298  3400               	retlw	0
   707  0299  3403               	retlw	3
   708  029A  3400               	retlw	0
   709  029B  3400               	retlw	0
   710  029C  3400               	retlw	0
   711  029D  3400               	retlw	0
   712  029E  3400               	retlw	0
   713  029F  3400               	retlw	0
   714  02A0  3400               	retlw	0
   715  02A1  3403               	retlw	3
   716  02A2  3400               	retlw	0
   717  02A3  3403               	retlw	3
   718  02A4  3400               	retlw	0
   719  02A5  3403               	retlw	3
   720  02A6  3400               	retlw	0
   721  02A7  3403               	retlw	3
   722  02A8  3400               	retlw	0
   723  02A9  3400               	retlw	0
   724  02AA  3400               	retlw	0
   725  02AB  3400               	retlw	0
   726  02AC  3400               	retlw	0
   727  02AD  3400               	retlw	0
   728  02AE  3400               	retlw	0
   729  02AF  3403               	retlw	3
   730  02B0  3403               	retlw	3
   731  02B1  3403               	retlw	3
   732  02B2  3403               	retlw	3
   733  02B3  3403               	retlw	3
   734  02B4  3403               	retlw	3
   735  02B5  3403               	retlw	3
   736  02B6  3400               	retlw	0
   737  02B7  3400               	retlw	0
   738  02B8  3400               	retlw	0
   739  02B9  3400               	retlw	0
   740  02BA  3400               	retlw	0
   741  02BB  3400               	retlw	0
   742  02BC  3400               	retlw	0
   743  02BD                     __end_of_ROM_Sub_Patterns:	
   744  02BD                     _ROM_Sub_Patterns_Time:	
   745  02BD  340E               	retlw	14
   746  02BE  340A               	retlw	10
   747  02BF  3400               	retlw	0
   748  02C0  3400               	retlw	0
   749  02C1  3400               	retlw	0
   750  02C2  3400               	retlw	0
   751  02C3  3400               	retlw	0
   752  02C4  340A               	retlw	10
   753  02C5  340A               	retlw	10
   754  02C6  3406               	retlw	6
   755  02C7  3400               	retlw	0
   756  02C8  3400               	retlw	0
   757  02C9  3400               	retlw	0
   758  02CA  3400               	retlw	0
   759  02CB  3419               	retlw	25
   760  02CC  340F               	retlw	15
   761  02CD  3400               	retlw	0
   762  02CE  3400               	retlw	0
   763  02CF  3400               	retlw	0
   764  02D0  3400               	retlw	0
   765  02D1  3400               	retlw	0
   766  02D2  3410               	retlw	16
   767  02D3  3410               	retlw	16
   768  02D4  3408               	retlw	8
   769  02D5  3400               	retlw	0
   770  02D6  3400               	retlw	0
   771  02D7  3400               	retlw	0
   772  02D8  3400               	retlw	0
   773  02D9  3410               	retlw	16
   774  02DA  3408               	retlw	8
   775  02DB  3410               	retlw	16
   776  02DC  3400               	retlw	0
   777  02DD  3400               	retlw	0
   778  02DE  3400               	retlw	0
   779  02DF  3400               	retlw	0
   780  02E0  340B               	retlw	11
   781  02E1  3404               	retlw	4
   782  02E2  340B               	retlw	11
   783  02E3  3404               	retlw	4
   784  02E4  340B               	retlw	11
   785  02E5  3400               	retlw	0
   786  02E6  3400               	retlw	0
   787  02E7  340A               	retlw	10
   788  02E8  3405               	retlw	5
   789  02E9  340A               	retlw	10
   790  02EA  3402               	retlw	2
   791  02EB  3400               	retlw	0
   792  02EC  3400               	retlw	0
   793  02ED  3400               	retlw	0
   794  02EE  3407               	retlw	7
   795  02EF  3403               	retlw	3
   796  02F0  3406               	retlw	6
   797  02F1  3403               	retlw	3
   798  02F2  3406               	retlw	6
   799  02F3  3402               	retlw	2
   800  02F4  3400               	retlw	0
   801  02F5  340A               	retlw	10
   802  02F6  340A               	retlw	10
   803  02F7  3406               	retlw	6
   804  02F8  3400               	retlw	0
   805  02F9  3400               	retlw	0
   806  02FA  3400               	retlw	0
   807  02FB  3400               	retlw	0
   808  02FC  3408               	retlw	8
   809  02FD  3409               	retlw	9
   810  02FE  3400               	retlw	0
   811  02FF  3400               	retlw	0
   812  0300  3400               	retlw	0
   813  0301  3400               	retlw	0
   814  0302  3400               	retlw	0
   815  0303  3408               	retlw	8
   816  0304  3409               	retlw	9
   817  0305  3400               	retlw	0
   818  0306  3400               	retlw	0
   819  0307  3400               	retlw	0
   820  0308  3400               	retlw	0
   821  0309  3400               	retlw	0
   822  030A  3403               	retlw	3
   823  030B  3403               	retlw	3
   824  030C  3407               	retlw	7
   825  030D  3400               	retlw	0
   826  030E  3400               	retlw	0
   827  030F  3400               	retlw	0
   828  0310  3400               	retlw	0
   829  0311  3407               	retlw	7
   830  0312  3408               	retlw	8
   831  0313  3400               	retlw	0
   832  0314  3400               	retlw	0
   833  0315  3400               	retlw	0
   834  0316  3400               	retlw	0
   835  0317  3400               	retlw	0
   836  0318  3403               	retlw	3
   837  0319  3403               	retlw	3
   838  031A  3403               	retlw	3
   839  031B  3403               	retlw	3
   840  031C  3403               	retlw	3
   841  031D  3403               	retlw	3
   842  031E  3407               	retlw	7
   843  031F  340D               	retlw	13
   844  0320  340E               	retlw	14
   845  0321  3400               	retlw	0
   846  0322  3400               	retlw	0
   847  0323  3400               	retlw	0
   848  0324  3400               	retlw	0
   849  0325  3400               	retlw	0
   850  0326  3404               	retlw	4
   851  0327  3407               	retlw	7
   852  0328  3400               	retlw	0
   853  0329  3400               	retlw	0
   854  032A  3400               	retlw	0
   855  032B  3400               	retlw	0
   856  032C  3400               	retlw	0
   857  032D  3404               	retlw	4
   858  032E  3407               	retlw	7
   859  032F  3400               	retlw	0
   860  0330  3400               	retlw	0
   861  0331  3400               	retlw	0
   862  0332  3400               	retlw	0
   863  0333  3400               	retlw	0
   864  0334                     __end_of_ROM_Sub_Patterns_Time:	
   865  000B                     _INTCON	set	11
   866  0019                     _CMCON0	set	25
   867  0018                     _WDTCON	set	24
   868  0005                     _GPIO	set	5
   869  0005                     _GPIObits	set	5
   870  0001                     _TMR0	set	1
   871  000B                     _INTCONbits	set	11
   872  005F                     _GIE	set	95
   873  0018                     _CARRY	set	24
   874  009D                     _EECON2	set	157
   875  009A                     _EEDATA	set	154
   876  009C                     _EECON1	set	156
   877  009B                     _EEADR	set	155
   878  0085                     _TRISIObits	set	133
   879  0085                     _TRISIO	set	133
   880  009F                     _ANSEL	set	159
   881  0095                     _WPU	set	149
   882  0081                     _OPTION_REGbits	set	129
   883  008F                     _OSCCONbits	set	143
   884  008F                     _OSCCON	set	143
   885  04E2                     _WREN	set	1250
   886  04E0                     _RD	set	1248
   887  04E1                     _WR	set	1249
   888                           
   889                           ; #config settings
   890  0000                     
   891                           	psect	cinit
   892  0010                     start_initialization:	
   893  0010                     __initialization:	
   894                           
   895                           ; Clear objects allocated to COMMON
   896  0010  3078               	movlw	low __pbssCOMMON
   897  0011  0084               	movwf	4
   898  0012  307E               	movlw	low (__pbssCOMMON+6)
   899  0013  26C6               	fcall	clear_ram0
   900  0014  3020               	movlw	low __pbssBANK0
   901                           
   902                           ; Clear objects allocated to BANK0
   903  0015  1383               	bcf	3,7	;select IRP bank0
   904  0016  0084               	movwf	4
   905  0017  3044               	movlw	low (__pbssBANK0+36)
   906  0018  26C6               	fcall	clear_ram0
   907  0019                     end_of_initialization:	
   908                           ;End of C runtime variable initialization code
   909                           
   910  0019                     __end_of__initialization:	
   911  0019  0183               	clrf	3
   912  001A  2C67               	ljmp	_main	;jump to C main() function
   913                           
   914                           	psect	bssEEDATA
   915  0000                     __pbssEEDATA:	
   916  0000                     _EEprom_InPhase:	
   917  0000  0000               	db	0
   918  0001  0000               	db	0
   919  0002                     _EEprom_mode:	
   920  0002  0000               	db	0
   921  0003  0000               	db	0
   922  0004                     _EEprom_Written_Flag:	
   923  0004  0000               	db	0
   924                           
   925                           	psect	bssCOMMON
   926  0078                     __pbssCOMMON:	
   927  0078                     _GLOBAL_SYNC_PULSE_Counter:	
   928  0078                     	ds	1
   929  0079                     _GLOBAL_combo_patterns_column_index:	
   930  0079                     	ds	1
   931  007A                     _GLOBAL_combo_patterns_index:	
   932  007A                     	ds	1
   933  007B                     _OUTPUT_BUFFER:	
   934  007B                     	ds	1
   935  007C                     _GLOBAL_sub_patterns_index:	
   936  007C                     	ds	1
   937  007D                     _GLOBAL_sub_patterns_column_index:	
   938  007D                     	ds	1
   939                           
   940                           	psect	bssBANK0
   941  0020                     __pbssBANK0:	
   942  0020                     _bGLOBAL_InPhase_copy:	
   943  0020                     	ds	2
   944  0022                     _GLOBAL_Mode_copy:	
   945  0022                     	ds	2
   946  0024                     _bGLOBAL_SYNC_Line_PRESSED:	
   947  0024                     	ds	1
   948  0025                     _bGLOBAL_MODE2_PRESSED:	
   949  0025                     	ds	1
   950  0026                     _bGLOBAL_MODE1_PRESSED:	
   951  0026                     	ds	1
   952  0027                     _bGLOBAL_ENABLE_LEDS:	
   953  0027                     	ds	1
   954  0028                     _bGLOBAL_IS_PROGRAMMING:	
   955  0028                     	ds	1
   956  0029                     _bGLOBAL_CHANGING_PATTERN_Enforce:	
   957  0029                     	ds	1
   958  002A                     _bGLOBAL_CHANGING_PATTERN:	
   959  002A                     	ds	1
   960  002B                     _bGLOBAL_DISABLE_SYNC_Line_PRESSED:	
   961  002B                     	ds	1
   962  002C                     _GLOBAL_CHANNELS_EN_copy:	
   963  002C                     	ds	1
   964  002D                     _GLOBAL_CHANNELS_EN:	
   965  002D                     	ds	1
   966  002E                     _GLOBAL_MODE2_LOW_counter:	
   967  002E                     	ds	1
   968  002F                     _GLOBAL_SYNC_Line_LOW_counter:	
   969  002F                     	ds	1
   970  0030                     _GLOBAL_MODE1_LOW_counter:	
   971  0030                     	ds	1
   972  0031                     _GLOBAL_MODE2_counter:	
   973  0031                     	ds	1
   974  0032                     _GLOBAL_SYNC_Line_counter:	
   975  0032                     	ds	1
   976  0033                     _GLOBAL_MODE1_counter:	
   977  0033                     	ds	1
   978  0034                     _GLOBAL_Selected_Mode_Type_copy:	
   979  0034                     	ds	1
   980  0035                     _GLOBAL_Selected_Mode_Type:	
   981  0035                     	ds	1
   982  0036                     _GLOBAL_Selected_Mode_Number:	
   983  0036                     	ds	1
   984  0037                     _GLOBAL_combo_patterns_counter:	
   985  0037                     	ds	1
   986  0038                     _GLOBAL_Dummy_Counter2:	
   987  0038                     	ds	1
   988  0039                     _GLOBAL_Dummy_Counter:	
   989  0039                     	ds	1
   990  003A                     _OUTPUT_BUFFER_COPY:	
   991  003A                     	ds	1
   992  003B                     _bGLOBAL_SYNC_SENT:	
   993  003B                     	ds	1
   994  003C                     _bGLOBAL_InPhase:	
   995  003C                     	ds	1
   996  003D                     _bGLOBAL_END_OF_CYCLE_COND2:	
   997  003D                     	ds	1
   998  003E                     _bGLOBAL_END_OF_CYCLE_COND1:	
   999  003E                     	ds	1
  1000  003F                     _GLOBAL_combo_patterns_index_copy:	
  1001  003F                     	ds	1
  1002  0040                     _GLOBAL_sub_patterns_index_copy:	
  1003  0040                     	ds	1
  1004  0041                     _GLOBAL_sub_patterns_timer:	
  1005  0041                     	ds	1
  1006  0042                     _bGLOBAL_STEADY_ON:	
  1007  0042                     	ds	1
  1008  0043                     _bGLOBAL_OUTPUT_BUFFER_CHANGED:	
  1009  0043                     	ds	1
  1010                           
  1011                           	psect	clrtext
  1012  06C6                     clear_ram0:	
  1013                           ;	Called with FSR containing the base address, and
  1014                           ;	W with the last address+1
  1015                           
  1016  06C6  0064               	clrwdt	;clear the watchdog before getting into this loop
  1017  06C7                     clrloop0:	
  1018  06C7  0180               	clrf	0	;clear RAM location pointed to by FSR
  1019  06C8  0A84               	incf	4,f	;increment pointer
  1020  06C9  0604               	xorwf	4,w	;XOR with final address
  1021  06CA  1903               	btfsc	3,2	;have we reached the end yet?
  1022  06CB  3400               	retlw	0	;all done for this memory range, return
  1023  06CC  0604               	xorwf	4,w	;XOR again to restore value
  1024  06CD  2EC7               	goto	clrloop0	;do the next byte
  1025                           
  1026                           	psect	cstackCOMMON
  1027  0071                     __pcstackCOMMON:	
  1028  0071                     ?_SetOUTPUT:	
  1029  0071                     ?_Read_Mode_Input:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032  0071                     ??_Read_Mode_Input:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035  0071                     ?_ReWriteEEPROM:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038  0071                     ?_Update_ComboPattern_Index:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041  0071                     ?_ConfigureOscillator:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044  0071                     ?_InitApp:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047  0071                     ?_isr:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050  0071                     ?_WaitForSYNC_PU:	
  1051                           ; 1 bytes @ 0x0
  1052                           
  1053  0071                     ?_WriteEEPROMDefaults:	
  1054                           ; 1 bytes @ 0x0
  1055                           
  1056  0071                     ?_INC_EEPROM_MODE:	
  1057                           ; 1 bytes @ 0x0
  1058                           
  1059  0071                     ?_Update_Input_Mode_Type:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  0071                     ?_Initial_Start:	
  1063                           ; 1 bytes @ 0x0
  1064                           
  1065  0071                     ?_main:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  0071                     ?___eetoc:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0071                     ?___bmul:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0071                     ?i1_SetOUTPUT:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0071                     ??i1_SetOUTPUT:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0071                     ?___wmul:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0071                     ___bmul@multiplicand:	
  1084                           ; 2 bytes @ 0x0
  1085                           
  1086  0071                     ___wmul@multiplier:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089                           
  1090                           ; 2 bytes @ 0x0
  1091  0071                     	ds	1
  1092  0072                     ??___bmul:	
  1093  0072                     ___bmul@product:	
  1094                           ; 1 bytes @ 0x1
  1095                           
  1096  0072                     i1SetOUTPUT@temporaryGPIO:	
  1097                           ; 1 bytes @ 0x1
  1098                           
  1099                           
  1100                           ; 1 bytes @ 0x1
  1101  0072                     	ds	1
  1102  0073                     ___bmul@multiplier:	
  1103  0073                     ___wmul@multiplicand:	
  1104                           ; 1 bytes @ 0x2
  1105                           
  1106                           
  1107                           ; 2 bytes @ 0x2
  1108  0073                     	ds	2
  1109  0075                     ??___wmul:	
  1110  0075                     ___wmul@product:	
  1111                           ; 1 bytes @ 0x4
  1112                           
  1113                           
  1114                           ; 2 bytes @ 0x4
  1115  0075                     	ds	2
  1116  0077                     isr@temp_data1:	
  1117                           
  1118                           ; 1 bytes @ 0x6
  1119  0077                     	ds	1
  1120                           
  1121                           	psect	cstackBANK0
  1122  0044                     __pcstackBANK0:	
  1123  0044                     ??_isr:	
  1124                           
  1125                           ; 1 bytes @ 0x0
  1126  0044                     	ds	10
  1127  004E                     ??_SetOUTPUT:	
  1128  004E                     ??_Update_ComboPattern_Index:	
  1129                           ; 1 bytes @ 0xA
  1130                           
  1131  004E                     ??_ConfigureOscillator:	
  1132                           ; 1 bytes @ 0xA
  1133                           
  1134  004E                     ??_WaitForSYNC_PU:	
  1135                           ; 1 bytes @ 0xA
  1136                           
  1137  004E                     ??_Update_Input_Mode_Type:	
  1138                           ; 1 bytes @ 0xA
  1139                           
  1140  004E                     ?_eecpymem:	
  1141                           ; 1 bytes @ 0xA
  1142                           
  1143  004E                     ?_memcpyee:	
  1144                           ; 1 bytes @ 0xA
  1145                           
  1146  004E                     WaitForSYNC_PU@temp001:	
  1147                           ; 1 bytes @ 0xA
  1148                           
  1149  004E                     eecpymem@from:	
  1150                           ; 1 bytes @ 0xA
  1151                           
  1152  004E                     memcpyee@from:	
  1153                           ; 1 bytes @ 0xA
  1154                           
  1155                           
  1156                           ; 1 bytes @ 0xA
  1157  004E                     	ds	1
  1158  004F                     ??_InitApp:	
  1159  004F                     SetOUTPUT@temporaryGPIO:	
  1160                           ; 1 bytes @ 0xB
  1161                           
  1162  004F                     eecpymem@size:	
  1163                           ; 1 bytes @ 0xB
  1164                           
  1165  004F                     memcpyee@size:	
  1166                           ; 1 bytes @ 0xB
  1167                           
  1168                           
  1169                           ; 1 bytes @ 0xB
  1170  004F                     	ds	1
  1171  0050                     ??_eecpymem:	
  1172  0050                     ??_memcpyee:	
  1173                           ; 1 bytes @ 0xC
  1174                           
  1175  0050                     eecpymem@cp:	
  1176                           ; 1 bytes @ 0xC
  1177                           
  1178  0050                     memcpyee@ptr:	
  1179                           ; 1 bytes @ 0xC
  1180                           
  1181                           
  1182                           ; 1 bytes @ 0xC
  1183  0050                     	ds	1
  1184  0051                     eecpymem@to:	
  1185  0051                     memcpyee@to:	
  1186                           ; 1 bytes @ 0xD
  1187                           
  1188                           
  1189                           ; 1 bytes @ 0xD
  1190  0051                     	ds	1
  1191  0052                     ??___eetoc:	
  1192  0052                     ?___ctoee:	
  1193                           ; 1 bytes @ 0xE
  1194                           
  1195  0052                     ___eetoc@addr:	
  1196                           ; 1 bytes @ 0xE
  1197                           
  1198  0052                     ___ctoee@data:	
  1199                           ; 1 bytes @ 0xE
  1200                           
  1201                           
  1202                           ; 1 bytes @ 0xE
  1203  0052                     	ds	1
  1204  0053                     ??___ctoee:	
  1205  0053                     ___eetoc@data:	
  1206                           ; 1 bytes @ 0xF
  1207                           
  1208  0053                     ___ctoee@addr:	
  1209                           ; 1 bytes @ 0xF
  1210                           
  1211                           
  1212                           ; 1 bytes @ 0xF
  1213  0053                     	ds	1
  1214  0054                     ??_ReWriteEEPROM:	
  1215  0054                     ReWriteEEPROM@i:	
  1216                           ; 1 bytes @ 0x10
  1217                           
  1218                           
  1219                           ; 1 bytes @ 0x10
  1220  0054                     	ds	1
  1221  0055                     ??_WriteEEPROMDefaults:	
  1222  0055                     ??_INC_EEPROM_MODE:	
  1223                           ; 1 bytes @ 0x11
  1224                           
  1225  0055                     ??_Initial_Start:	
  1226                           ; 1 bytes @ 0x11
  1227                           
  1228  0055                     INC_EEPROM_MODE@Temp_Mode_Data:	
  1229                           ; 1 bytes @ 0x11
  1230                           
  1231                           
  1232                           ; 1 bytes @ 0x11
  1233  0055                     	ds	1
  1234  0056                     Initial_Start@read_data:	
  1235                           
  1236                           ; 1 bytes @ 0x12
  1237  0056                     	ds	1
  1238  0057                     Initial_Start@i:	
  1239                           
  1240                           ; 1 bytes @ 0x13
  1241  0057                     	ds	1
  1242  0058                     ??_main:	
  1243  0058                     main@tempvar1:	
  1244                           ; 1 bytes @ 0x14
  1245                           
  1246                           
  1247                           ; 1 bytes @ 0x14
  1248  0058                     	ds	1
  1249                           
  1250                           	psect	maintext
  1251  0467                     __pmaintext:	
  1252 ;;
  1253 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1254 ;;
  1255 ;; *************** function _main *****************
  1256 ;; Defined at:
  1257 ;;		line 505 in file "main.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  tempvar1        1   20[BANK0 ] unsigned char 
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1266 ;; Tracked objects:
  1267 ;;		On entry : B00/0
  1268 ;;		On exit  : 100/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMMON   BANK0   BANK1
  1271 ;;      Params:         0       0       0
  1272 ;;      Locals:         0       1       0
  1273 ;;      Temps:          0       0       0
  1274 ;;      Totals:         0       1       0
  1275 ;;Total ram usage:        1 bytes
  1276 ;; Hardware stack levels required when called:    7
  1277 ;; This function calls:
  1278 ;;		_ConfigureOscillator
  1279 ;;		_INC_EEPROM_MODE
  1280 ;;		_InitApp
  1281 ;;		_Initial_Start
  1282 ;;		_ReWriteEEPROM
  1283 ;;		_SetOUTPUT
  1284 ;;		_Update_Input_Mode_Type
  1285 ;; This function is called by:
  1286 ;;		Startup code after reset
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           
  1291                           ;psect for function _main
  1292  0467                     _main:	
  1293                           
  1294                           ;main.c: 507: unsigned char tempvar1;
  1295                           ;main.c: 509: ConfigureOscillator();
  1296                           
  1297                           ;incstack = 0
  1298                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1299  0467  26DD               	fcall	_ConfigureOscillator
  1300                           
  1301                           ;main.c: 511: InitApp();
  1302  0468  25BC               	fcall	_InitApp
  1303                           
  1304                           ;main.c: 512: Initial_Start();
  1305  0469  2595               	fcall	_Initial_Start
  1306                           
  1307                           ;main.c: 513: bGLOBAL_ENABLE_LEDS = 1;
  1308  046A  3001               	movlw	1
  1309  046B  00A7               	movwf	_bGLOBAL_ENABLE_LEDS	;volatile
  1310  046C                     l1710:	
  1311                           
  1312                           ;main.c: 516: {
  1313                           ;main.c: 517: if (!bGLOBAL_IS_PROGRAMMING)
  1314  046C  0828               	movf	_bGLOBAL_IS_PROGRAMMING,w	;volatile
  1315  046D  1903               	btfsc	3,2
  1316  046E  0064               	clrwdt	;# 
  1317                           
  1318                           ;main.c: 522: Update_Input_Mode_Type();
  1319  046F  2685               	fcall	_Update_Input_Mode_Type
  1320                           
  1321                           ;main.c: 523: if ((GLOBAL_SYNC_Line_counter == 9+0) && (!bGLOBAL_SYNC_Line_PRESSED))
  1322  0470  3009               	movlw	9
  1323  0471  0632               	xorwf	_GLOBAL_SYNC_Line_counter,w	;volatile
  1324  0472  1D03               	btfss	3,2
  1325  0473  2C7B               	goto	l1726
  1326  0474  0824               	movf	_bGLOBAL_SYNC_Line_PRESSED,w	;volatile
  1327  0475  1D03               	btfss	3,2
  1328  0476  2C7B               	goto	l1726
  1329                           
  1330                           ;main.c: 524: {
  1331                           ;main.c: 525: bGLOBAL_SYNC_Line_PRESSED = 1;
  1332  0477  3001               	movlw	1
  1333  0478  00A4               	movwf	_bGLOBAL_SYNC_Line_PRESSED	;volatile
  1334                           
  1335                           ;main.c: 526: bGLOBAL_ENABLE_LEDS = 0;
  1336  0479  01A7               	clrf	_bGLOBAL_ENABLE_LEDS	;volatile
  1337                           
  1338                           ;main.c: 527: SetOUTPUT();
  1339  047A  256C               	fcall	_SetOUTPUT
  1340  047B                     l1726:	
  1341                           
  1342                           ;main.c: 528: }
  1343                           ;main.c: 529: if (bGLOBAL_SYNC_Line_PRESSED && (!bGLOBAL_IS_PROGRAMMING))
  1344  047B  0824               	movf	_bGLOBAL_SYNC_Line_PRESSED,w	;volatile
  1345  047C  1903               	btfsc	3,2
  1346  047D  2CB9               	goto	l1764
  1347  047E  0828               	movf	_bGLOBAL_IS_PROGRAMMING,w	;volatile
  1348  047F  1D03               	btfss	3,2
  1349  0480  2CB9               	goto	l1764
  1350                           
  1351                           ;main.c: 530: {
  1352                           ;main.c: 531: GLOBAL_Dummy_Counter = 0;
  1353  0481  01B9               	clrf	_GLOBAL_Dummy_Counter	;volatile
  1354  0482  2C87               	goto	l275
  1355  0483                     l1732:	
  1356  0483  30C7               	movlw	199
  1357  0484  0239               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1358  0485  1803               	btfsc	3,0
  1359  0486  2C89               	goto	l1734
  1360  0487                     l275:	
  1361                           ;main.c: 532: while ((!(GPIObits.GP4)) && (GLOBAL_Dummy_Counter < 199)) {}
  1362                           
  1363  0487  1E05               	btfss	5,4	;volatile
  1364  0488  2C83               	goto	l1732
  1365  0489                     l1734:	
  1366                           
  1367                           ;main.c: 533: tempvar1 = GLOBAL_Dummy_Counter;
  1368  0489  0839               	movf	_GLOBAL_Dummy_Counter,w	;volatile
  1369  048A  00D8               	movwf	main@tempvar1
  1370  048B  0064               	clrwdt	;# 
  1371                           
  1372                           ;main.c: 535: if (tempvar1 > 198)
  1373  048C  30C7               	movlw	199
  1374  048D  1283               	bcf	3,5	;RP0=0, select bank0
  1375  048E  0258               	subwf	main@tempvar1,w
  1376  048F  1C03               	skipc
  1377  0490  2CA3               	goto	l1748
  1378                           
  1379                           ;main.c: 536: {
  1380                           ;main.c: 537: bGLOBAL_CHANGING_PATTERN = 0;
  1381  0491  01AA               	clrf	_bGLOBAL_CHANGING_PATTERN	;volatile
  1382                           
  1383                           ;main.c: 538: bGLOBAL_InPhase = !bGLOBAL_InPhase;
  1384  0492  083C               	movf	_bGLOBAL_InPhase,w	;volatile
  1385  0493  1D03               	btfss	3,2
  1386  0494  2C97               	goto	u1470
  1387  0495  3001               	movlw	1
  1388  0496  2C98               	goto	u1480
  1389  0497                     u1470:	
  1390  0497  3000               	movlw	0
  1391  0498                     u1480:	
  1392  0498  00BC               	movwf	_bGLOBAL_InPhase	;volatile
  1393                           
  1394                           ;main.c: 539: bGLOBAL_InPhase_copy[GLOBAL_Selected_Mode_Type] = bGLOBAL_InPhase;
  1395  0499  0835               	movf	_GLOBAL_Selected_Mode_Type,w
  1396  049A  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  1397  049B  0084               	movwf	4
  1398  049C  083C               	movf	_bGLOBAL_InPhase,w	;volatile
  1399  049D  1383               	bcf	3,7	;select IRP bank0
  1400  049E  0080               	movwf	0
  1401                           
  1402                           ;main.c: 540: bGLOBAL_IS_PROGRAMMING = 1;
  1403  049F  3001               	movlw	1
  1404  04A0  00A8               	movwf	_bGLOBAL_IS_PROGRAMMING	;volatile
  1405                           
  1406                           ;main.c: 541: SetOUTPUT();
  1407  04A1  256C               	fcall	_SetOUTPUT
  1408                           
  1409                           ;main.c: 542: ReWriteEEPROM();
  1410  04A2  264C               	fcall	_ReWriteEEPROM
  1411  04A3                     l1748:	
  1412                           
  1413                           ;main.c: 543: }
  1414                           ;main.c: 544: if (tempvar1 < 199)
  1415  04A3  30C7               	movlw	199
  1416  04A4  0258               	subwf	main@tempvar1,w
  1417  04A5  1803               	skipnc
  1418  04A6  2CB9               	goto	l1764
  1419                           
  1420                           ;main.c: 545: {
  1421                           ;main.c: 546: GLOBAL_Dummy_Counter = 0;
  1422  04A7  01B9               	clrf	_GLOBAL_Dummy_Counter	;volatile
  1423  04A8  2CAD               	goto	l282
  1424  04A9                     l1752:	
  1425  04A9  3002               	movlw	2
  1426  04AA  0239               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1427  04AB  1803               	btfsc	3,0
  1428  04AC  2CAF               	goto	l1754
  1429  04AD                     l282:	
  1430                           ;main.c: 547: while ((GPIObits.GP4) && GLOBAL_Dummy_Counter < 2) {}
  1431                           
  1432  04AD  1A05               	btfsc	5,4	;volatile
  1433  04AE  2CA9               	goto	l1752
  1434  04AF                     l1754:	
  1435                           
  1436                           ;main.c: 548: if (GLOBAL_Dummy_Counter > 1)
  1437  04AF  3002               	movlw	2
  1438  04B0  0239               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1439  04B1  1C03               	skipc
  1440  04B2  2CB9               	goto	l1764
  1441                           
  1442                           ;main.c: 549: {
  1443                           ;main.c: 550: bGLOBAL_CHANGING_PATTERN = 1;
  1444  04B3  3001               	movlw	1
  1445  04B4  00AA               	movwf	_bGLOBAL_CHANGING_PATTERN	;volatile
  1446                           
  1447                           ;main.c: 551: INC_EEPROM_MODE();
  1448  04B5  25E2               	fcall	_INC_EEPROM_MODE
  1449                           
  1450                           ;main.c: 552: GLOBAL_Dummy_Counter = 0;
  1451  04B6  01B9               	clrf	_GLOBAL_Dummy_Counter	;volatile
  1452                           
  1453                           ;main.c: 553: bGLOBAL_IS_PROGRAMMING = 1;
  1454  04B7  3001               	movlw	1
  1455  04B8  00A8               	movwf	_bGLOBAL_IS_PROGRAMMING	;volatile
  1456  04B9                     l1764:	
  1457                           
  1458                           ;main.c: 554: }
  1459                           ;main.c: 555: }
  1460                           ;main.c: 556: }
  1461                           ;main.c: 558: if (((GLOBAL_SYNC_Line_LOW_counter > 3) || (GLOBAL_Dummy_Counter > 4)) && 
      +                          (!bGLOBAL_CHANGING_PATTERN_Enforce) && bGLOBAL_CHANGING_PATTERN)
  1462  04B9  3004               	movlw	4
  1463  04BA  022F               	subwf	_GLOBAL_SYNC_Line_LOW_counter,w	;volatile
  1464  04BB  1803               	skipnc
  1465  04BC  2CC1               	goto	l1768
  1466  04BD  3005               	movlw	5
  1467  04BE  0239               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1468  04BF  1C03               	skipc
  1469  04C0  2CCB               	goto	l1778
  1470  04C1                     l1768:	
  1471  04C1  0829               	movf	_bGLOBAL_CHANGING_PATTERN_Enforce,w	;volatile
  1472  04C2  1D03               	btfss	3,2
  1473  04C3  2CCB               	goto	l1778
  1474  04C4  082A               	movf	_bGLOBAL_CHANGING_PATTERN,w	;volatile
  1475  04C5  1903               	btfsc	3,2
  1476  04C6  2CCB               	goto	l1778
  1477                           
  1478                           ;main.c: 559: {
  1479                           ;main.c: 560: bGLOBAL_CHANGING_PATTERN_Enforce = 1;
  1480  04C7  3001               	movlw	1
  1481  04C8  00A9               	movwf	_bGLOBAL_CHANGING_PATTERN_Enforce	;volatile
  1482                           
  1483                           ;main.c: 561: GLOBAL_Dummy_Counter = 0;
  1484  04C9  01B9               	clrf	_GLOBAL_Dummy_Counter	;volatile
  1485                           
  1486                           ;main.c: 562: (GPIObits.GP5) = 1;
  1487  04CA  1685               	bsf	5,5	;volatile
  1488  04CB                     l1778:	
  1489                           
  1490                           ;main.c: 563: }
  1491                           ;main.c: 565: if (bGLOBAL_CHANGING_PATTERN_Enforce && (GLOBAL_Dummy_Counter > 12))
  1492  04CB  0829               	movf	_bGLOBAL_CHANGING_PATTERN_Enforce,w	;volatile
  1493  04CC  1903               	btfsc	3,2
  1494  04CD  2CD6               	goto	l1788
  1495  04CE  300D               	movlw	13
  1496  04CF  0239               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1497  04D0  1C03               	skipc
  1498  04D1  2CD6               	goto	l1788
  1499                           
  1500                           ;main.c: 566: {
  1501                           ;main.c: 567: GLOBAL_Dummy_Counter = 0;
  1502  04D2  01B9               	clrf	_GLOBAL_Dummy_Counter	;volatile
  1503                           
  1504                           ;main.c: 568: bGLOBAL_DISABLE_SYNC_Line_PRESSED = 1;
  1505  04D3  3001               	movlw	1
  1506  04D4  00AB               	movwf	_bGLOBAL_DISABLE_SYNC_Line_PRESSED	;volatile
  1507                           
  1508                           ;main.c: 569: (GPIObits.GP5) = 0;
  1509  04D5  1285               	bcf	5,5	;volatile
  1510  04D6                     l1788:	
  1511                           
  1512                           ;main.c: 570: }
  1513                           ;main.c: 572: if (bGLOBAL_DISABLE_SYNC_Line_PRESSED)
  1514  04D6  082B               	movf	_bGLOBAL_DISABLE_SYNC_Line_PRESSED,w	;volatile
  1515  04D7  1903               	btfsc	3,2
  1516  04D8  2CE1               	goto	l1798
  1517                           
  1518                           ;main.c: 573: {
  1519                           ;main.c: 574: if (!(GPIObits.GP4))
  1520  04D9  1A05               	btfsc	5,4	;volatile
  1521  04DA  2CDD               	goto	l1794
  1522                           
  1523                           ;main.c: 575: {
  1524                           ;main.c: 576: GLOBAL_Dummy_Counter = 0;
  1525  04DB  01B9               	clrf	_GLOBAL_Dummy_Counter	;volatile
  1526                           
  1527                           ;main.c: 577: GLOBAL_SYNC_Line_counter = 0;
  1528  04DC  01B2               	clrf	_GLOBAL_SYNC_Line_counter	;volatile
  1529  04DD                     l1794:	
  1530                           
  1531                           ;main.c: 578: }
  1532                           ;main.c: 579: if (GLOBAL_Dummy_Counter > 7 + 3)
  1533  04DD  300B               	movlw	11
  1534  04DE  0239               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1535  04DF  1803               	btfsc	3,0
  1536                           
  1537                           ;main.c: 580: bGLOBAL_DISABLE_SYNC_Line_PRESSED = 0;
  1538  04E0  01AB               	clrf	_bGLOBAL_DISABLE_SYNC_Line_PRESSED	;volatile
  1539  04E1                     l1798:	
  1540                           
  1541                           ;main.c: 581: }
  1542                           ;main.c: 583: if (!bGLOBAL_SYNC_Line_PRESSED)
  1543  04E1  0824               	movf	_bGLOBAL_SYNC_Line_PRESSED,w	;volatile
  1544  04E2  1D03               	btfss	3,2
  1545  04E3  2C6C               	goto	l1710
  1546                           
  1547                           ;main.c: 584: {
  1548                           ;main.c: 585: bGLOBAL_ENABLE_LEDS = 1;
  1549  04E4  3001               	movlw	1
  1550  04E5  00A7               	movwf	_bGLOBAL_ENABLE_LEDS	;volatile
  1551                           
  1552                           ;main.c: 586: bGLOBAL_CHANGING_PATTERN = 0;
  1553  04E6  01AA               	clrf	_bGLOBAL_CHANGING_PATTERN	;volatile
  1554                           
  1555                           ;main.c: 587: bGLOBAL_CHANGING_PATTERN_Enforce = 0;
  1556  04E7  01A9               	clrf	_bGLOBAL_CHANGING_PATTERN_Enforce	;volatile
  1557                           
  1558                           ;main.c: 588: bGLOBAL_IS_PROGRAMMING = 0;
  1559  04E8  01A8               	clrf	_bGLOBAL_IS_PROGRAMMING	;volatile
  1560  04E9  2C6C               	goto	l1710
  1561  04EA                     __end_of_main:	
  1562                           
  1563                           	psect	text1
  1564  056C                     __ptext1:	
  1565 ;; *************** function _SetOUTPUT *****************
  1566 ;; Defined at:
  1567 ;;		line 306 in file "main.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  temporaryGPI    1   11[BANK0 ] unsigned char 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0
  1576 ;; Tracked objects:
  1577 ;;		On entry : 900/0
  1578 ;;		On exit  : 900/0
  1579 ;;		Unchanged: 800/0
  1580 ;; Data sizes:     COMMON   BANK0   BANK1
  1581 ;;      Params:         0       0       0
  1582 ;;      Locals:         0       1       0
  1583 ;;      Temps:          0       1       0
  1584 ;;      Totals:         0       2       0
  1585 ;;Total ram usage:        2 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    2
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_main
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           
  1596                           ;psect for function _SetOUTPUT
  1597  056C                     _SetOUTPUT:	
  1598                           
  1599                           ;main.c: 310: if (bGLOBAL_ENABLE_LEDS)
  1600                           
  1601                           ;incstack = 0
  1602                           ; Regs used in _SetOUTPUT: [wreg+status,2+status,0]
  1603  056C  0827               	movf	_bGLOBAL_ENABLE_LEDS,w	;volatile
  1604  056D  1903               	btfsc	3,2
  1605  056E  2D84               	goto	l1396
  1606                           
  1607                           ;main.c: 311: {
  1608                           ;main.c: 312: temporaryGPIO = OUTPUT_BUFFER & GLOBAL_CHANNELS_EN;
  1609  056F  087B               	movf	_OUTPUT_BUFFER,w	;volatile
  1610  0570  00CF               	movwf	SetOUTPUT@temporaryGPIO
  1611  0571  082D               	movf	_GLOBAL_CHANNELS_EN,w	;volatile
  1612  0572  05CF               	andwf	SetOUTPUT@temporaryGPIO,f
  1613                           
  1614                           ;main.c: 314: if((temporaryGPIO & 0x03) == 0x01 || (temporaryGPIO & 0x03) == 0x02)
  1615  0573  3003               	movlw	3
  1616  0574  054F               	andwf	SetOUTPUT@temporaryGPIO,w
  1617  0575  00CE               	movwf	??_SetOUTPUT
  1618  0576  034E               	decf	??_SetOUTPUT,w
  1619  0577  3003               	movlw	3
  1620  0578  1903               	btfsc	3,2
  1621  0579  2D80               	goto	L1
  1622  057A  054F               	andwf	SetOUTPUT@temporaryGPIO,w
  1623  057B  00CE               	movwf	??_SetOUTPUT
  1624  057C  3A02               	xorlw	2
  1625  057D  1D03               	btfss	3,2
  1626  057E  2D81               	goto	l1394
  1627                           
  1628                           ;main.c: 315: temporaryGPIO ^= 0x03;
  1629  057F  3003               	movlw	3
  1630  0580                     L1:	
  1631  0580  06CF               	xorwf	SetOUTPUT@temporaryGPIO,f
  1632  0581                     l1394:	
  1633                           
  1634                           ;main.c: 317: GPIO = temporaryGPIO;
  1635  0581  084F               	movf	SetOUTPUT@temporaryGPIO,w
  1636  0582  0085               	movwf	5	;volatile
  1637                           
  1638                           ;main.c: 318: }
  1639  0583  0008               	return
  1640  0584                     l1396:	
  1641                           
  1642                           ;main.c: 319: else
  1643                           ;main.c: 320: {
  1644                           ;main.c: 321: if (bGLOBAL_IS_PROGRAMMING)
  1645  0584  0828               	movf	_bGLOBAL_IS_PROGRAMMING,w	;volatile
  1646  0585  1903               	btfsc	3,2
  1647  0586  2D93               	goto	l1406
  1648                           
  1649                           ;main.c: 322: {
  1650                           ;main.c: 323: if (!bGLOBAL_CHANGING_PATTERN)
  1651  0587  082A               	movf	_bGLOBAL_CHANGING_PATTERN,w	;volatile
  1652  0588  1D03               	btfss	3,2
  1653  0589  0008               	return
  1654                           
  1655                           ;main.c: 324: {
  1656                           ;main.c: 325: if (bGLOBAL_InPhase)
  1657  058A  083C               	movf	_bGLOBAL_InPhase,w	;volatile
  1658  058B  1903               	btfsc	3,2
  1659  058C  2D90               	goto	l1404
  1660                           
  1661                           ;main.c: 326: GPIO = 0x23;
  1662  058D  3023               	movlw	35
  1663  058E  0085               	movwf	5	;volatile
  1664  058F  0008               	return
  1665  0590                     l1404:	
  1666                           
  1667                           ;main.c: 327: else
  1668                           ;main.c: 328: GPIO = 0x21;
  1669  0590  3021               	movlw	33
  1670  0591  0085               	movwf	5	;volatile
  1671  0592  0008               	return
  1672  0593                     l1406:	
  1673                           
  1674                           ;main.c: 331: {
  1675                           ;main.c: 332: GPIO = 0;
  1676  0593  0185               	clrf	5	;volatile
  1677  0594  0008               	return
  1678  0595                     __end_of_SetOUTPUT:	
  1679                           
  1680                           	psect	text2
  1681  0595                     __ptext2:	
  1682 ;; *************** function _Initial_Start *****************
  1683 ;; Defined at:
  1684 ;;		line 487 in file "main.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;		None
  1687 ;; Auto vars:     Size  Location     Type
  1688 ;;  i               1   19[BANK0 ] unsigned char 
  1689 ;;  read_data       1   18[BANK0 ] unsigned char 
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1694 ;; Tracked objects:
  1695 ;;		On entry : 100/0
  1696 ;;		On exit  : 900/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMMON   BANK0   BANK1
  1699 ;;      Params:         0       0       0
  1700 ;;      Locals:         0       2       0
  1701 ;;      Temps:          0       1       0
  1702 ;;      Totals:         0       3       0
  1703 ;;Total ram usage:        3 bytes
  1704 ;; Hardware stack levels used:    1
  1705 ;; Hardware stack levels required when called:    6
  1706 ;; This function calls:
  1707 ;;		_Update_ComboPattern_Index
  1708 ;;		_Update_Input_Mode_Type
  1709 ;;		_WriteEEPROMDefaults
  1710 ;;		___eetoc
  1711 ;; This function is called by:
  1712 ;;		_main
  1713 ;; This function uses a non-reentrant model
  1714 ;;
  1715                           
  1716                           
  1717                           ;psect for function _Initial_Start
  1718  0595                     _Initial_Start:	
  1719                           
  1720                           ;main.c: 489: unsigned char read_data;
  1721                           ;main.c: 490: read_data = EEprom_Written_Flag;
  1722                           
  1723                           ;incstack = 0
  1724                           ; Regs used in _Initial_Start: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1725  0595  3004               	movlw	(low _EEprom_Written_Flag)& (0+255)
  1726  0596  26CE               	fcall	___eetoc
  1727  0597  00D6               	movwf	Initial_Start@read_data
  1728                           
  1729                           ;main.c: 491: if (read_data ^ 0xA6)
  1730  0598  3AA6               	xorlw	166
  1731  0599  1903               	btfsc	3,2
  1732  059A  2D9C               	goto	l1470
  1733                           
  1734                           ;main.c: 492: WriteEEPROMDefaults();
  1735  059B  26AF               	fcall	_WriteEEPROMDefaults
  1736  059C                     l1470:	
  1737                           
  1738                           ;main.c: 493: for (unsigned char i=0;i<2;i++)
  1739  059C  01D7               	clrf	Initial_Start@i
  1740  059D                     l1476:	
  1741                           
  1742                           ;main.c: 494: {
  1743                           ;main.c: 495: GLOBAL_Mode_copy[i] = EEprom_mode[i];
  1744  059D  0857               	movf	Initial_Start@i,w
  1745  059E  3E02               	addlw	low _EEprom_mode
  1746  059F  26CE               	fcall	___eetoc
  1747  05A0  00D5               	movwf	??_Initial_Start
  1748  05A1  0857               	movf	Initial_Start@i,w
  1749  05A2  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  1750  05A3  0084               	movwf	4
  1751  05A4  0855               	movf	??_Initial_Start,w
  1752  05A5  1383               	bcf	3,7	;select IRP bank0
  1753  05A6  0080               	movwf	0
  1754                           
  1755                           ;main.c: 496: bGLOBAL_InPhase_copy[i] = EEprom_InPhase[i];
  1756  05A7  0857               	movf	Initial_Start@i,w
  1757  05A8  3E00               	addlw	low _EEprom_InPhase
  1758  05A9  26CE               	fcall	___eetoc
  1759  05AA  00D5               	movwf	??_Initial_Start
  1760  05AB  0857               	movf	Initial_Start@i,w
  1761  05AC  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  1762  05AD  0084               	movwf	4
  1763  05AE  0855               	movf	??_Initial_Start,w
  1764  05AF  1383               	bcf	3,7	;select IRP bank0
  1765  05B0  0080               	movwf	0
  1766  05B1  3002               	movlw	2
  1767  05B2  0AD7               	incf	Initial_Start@i,f
  1768  05B3  0257               	subwf	Initial_Start@i,w
  1769  05B4  1C03               	skipc
  1770  05B5  2D9D               	goto	l1476
  1771  05B6                     l1482:	
  1772  05B6  3005               	movlw	5
  1773  05B7  0239               	subwf	_GLOBAL_Dummy_Counter,w	;volatile
  1774  05B8  1C03               	skipc
  1775  05B9  2DB6               	goto	l1482
  1776                           
  1777                           ;main.c: 499: Update_Input_Mode_Type();
  1778  05BA  2685               	fcall	_Update_Input_Mode_Type
  1779                           
  1780                           ;main.c: 500: Update_ComboPattern_Index();
  1781  05BB  2E9A               	ljmp	l1326
  1782  05BC                     __end_of_Initial_Start:	
  1783                           
  1784                           	psect	text3
  1785  06AF                     __ptext3:	
  1786 ;; *************** function _WriteEEPROMDefaults *****************
  1787 ;; Defined at:
  1788 ;;		line 349 in file "main.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;		None
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;		None
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : 100/0
  1799 ;;		On exit  : 100/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMMON   BANK0   BANK1
  1802 ;;      Params:         0       0       0
  1803 ;;      Locals:         0       0       0
  1804 ;;      Temps:          0       0       0
  1805 ;;      Totals:         0       0       0
  1806 ;;Total ram usage:        0 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    5
  1809 ;; This function calls:
  1810 ;;		_ReWriteEEPROM
  1811 ;;		___eetoc
  1812 ;; This function is called by:
  1813 ;;		_Initial_Start
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           
  1818                           ;psect for function _WriteEEPROMDefaults
  1819  06AF                     _WriteEEPROMDefaults:	
  1820                           
  1821                           ;main.c: 351: GLOBAL_Mode_copy[0] = 0;
  1822                           
  1823                           ;incstack = 0
  1824                           ; Regs used in _WriteEEPROMDefaults: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1825  06AF  01A2               	clrf	_GLOBAL_Mode_copy	;volatile
  1826                           
  1827                           ;main.c: 352: GLOBAL_Mode_copy[1] = 18;
  1828  06B0  3012               	movlw	18
  1829  06B1  00A3               	movwf	_GLOBAL_Mode_copy+1	;volatile
  1830                           
  1831                           ;main.c: 354: bGLOBAL_InPhase_copy[0] = 1;
  1832  06B2  3001               	movlw	1
  1833  06B3  00A0               	movwf	_bGLOBAL_InPhase_copy	;volatile
  1834                           
  1835                           ;main.c: 355: bGLOBAL_InPhase_copy[1] = 1;
  1836  06B4  00A1               	movwf	_bGLOBAL_InPhase_copy+1	;volatile
  1837                           
  1838                           ;main.c: 358: ReWriteEEPROM();
  1839  06B5  264C               	fcall	_ReWriteEEPROM
  1840                           
  1841                           ;main.c: 360: if (EEprom_Written_Flag != 0xA6)
  1842  06B6  3004               	movlw	(low _EEprom_Written_Flag)& (0+255)
  1843  06B7  26CE               	fcall	___eetoc
  1844  06B8  3AA6               	xorlw	166
  1845  06B9  1903               	skipnz
  1846  06BA  0008               	return
  1847  06BB                     l217:	
  1848                           ;main.c: 361: while (1) {}
  1849                           
  1850  06BB  2EBB               	goto	l217
  1851  06BC                     __end_of_WriteEEPROMDefaults:	
  1852                           
  1853                           	psect	text4
  1854  06CE                     __ptext4:	
  1855 ;; *************** function ___eetoc *****************
  1856 ;; Defined at:
  1857 ;;		line 96 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eeprom.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;  addr            1    wreg     PTR eeprom void 
  1860 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  addr            1   14[BANK0 ] PTR eeprom void 
  1863 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  1864 ;;  data            1   15[BANK0 ] unsigned char 
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      unsigned char 
  1867 ;; Registers used:
  1868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1869 ;; Tracked objects:
  1870 ;;		On entry : 100/0
  1871 ;;		On exit  : 100/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0   BANK1
  1874 ;;      Params:         0       0       0
  1875 ;;      Locals:         0       2       0
  1876 ;;      Temps:          0       0       0
  1877 ;;      Totals:         0       2       0
  1878 ;;Total ram usage:        2 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; Hardware stack levels required when called:    3
  1881 ;; This function calls:
  1882 ;;		_eecpymem
  1883 ;; This function is called by:
  1884 ;;		_WriteEEPROMDefaults
  1885 ;;		_Initial_Start
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           
  1890                           ;psect for function ___eetoc
  1891  06CE                     ___eetoc:	
  1892                           
  1893                           ;incstack = 0
  1894                           ; Regs used in ___eetoc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1895                           ;___eetoc@addr stored from wreg
  1896  06CE  00D2               	movwf	___eetoc@addr
  1897  06CF  00CE               	movwf	eecpymem@from
  1898  06D0  3053               	movlw	(low (___eetoc@data| 0))& (0+255)
  1899  06D1  01CF               	clrf	eecpymem@size
  1900  06D2  0ACF               	incf	eecpymem@size,f
  1901  06D3  262C               	fcall	_eecpymem
  1902  06D4  0853               	movf	___eetoc@data,w
  1903  06D5  0008               	return
  1904  06D6                     __end_of___eetoc:	
  1905                           
  1906                           	psect	text5
  1907  062C                     __ptext5:	
  1908 ;; *************** function _eecpymem *****************
  1909 ;; Defined at:
  1910 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eeprom.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  to              1    wreg     PTR volatile unsigned ch
  1913 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetol@data(4), __eetom@data(3), 
  1914 ;;		 -> __eetoi@data(2), __eetoc@data(1), 
  1915 ;;  from            1   10[BANK0 ] PTR eeprom unsigned char
  1916 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  1917 ;;  size            1   11[BANK0 ] unsigned char 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  to              1   13[BANK0 ] PTR volatile unsigned ch
  1920 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetol@data(4), __eetom@data(3), 
  1921 ;;		 -> __eetoi@data(2), __eetoc@data(1), 
  1922 ;;  cp              1   12[BANK0 ] PTR volatile unsigned ch
  1923 ;;		 -> __eetofl@data(3), __eetoft@data(3), __eetol@data(4), __eetom@data(3), 
  1924 ;;		 -> __eetoi@data(2), __eetoc@data(1), 
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1929 ;; Tracked objects:
  1930 ;;		On entry : 100/0
  1931 ;;		On exit  : 100/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1
  1934 ;;      Params:         0       2       0
  1935 ;;      Locals:         0       2       0
  1936 ;;      Temps:          0       0       0
  1937 ;;      Totals:         0       4       0
  1938 ;;Total ram usage:        4 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; Hardware stack levels required when called:    2
  1941 ;; This function calls:
  1942 ;;		Nothing
  1943 ;; This function is called by:
  1944 ;;		___eetoc
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           
  1949                           ;psect for function _eecpymem
  1950  062C                     _eecpymem:	
  1951                           
  1952                           ;incstack = 0
  1953                           ; Regs used in _eecpymem: [wreg-fsr0h+status,2+status,0]
  1954                           ;eecpymem@to stored from wreg
  1955  062C  00D1               	movwf	eecpymem@to
  1956  062D  0851               	movf	eecpymem@to,w
  1957  062E  00D0               	movwf	eecpymem@cp
  1958  062F                     l360:	
  1959  062F  1683               	bsf	3,5	;RP0=1, select bank1
  1960  0630  189C               	btfsc	28,1	;volsfr
  1961  0631  2E2F               	goto	l360
  1962  0632  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0633  084E               	movf	eecpymem@from,w
  1964  0634  1683               	bsf	3,5	;RP0=1, select bank1
  1965  0635  009B               	movwf	27	;volatile
  1966  0636                     l1304:	
  1967  0636  1283               	bcf	3,5	;RP0=0, select bank0
  1968  0637  03CF               	decf	eecpymem@size,f
  1969  0638  0F4F               	incfsz	eecpymem@size,w
  1970  0639  2E3B               	goto	l365
  1971  063A  0008               	return
  1972  063B                     l365:	
  1973  063B  1683               	bsf	3,5	;RP0=1, select bank1
  1974  063C  189C               	btfsc	28,1	;volsfr
  1975  063D  2E3B               	goto	l365
  1976  063E  139C               	bcf	28,7	;volsfr
  1977  063F  141C               	bsf	28,0	;volsfr
  1978  0640  1283               	bcf	3,5	;RP0=0, select bank0
  1979  0641  0850               	movf	eecpymem@cp,w
  1980  0642  0084               	movwf	4
  1981  0643  1683               	bsf	3,5	;RP0=1, select bank1
  1982  0644  081A               	movf	26,w	;volatile
  1983  0645  1383               	bcf	3,7	;select IRP bank0
  1984  0646  0080               	movwf	0
  1985  0647  1283               	bcf	3,5	;RP0=0, select bank0
  1986  0648  0AD0               	incf	eecpymem@cp,f
  1987  0649  1683               	bsf	3,5	;RP0=1, select bank1
  1988  064A  0A9B               	incf	27,f	;volatile
  1989  064B  2E36               	goto	l1304
  1990  064C                     __end_of_eecpymem:	
  1991                           
  1992                           	psect	text6
  1993  0685                     __ptext6:	
  1994 ;; *************** function _Update_Input_Mode_Type *****************
  1995 ;; Defined at:
  1996 ;;		line 474 in file "main.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;		None
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;		None
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 900/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMMON   BANK0   BANK1
  2010 ;;      Params:         0       0       0
  2011 ;;      Locals:         0       0       0
  2012 ;;      Temps:          0       0       0
  2013 ;;      Totals:         0       0       0
  2014 ;;Total ram usage:        0 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    3
  2017 ;; This function calls:
  2018 ;;		_Update_ComboPattern_Index
  2019 ;; This function is called by:
  2020 ;;		_Initial_Start
  2021 ;;		_main
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           
  2026                           ;psect for function _Update_Input_Mode_Type
  2027  0685                     _Update_Input_Mode_Type:	
  2028                           
  2029                           ;main.c: 476: GLOBAL_Selected_Mode_Type = 0;
  2030                           
  2031                           ;incstack = 0
  2032                           ; Regs used in _Update_Input_Mode_Type: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2033  0685  1283               	bcf	3,5	;RP0=0, select bank0
  2034  0686  01B5               	clrf	_GLOBAL_Selected_Mode_Type	;volatile
  2035                           
  2036                           ;main.c: 477: if (bGLOBAL_MODE1_PRESSED)
  2037  0687  0826               	movf	_bGLOBAL_MODE1_PRESSED,w	;volatile
  2038  0688  1903               	btfsc	3,2
  2039  0689  2E8C               	goto	l255
  2040                           
  2041                           ;main.c: 478: GLOBAL_Selected_Mode_Type = 1;
  2042  068A  3001               	movlw	1
  2043  068B  00B5               	movwf	_GLOBAL_Selected_Mode_Type	;volatile
  2044  068C                     l255:	
  2045                           
  2046                           ;main.c: 481: if (GLOBAL_Selected_Mode_Type_copy != GLOBAL_Selected_Mode_Type)
  2047  068C  0834               	movf	_GLOBAL_Selected_Mode_Type_copy,w	;volatile
  2048  068D  0635               	xorwf	_GLOBAL_Selected_Mode_Type,w	;volatile
  2049  068E  1903               	skipnz
  2050  068F  2E91               	goto	l1376
  2051                           
  2052                           ;main.c: 482: Update_ComboPattern_Index();
  2053  0690  269A               	fcall	_Update_ComboPattern_Index
  2054  0691                     l1376:	
  2055                           
  2056                           ;main.c: 483: bGLOBAL_InPhase = bGLOBAL_InPhase_copy[GLOBAL_Selected_Mode_Type];
  2057  0691  0835               	movf	_GLOBAL_Selected_Mode_Type,w
  2058  0692  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  2059  0693  0084               	movwf	4
  2060  0694  1383               	bcf	3,7	;select IRP bank0
  2061  0695  0800               	movf	0,w
  2062  0696  00BC               	movwf	_bGLOBAL_InPhase	;volatile
  2063                           
  2064                           ;main.c: 484: GLOBAL_Selected_Mode_Type_copy = GLOBAL_Selected_Mode_Type;
  2065  0697  0835               	movf	_GLOBAL_Selected_Mode_Type,w	;volatile
  2066  0698  00B4               	movwf	_GLOBAL_Selected_Mode_Type_copy	;volatile
  2067  0699  0008               	return
  2068  069A                     __end_of_Update_Input_Mode_Type:	
  2069                           
  2070                           	psect	text7
  2071  05BC                     __ptext7:	
  2072 ;; *************** function _InitApp *****************
  2073 ;; Defined at:
  2074 ;;		line 22 in file "user.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;		None
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0, pclath, cstack
  2083 ;; Tracked objects:
  2084 ;;		On entry : B00/100
  2085 ;;		On exit  : 100/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMMON   BANK0   BANK1
  2088 ;;      Params:         0       0       0
  2089 ;;      Locals:         0       0       0
  2090 ;;      Temps:          0       0       0
  2091 ;;      Totals:         0       0       0
  2092 ;;Total ram usage:        0 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    3
  2095 ;; This function calls:
  2096 ;;		_WaitForSYNC_PU
  2097 ;; This function is called by:
  2098 ;;		_main
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           
  2103                           ;psect for function _InitApp
  2104  05BC                     _InitApp:	
  2105                           
  2106                           ;user.c: 32: WDTCON = 0x17;
  2107                           
  2108                           ;incstack = 0
  2109                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
  2110  05BC  3017               	movlw	23
  2111  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  2112  05BE  0098               	movwf	24	;volatile
  2113                           
  2114                           ;user.c: 33: OPTION_REGbits.nGPPU = 0;
  2115  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  2116  05C0  1381               	bcf	1,7	;volatile
  2117                           
  2118                           ;user.c: 34: WPU = 0x10;
  2119  05C1  3010               	movlw	16
  2120  05C2  0095               	movwf	21	;volatile
  2121                           
  2122                           ;user.c: 35: GPIO = 0;
  2123  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  2124  05C4  0185               	clrf	5	;volatile
  2125                           
  2126                           ;user.c: 36: CMCON0 = 0x07;
  2127  05C5  3007               	movlw	7
  2128  05C6  0099               	movwf	25	;volatile
  2129                           
  2130                           ;user.c: 37: ANSEL = 0;
  2131  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  2132  05C8  019F               	clrf	31	;volatile
  2133                           
  2134                           ;user.c: 38: TRISIO = ~(0x1 + 0x2 + 0x20);
  2135  05C9  30DC               	movlw	220
  2136  05CA  0085               	movwf	5	;volatile
  2137                           
  2138                           ;user.c: 39: bGLOBAL_ENABLE_LEDS = 0;
  2139  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  2140  05CC  01A7               	clrf	_bGLOBAL_ENABLE_LEDS	;volatile
  2141                           
  2142                           ;user.c: 41: OPTION_REGbits.T0CS = 0;
  2143  05CD  1683               	bsf	3,5	;RP0=1, select bank1
  2144  05CE  1281               	bcf	1,5	;volatile
  2145                           
  2146                           ;user.c: 42: OPTION_REGbits.PS = 0x7;
  2147  05CF  3007               	movlw	7
  2148  05D0  0481               	iorwf	1,f	;volatile
  2149                           
  2150                           ;user.c: 43: OPTION_REGbits.PSA = 0;
  2151  05D1  1181               	bcf	1,3	;volatile
  2152  05D2  0064               	clrwdt	;# 
  2153                           
  2154                           ;user.c: 47: WaitForSYNC_PU();
  2155  05D3  26BC               	fcall	_WaitForSYNC_PU
  2156                           
  2157                           ;user.c: 48: WPU = 0x00;
  2158  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  2159  05D5  0195               	clrf	21	;volatile
  2160                           
  2161                           ;user.c: 49: TRISIObits.TRISIO4 = 0;
  2162  05D6  1205               	bcf	5,4	;volatile
  2163                           
  2164                           ;user.c: 50: GPIO = 0;
  2165  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  2166  05D8  0185               	clrf	5	;volatile
  2167                           
  2168                           ;user.c: 51: TRISIObits.TRISIO4 = 1;
  2169  05D9  1683               	bsf	3,5	;RP0=1, select bank1
  2170  05DA  1605               	bsf	5,4	;volatile
  2171                           
  2172                           ;user.c: 52: WaitForSYNC_PU();
  2173  05DB  26BC               	fcall	_WaitForSYNC_PU
  2174                           
  2175                           ;user.c: 53: TMR0 = 178;
  2176  05DC  30B2               	movlw	178
  2177  05DD  0081               	movwf	1	;volatile
  2178                           
  2179                           ;user.c: 54: INTCONbits.TMR0IF = 0;
  2180  05DE  110B               	bcf	11,2	;volatile
  2181                           
  2182                           ;user.c: 55: INTCON = 0x20 + 0x80;
  2183  05DF  30A0               	movlw	160
  2184  05E0  008B               	movwf	11	;volatile
  2185  05E1  0008               	return
  2186  05E2                     __end_of_InitApp:	
  2187                           
  2188                           	psect	text8
  2189  06BC                     __ptext8:	
  2190 ;; *************** function _WaitForSYNC_PU *****************
  2191 ;; Defined at:
  2192 ;;		line 337 in file "main.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  temp001         1   10[BANK0 ] unsigned char 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/100
  2203 ;;		On exit  : 100/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1
  2206 ;;      Params:         0       0       0
  2207 ;;      Locals:         0       1       0
  2208 ;;      Temps:          0       0       0
  2209 ;;      Totals:         0       1       0
  2210 ;;Total ram usage:        1 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    2
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_InitApp
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           
  2221                           ;psect for function _WaitForSYNC_PU
  2222  06BC                     _WaitForSYNC_PU:	
  2223  06BC                     l1348:	
  2224                           ;incstack = 0
  2225                           ; Regs used in _WaitForSYNC_PU: [wreg+status,2+status,0]
  2226                           
  2227                           
  2228                           ;main.c: 339: unsigned char temp001 = 0;
  2229  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  2230  06BD  01CE               	clrf	WaitForSYNC_PU@temp001
  2231  06BE                     l1354:	
  2232                           ;main.c: 340: while(temp001 < 250)
  2233                           
  2234  06BE  30FA               	movlw	250
  2235  06BF  024E               	subwf	WaitForSYNC_PU@temp001,w
  2236  06C0  1803               	btfsc	3,0
  2237  06C1  0008               	return
  2238                           
  2239                           ;main.c: 341: {
  2240                           ;main.c: 342: if ((GPIObits.GP4))
  2241  06C2  1E05               	btfss	5,4	;volatile
  2242  06C3  2EBC               	goto	l1348
  2243                           
  2244                           ;main.c: 343: temp001++;
  2245  06C4  0ACE               	incf	WaitForSYNC_PU@temp001,f
  2246  06C5  2EBE               	goto	l1354
  2247  06C6                     __end_of_WaitForSYNC_PU:	
  2248                           
  2249                           	psect	text9
  2250  05E2                     __ptext9:	
  2251 ;; *************** function _INC_EEPROM_MODE *****************
  2252 ;; Defined at:
  2253 ;;		line 375 in file "main.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  Temp_Mode_Da    1   17[BANK0 ] unsigned char 
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 100/0
  2264 ;;		On exit  : 900/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1
  2267 ;;      Params:         0       0       0
  2268 ;;      Locals:         0       1       0
  2269 ;;      Temps:          0       0       0
  2270 ;;      Totals:         0       1       0
  2271 ;;Total ram usage:        1 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    5
  2274 ;; This function calls:
  2275 ;;		_ReWriteEEPROM
  2276 ;;		_Update_ComboPattern_Index
  2277 ;; This function is called by:
  2278 ;;		_main
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           
  2283                           ;psect for function _INC_EEPROM_MODE
  2284  05E2                     _INC_EEPROM_MODE:	
  2285                           
  2286                           ;main.c: 377: unsigned char Temp_Mode_Data;
  2287                           ;main.c: 378: Temp_Mode_Data = GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type];
  2288                           
  2289                           ;incstack = 0
  2290                           ; Regs used in _INC_EEPROM_MODE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2291  05E2  0835               	movf	_GLOBAL_Selected_Mode_Type,w
  2292  05E3  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2293  05E4  0084               	movwf	4
  2294  05E5  1383               	bcf	3,7	;select IRP bank0
  2295  05E6  0800               	movf	0,w
  2296  05E7  00D5               	movwf	INC_EEPROM_MODE@Temp_Mode_Data
  2297                           
  2298                           ;main.c: 386: if (GLOBAL_Selected_Mode_Type == 1)
  2299  05E8  0B35               	decfsz	_GLOBAL_Selected_Mode_Type,w	;volatile
  2300  05E9  2DF6               	goto	l1452
  2301                           
  2302                           ;main.c: 387: {
  2303                           ;main.c: 388: if (Temp_Mode_Data < (14 - 1))
  2304  05EA  300D               	movlw	13
  2305  05EB  0255               	subwf	INC_EEPROM_MODE@Temp_Mode_Data,w
  2306                           
  2307                           ;main.c: 389: GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type]++;
  2308  05EC  0835               	movf	_GLOBAL_Selected_Mode_Type,w
  2309  05ED  1803               	skipnc
  2310  05EE  2DF3               	goto	L2
  2311  05EF  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2312  05F0  0084               	movwf	4
  2313  05F1  0A80               	incf	0,f
  2314  05F2  2DF6               	goto	l1452
  2315  05F3                     L2:	
  2316                           ;main.c: 390: else GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type] = 0;
  2317                           
  2318  05F3  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2319  05F4  0084               	movwf	4
  2320  05F5  0180               	clrf	0
  2321  05F6                     l1452:	
  2322                           
  2323                           ;main.c: 391: }
  2324                           ;main.c: 392: if (GLOBAL_Selected_Mode_Type == 0)
  2325  05F6  0835               	movf	_GLOBAL_Selected_Mode_Type,w	;volatile
  2326  05F7  1D03               	btfss	3,2
  2327  05F8  2E05               	goto	l1460
  2328                           
  2329                           ;main.c: 393: {
  2330                           ;main.c: 394: if (Temp_Mode_Data < (14 - 1))
  2331  05F9  300D               	movlw	13
  2332  05FA  0255               	subwf	INC_EEPROM_MODE@Temp_Mode_Data,w
  2333                           
  2334                           ;main.c: 395: GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type]++;
  2335  05FB  0835               	movf	_GLOBAL_Selected_Mode_Type,w
  2336  05FC  1803               	skipnc
  2337  05FD  2E02               	goto	L3
  2338  05FE  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2339  05FF  0084               	movwf	4
  2340  0600  0A80               	incf	0,f
  2341  0601  2E05               	goto	l1460
  2342  0602                     L3:	
  2343                           ;main.c: 396: else GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type] = 0;
  2344                           
  2345  0602  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2346  0603  0084               	movwf	4
  2347  0604  0180               	clrf	0
  2348  0605                     l1460:	
  2349                           
  2350                           ;main.c: 397: }
  2351                           ;main.c: 398: ReWriteEEPROM();
  2352  0605  264C               	fcall	_ReWriteEEPROM
  2353                           
  2354                           ;main.c: 399: Update_ComboPattern_Index();
  2355  0606  2E9A               	ljmp	l1326
  2356  0607                     __end_of_INC_EEPROM_MODE:	
  2357                           
  2358                           	psect	text10
  2359  069A                     __ptext10:	
  2360 ;; *************** function _Update_ComboPattern_Index *****************
  2361 ;; Defined at:
  2362 ;;		line 433 in file "main.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;		None
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;		None
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      void 
  2369 ;; Registers used:
  2370 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2371 ;; Tracked objects:
  2372 ;;		On entry : 100/0
  2373 ;;		On exit  : 900/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMMON   BANK0   BANK1
  2376 ;;      Params:         0       0       0
  2377 ;;      Locals:         0       0       0
  2378 ;;      Temps:          0       0       0
  2379 ;;      Totals:         0       0       0
  2380 ;;Total ram usage:        0 bytes
  2381 ;; Hardware stack levels used:    1
  2382 ;; Hardware stack levels required when called:    2
  2383 ;; This function calls:
  2384 ;;		Nothing
  2385 ;; This function is called by:
  2386 ;;		_INC_EEPROM_MODE
  2387 ;;		_Update_Input_Mode_Type
  2388 ;;		_Initial_Start
  2389 ;; This function uses a non-reentrant model
  2390 ;;
  2391                           
  2392                           
  2393                           ;psect for function _Update_ComboPattern_Index
  2394  069A                     _Update_ComboPattern_Index:	
  2395  069A                     l1326:	
  2396                           ;incstack = 0
  2397                           ; Regs used in _Update_ComboPattern_Index: [wreg-fsr0h+status,2+status,0]
  2398                           
  2399                           
  2400                           ;main.c: 435: GLOBAL_Selected_Mode_Number = GLOBAL_Mode_copy[GLOBAL_Selected_Mode_Type];
  2401  069A  0835               	movf	_GLOBAL_Selected_Mode_Type,w
  2402  069B  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2403  069C  0084               	movwf	4
  2404  069D  1383               	bcf	3,7	;select IRP bank0
  2405  069E  0800               	movf	0,w
  2406  069F  00B6               	movwf	_GLOBAL_Selected_Mode_Number	;volatile
  2407                           
  2408                           ;main.c: 436: GLOBAL_combo_patterns_index = GLOBAL_Selected_Mode_Number;
  2409  06A0  0836               	movf	_GLOBAL_Selected_Mode_Number,w	;volatile
  2410  06A1  00FA               	movwf	_GLOBAL_combo_patterns_index	;volatile
  2411                           
  2412                           ;main.c: 461: if (GLOBAL_combo_patterns_index > 10)
  2413  06A2  300B               	movlw	11
  2414  06A3  027A               	subwf	_GLOBAL_combo_patterns_index,w	;volatile
  2415  06A4  1C03               	skipc
  2416  06A5  2EA9               	goto	l1334
  2417                           
  2418                           ;main.c: 462: bGLOBAL_STEADY_ON = 1;
  2419  06A6  3001               	movlw	1
  2420  06A7  00C2               	movwf	_bGLOBAL_STEADY_ON	;volatile
  2421  06A8  2EAA               	goto	l1336
  2422  06A9                     l1334:	
  2423                           
  2424                           ;main.c: 463: else
  2425                           ;main.c: 464: bGLOBAL_STEADY_ON = 0;
  2426  06A9  01C2               	clrf	_bGLOBAL_STEADY_ON	;volatile
  2427  06AA                     l1336:	
  2428                           
  2429                           ;main.c: 467: GLOBAL_sub_patterns_column_index = 7;
  2430  06AA  3007               	movlw	7
  2431  06AB  00FD               	movwf	_GLOBAL_sub_patterns_column_index	;volatile
  2432                           
  2433                           ;main.c: 468: GLOBAL_sub_patterns_timer = 0;
  2434  06AC  01C1               	clrf	_GLOBAL_sub_patterns_timer	;volatile
  2435                           
  2436                           ;main.c: 469: GLOBAL_Dummy_Counter2 = 0;
  2437  06AD  01B8               	clrf	_GLOBAL_Dummy_Counter2	;volatile
  2438  06AE  0008               	return
  2439  06AF                     __end_of_Update_ComboPattern_Index:	
  2440                           
  2441                           	psect	text11
  2442  064C                     __ptext11:	
  2443 ;; *************** function _ReWriteEEPROM *****************
  2444 ;; Defined at:
  2445 ;;		line 364 in file "main.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;		None
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  i               1   16[BANK0 ] unsigned char 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      void 
  2452 ;; Registers used:
  2453 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : 100/0
  2456 ;;		On exit  : 100/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMMON   BANK0   BANK1
  2459 ;;      Params:         0       0       0
  2460 ;;      Locals:         0       1       0
  2461 ;;      Temps:          0       0       0
  2462 ;;      Totals:         0       1       0
  2463 ;;Total ram usage:        1 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:    4
  2466 ;; This function calls:
  2467 ;;		___ctoee
  2468 ;; This function is called by:
  2469 ;;		_WriteEEPROMDefaults
  2470 ;;		_INC_EEPROM_MODE
  2471 ;;		_main
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           
  2476                           ;psect for function _ReWriteEEPROM
  2477  064C                     _ReWriteEEPROM:	
  2478                           
  2479                           ;main.c: 366: EEprom_Written_Flag = 0xFF;
  2480                           
  2481                           ;incstack = 0
  2482                           ; Regs used in _ReWriteEEPROM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2483  064C  30FF               	movlw	255
  2484  064D  00D2               	movwf	___ctoee@data
  2485  064E  3004               	movlw	(low _EEprom_Written_Flag)& (0+255)
  2486  064F  26D6               	fcall	___ctoee
  2487                           
  2488                           ;main.c: 367: for (unsigned char i=0;i<2;i++)
  2489  0650  01D4               	clrf	ReWriteEEPROM@i
  2490  0651                     l1318:	
  2491                           
  2492                           ;main.c: 368: {
  2493                           ;main.c: 369: EEprom_mode[i] = GLOBAL_Mode_copy[i];
  2494  0651  0854               	movf	ReWriteEEPROM@i,w
  2495  0652  3E22               	addlw	(low (_GLOBAL_Mode_copy| 0))& (0+255)
  2496  0653  0084               	movwf	4
  2497  0654  1383               	bcf	3,7	;select IRP bank0
  2498  0655  0800               	movf	0,w
  2499  0656  00D2               	movwf	___ctoee@data
  2500  0657  0854               	movf	ReWriteEEPROM@i,w
  2501  0658  3E02               	addlw	low _EEprom_mode
  2502  0659  26D6               	fcall	___ctoee
  2503                           
  2504                           ;main.c: 370: EEprom_InPhase[i] = bGLOBAL_InPhase_copy[i];
  2505  065A  0854               	movf	ReWriteEEPROM@i,w
  2506  065B  3E20               	addlw	(low (_bGLOBAL_InPhase_copy| 0))& (0+255)
  2507  065C  0084               	movwf	4
  2508  065D  1383               	bcf	3,7	;select IRP bank0
  2509  065E  0800               	movf	0,w
  2510  065F  00D2               	movwf	___ctoee@data
  2511  0660  0854               	movf	ReWriteEEPROM@i,w
  2512  0661  3E00               	addlw	low _EEprom_InPhase
  2513  0662  26D6               	fcall	___ctoee
  2514  0663  3002               	movlw	2
  2515  0664  0AD4               	incf	ReWriteEEPROM@i,f
  2516  0665  0254               	subwf	ReWriteEEPROM@i,w
  2517  0666  1C03               	skipc
  2518  0667  2E51               	goto	l1318
  2519                           
  2520                           ;main.c: 371: }
  2521                           ;main.c: 372: EEprom_Written_Flag = 0xA6;
  2522  0668  30A6               	movlw	166
  2523  0669  00D2               	movwf	___ctoee@data
  2524  066A  3004               	movlw	(low _EEprom_Written_Flag)& (0+255)
  2525  066B  2ED6               	ljmp	___ctoee
  2526  066C                     __end_of_ReWriteEEPROM:	
  2527                           
  2528                           	psect	text12
  2529  06D6                     __ptext12:	
  2530 ;; *************** function ___ctoee *****************
  2531 ;; Defined at:
  2532 ;;		line 128 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eeprom.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  addr            1    wreg     PTR eeprom void 
  2535 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  2536 ;;  data            1   14[BANK0 ] unsigned char 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  addr            1   15[BANK0 ] PTR eeprom void 
  2539 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      unsigned char 
  2542 ;; Registers used:
  2543 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2544 ;; Tracked objects:
  2545 ;;		On entry : 100/0
  2546 ;;		On exit  : 100/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1
  2549 ;;      Params:         0       1       0
  2550 ;;      Locals:         0       1       0
  2551 ;;      Temps:          0       0       0
  2552 ;;      Totals:         0       2       0
  2553 ;;Total ram usage:        2 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:    3
  2556 ;; This function calls:
  2557 ;;		_memcpyee
  2558 ;; This function is called by:
  2559 ;;		_ReWriteEEPROM
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           
  2564                           ;psect for function ___ctoee
  2565  06D6                     ___ctoee:	
  2566                           
  2567                           ;incstack = 0
  2568                           ; Regs used in ___ctoee: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2569                           ;___ctoee@addr stored from wreg
  2570  06D6  00D3               	movwf	___ctoee@addr
  2571  06D7  3052               	movlw	(low (___ctoee@data| 0))& (0+255)
  2572  06D8  00CE               	movwf	memcpyee@from
  2573  06D9  01CF               	clrf	memcpyee@size
  2574  06DA  0ACF               	incf	memcpyee@size,f
  2575  06DB  0853               	movf	___ctoee@addr,w
  2576  06DC  2CEA               	ljmp	_memcpyee
  2577  06DD                     __end_of___ctoee:	
  2578                           
  2579                           	psect	text13
  2580  04EA                     __ptext13:	
  2581 ;; *************** function _memcpyee *****************
  2582 ;; Defined at:
  2583 ;;		line 39 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eeprom.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  to              1    wreg     PTR eeprom unsigned char
  2586 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  2587 ;;  from            1   10[BANK0 ] PTR const unsigned char 
  2588 ;;		 -> __fltoee@data(3), __fttoee@data(3), __ltoee@data(4), __mtoee@data(3), 
  2589 ;;		 -> __itoee@data(2), __ctoee@data(1), 
  2590 ;;  size            1   11[BANK0 ] unsigned char 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  to              1   13[BANK0 ] PTR eeprom unsigned char
  2593 ;;		 -> EEprom_InPhase(2), EEprom_mode(2), EEprom_Written_Flag(1), 
  2594 ;;  ptr             1   12[BANK0 ] PTR const unsigned char 
  2595 ;;		 -> __fltoee@data(3), __fttoee@data(3), __ltoee@data(4), __mtoee@data(3), 
  2596 ;;		 -> __itoee@data(2), __ctoee@data(1), 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2601 ;; Tracked objects:
  2602 ;;		On entry : 100/0
  2603 ;;		On exit  : 100/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1
  2606 ;;      Params:         0       2       0
  2607 ;;      Locals:         0       2       0
  2608 ;;      Temps:          0       0       0
  2609 ;;      Totals:         0       4       0
  2610 ;;Total ram usage:        4 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    2
  2613 ;; This function calls:
  2614 ;;		Nothing
  2615 ;; This function is called by:
  2616 ;;		___ctoee
  2617 ;; This function uses a non-reentrant model
  2618 ;;
  2619                           
  2620                           
  2621                           ;psect for function _memcpyee
  2622  04EA                     _memcpyee:	
  2623                           
  2624                           ;incstack = 0
  2625                           ; Regs used in _memcpyee: [wreg-fsr0h+status,2+status,0]
  2626                           ;memcpyee@to stored from wreg
  2627  04EA  00D1               	movwf	memcpyee@to
  2628  04EB  084E               	movf	memcpyee@from,w
  2629  04EC  00D0               	movwf	memcpyee@ptr
  2630  04ED                     l372:	
  2631  04ED  1683               	bsf	3,5	;RP0=1, select bank1
  2632  04EE  189C               	btfsc	28,1	;volsfr
  2633  04EF  2CED               	goto	l372
  2634  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  2635  04F1  0851               	movf	memcpyee@to,w
  2636  04F2  3EFF               	addlw	255
  2637  04F3  1683               	bsf	3,5	;RP0=1, select bank1
  2638  04F4  009B               	movwf	27	;volatile
  2639  04F5  139C               	bcf	28,7	;volsfr
  2640  04F6                     l1292:	
  2641  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  2642  04F7  03CF               	decf	memcpyee@size,f
  2643  04F8  0F4F               	incfsz	memcpyee@size,w
  2644  04F9  2CFB               	goto	l377
  2645  04FA  0008               	return
  2646  04FB                     l377:	
  2647  04FB  1683               	bsf	3,5	;RP0=1, select bank1
  2648  04FC  189C               	btfsc	28,1	;volsfr
  2649  04FD  2CFB               	goto	l377
  2650  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  2651  04FF  0850               	movf	memcpyee@ptr,w
  2652  0500  0084               	movwf	4
  2653  0501  1383               	bcf	3,7	;select IRP bank0
  2654  0502  0800               	movf	0,w
  2655  0503  1683               	bsf	3,5	;RP0=1, select bank1
  2656  0504  009A               	movwf	26	;volatile
  2657  0505  1283               	bcf	3,5	;RP0=0, select bank0
  2658  0506  0AD0               	incf	memcpyee@ptr,f
  2659  0507  1683               	bsf	3,5	;RP0=1, select bank1
  2660  0508  0A9B               	incf	27,f	;volatile
  2661  0509  1003               	bcf	3,0	;volatile
  2662  050A  1B8B               	btfsc	11,7	;volatile
  2663  050B  1403               	bsf	3,0	;volatile
  2664  050C  138B               	bcf	11,7	;volatile
  2665  050D  151C               	bsf	28,2	;volsfr
  2666  050E  3055               	movlw	85
  2667  050F  009D               	movwf	29	;volsfr
  2668  0510  30AA               	movlw	170
  2669  0511  009D               	movwf	29	;volsfr
  2670  0512  149C               	bsf	28,1	;volsfr
  2671  0513  111C               	bcf	28,2	;volsfr
  2672  0514  1C03               	btfss	3,0	;volatile
  2673  0515  2CF6               	goto	l1292
  2674  0516  178B               	bsf	11,7	;volatile
  2675  0517  2CF6               	goto	l1292
  2676  0518                     __end_of_memcpyee:	
  2677                           
  2678                           	psect	text14
  2679  06DD                     __ptext14:	
  2680 ;; *************** function _ConfigureOscillator *****************
  2681 ;; Defined at:
  2682 ;;		line 18 in file "system.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;		None
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg
  2691 ;; Tracked objects:
  2692 ;;		On entry : B00/0
  2693 ;;		On exit  : B00/100
  2694 ;;		Unchanged: A00/0
  2695 ;; Data sizes:     COMMON   BANK0   BANK1
  2696 ;;      Params:         0       0       0
  2697 ;;      Locals:         0       0       0
  2698 ;;      Temps:          0       0       0
  2699 ;;      Totals:         0       0       0
  2700 ;;Total ram usage:        0 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    2
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_main
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           
  2711                           ;psect for function _ConfigureOscillator
  2712  06DD                     _ConfigureOscillator:	
  2713                           
  2714                           ;system.c: 27: OSCCON = 0x40 | 0x20 | 0x10 | 0x1 & (~0x8) ;
  2715                           
  2716                           ;incstack = 0
  2717                           ; Regs used in _ConfigureOscillator: [wreg]
  2718  06DD  3071               	movlw	113
  2719  06DE  1683               	bsf	3,5	;RP0=1, select bank1
  2720  06DF  008F               	movwf	15	;volatile
  2721  06E0                     l305:	
  2722                           ;system.c: 29: {}
  2723                           
  2724  06E0  190F               	btfsc	15,2	;volatile
  2725  06E1  1C8F               	btfss	15,1	;volatile
  2726  06E2  0008               	return
  2727  06E3  2EE0               	goto	l305
  2728  06E4                     __end_of_ConfigureOscillator:	
  2729                           
  2730                           	psect	text15
  2731  0334                     __ptext15:	
  2732 ;; *************** function _isr *****************
  2733 ;; Defined at:
  2734 ;;		line 26 in file "interrupts.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;		None
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;  temp_data1      1    6[COMMON] volatile unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      void 
  2741 ;; Registers used:
  2742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 100/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMMON   BANK0   BANK1
  2748 ;;      Params:         0       0       0
  2749 ;;      Locals:         1       0       0
  2750 ;;      Temps:          0      10       0
  2751 ;;      Totals:         1      10       0
  2752 ;;Total ram usage:       11 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    1
  2755 ;; This function calls:
  2756 ;;		_Read_Mode_Input
  2757 ;;		___bmul
  2758 ;;		___wmul
  2759 ;;		i1_SetOUTPUT
  2760 ;; This function is called by:
  2761 ;;		Interrupt level 1
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           
  2766                           ;psect for function _isr
  2767  0334                     _isr:	
  2768                           
  2769                           ;interrupts.c: 28: volatile unsigned char temp_data1;
  2770                           ;interrupts.c: 54: if (INTCONbits.TMR0IF && INTCONbits.TMR0IE)
  2771  0334  190B               	btfsc	11,2	;volatile
  2772  0335  1E8B               	btfss	11,5	;volatile
  2773  0336  2C5C               	goto	i1l87
  2774                           
  2775                           ;interrupts.c: 55: {
  2776                           ;interrupts.c: 56: TMR0 = 178;
  2777  0337  30B2               	movlw	178
  2778  0338  0081               	movwf	1	;volatile
  2779                           
  2780                           ;interrupts.c: 57: if (bGLOBAL_OUTPUT_BUFFER_CHANGED || bGLOBAL_STEADY_ON)
  2781  0339  0843               	movf	_bGLOBAL_OUTPUT_BUFFER_CHANGED,w	;volatile
  2782  033A  1903               	btfsc	3,2
  2783  033B  0842               	movf	_bGLOBAL_STEADY_ON,w	;volatile
  2784  033C  1903               	btfsc	3,2
  2785  033D  2B40               	goto	i1l1890
  2786                           
  2787                           ;interrupts.c: 58: {
  2788                           ;interrupts.c: 59: SetOUTPUT();
  2789  033E  2518               	fcall	i1_SetOUTPUT
  2790                           
  2791                           ;interrupts.c: 60: bGLOBAL_OUTPUT_BUFFER_CHANGED = 0;
  2792  033F  01C3               	clrf	_bGLOBAL_OUTPUT_BUFFER_CHANGED	;volatile
  2793  0340                     i1l1890:	
  2794                           
  2795                           ;interrupts.c: 61: }
  2796                           ;interrupts.c: 62: if ((GLOBAL_sub_patterns_column_index < 7) && (GLOBAL_sub_patterns_ti
      +                          mer == 0))
  2797  0340  3007               	movlw	7
  2798  0341  027D               	subwf	_GLOBAL_sub_patterns_column_index,w	;volatile
  2799  0342  1803               	skipnc
  2800  0343  2B8D               	goto	i1l1910
  2801  0344  0841               	movf	_GLOBAL_sub_patterns_timer,w	;volatile
  2802  0345  1D03               	btfss	3,2
  2803  0346  2B8D               	goto	i1l1910
  2804                           
  2805                           ;interrupts.c: 63: {
  2806                           ;interrupts.c: 64: if (GLOBAL_sub_patterns_index_copy != GLOBAL_sub_patterns_index)
  2807  0347  0840               	movf	_GLOBAL_sub_patterns_index_copy,w	;volatile
  2808  0348  067C               	xorwf	_GLOBAL_sub_patterns_index,w	;volatile
  2809  0349  1903               	skipnz
  2810  034A  2B4E               	goto	i1l1900
  2811                           
  2812                           ;interrupts.c: 65: {
  2813                           ;interrupts.c: 66: GLOBAL_sub_patterns_column_index = 0;
  2814  034B  01FD               	clrf	_GLOBAL_sub_patterns_column_index	;volatile
  2815                           
  2816                           ;interrupts.c: 67: GLOBAL_sub_patterns_index_copy = GLOBAL_sub_patterns_index;
  2817  034C  087C               	movf	_GLOBAL_sub_patterns_index,w	;volatile
  2818  034D  00C0               	movwf	_GLOBAL_sub_patterns_index_copy	;volatile
  2819  034E                     i1l1900:	
  2820                           
  2821                           ;interrupts.c: 68: }
  2822                           ;interrupts.c: 70: GLOBAL_sub_patterns_timer = ROM_Sub_Patterns_Time[GLOBAL_sub_patterns
      +                          _index][GLOBAL_sub_patterns_column_index];
  2823  034E  3007               	movlw	7
  2824  034F  00F1               	movwf	___bmul@multiplicand
  2825  0350  087C               	movf	_GLOBAL_sub_patterns_index,w
  2826  0351  2542               	fcall	___bmul
  2827  0352  3EBD               	addlw	low (_ROM_Sub_Patterns_Time| (0+32768))
  2828  0353  00C4               	movwf	??_isr
  2829  0354  3082               	movlw	high (_ROM_Sub_Patterns_Time| (0+32768))
  2830  0355  1803               	skipnc
  2831  0356  3E01               	addlw	1
  2832  0357  00C5               	movwf	??_isr+1
  2833  0358  087D               	movf	_GLOBAL_sub_patterns_column_index,w
  2834  0359  0744               	addwf	??_isr,w
  2835  035A  0084               	movwf	4
  2836  035B  0845               	movf	??_isr+1,w
  2837  035C  1803               	skipnc
  2838  035D  0A45               	incf	??_isr+1,w
  2839  035E  00FF               	movwf	127
  2840  035F  2100               	fcall	stringtab
  2841  0360  00C1               	movwf	_GLOBAL_sub_patterns_timer	;volatile
  2842                           
  2843                           ;interrupts.c: 72: OUTPUT_BUFFER = ROM_Sub_Patterns[GLOBAL_sub_patterns_index][GLOBAL_su
      +                          b_patterns_column_index];
  2844  0361  3007               	movlw	7
  2845  0362  00F1               	movwf	___bmul@multiplicand
  2846  0363  087C               	movf	_GLOBAL_sub_patterns_index,w
  2847  0364  2542               	fcall	___bmul
  2848  0365  3E46               	addlw	low (_ROM_Sub_Patterns| (0+32768))
  2849  0366  00C4               	movwf	??_isr
  2850  0367  3082               	movlw	high (_ROM_Sub_Patterns| (0+32768))
  2851  0368  1803               	skipnc
  2852  0369  3E01               	addlw	1
  2853  036A  00C5               	movwf	??_isr+1
  2854  036B  087D               	movf	_GLOBAL_sub_patterns_column_index,w
  2855  036C  0744               	addwf	??_isr,w
  2856  036D  0084               	movwf	4
  2857  036E  0845               	movf	??_isr+1,w
  2858  036F  1803               	skipnc
  2859  0370  0A45               	incf	??_isr+1,w
  2860  0371  00FF               	movwf	127
  2861  0372  2100               	fcall	stringtab
  2862  0373  00FB               	movwf	_OUTPUT_BUFFER	;volatile
  2863                           
  2864                           ;interrupts.c: 74: GLOBAL_sub_patterns_column_index++;
  2865  0374  0AFD               	incf	_GLOBAL_sub_patterns_column_index,f	;volatile
  2866                           
  2867                           ;interrupts.c: 75: if (ROM_Sub_Patterns_Time[GLOBAL_sub_patterns_index][GLOBAL_sub_patte
      +                          rns_column_index] == 0)
  2868  0375  3007               	movlw	7
  2869  0376  00F1               	movwf	___bmul@multiplicand
  2870  0377  087C               	movf	_GLOBAL_sub_patterns_index,w
  2871  0378  2542               	fcall	___bmul
  2872  0379  3EBD               	addlw	low (_ROM_Sub_Patterns_Time| (0+32768))
  2873  037A  00C4               	movwf	??_isr
  2874  037B  3082               	movlw	high (_ROM_Sub_Patterns_Time| (0+32768))
  2875  037C  1803               	skipnc
  2876  037D  3E01               	addlw	1
  2877  037E  00C5               	movwf	??_isr+1
  2878  037F  087D               	movf	_GLOBAL_sub_patterns_column_index,w
  2879  0380  0744               	addwf	??_isr,w
  2880  0381  0084               	movwf	4
  2881  0382  0845               	movf	??_isr+1,w
  2882  0383  1803               	skipnc
  2883  0384  0A45               	incf	??_isr+1,w
  2884  0385  00FF               	movwf	127
  2885  0386  2100               	fcall	stringtab
  2886  0387  3A00               	xorlw	0
  2887  0388  1D03               	skipz
  2888  0389  2BFF               	goto	i1l64
  2889                           
  2890                           ;interrupts.c: 76: GLOBAL_sub_patterns_column_index = 7;
  2891  038A  3007               	movlw	7
  2892  038B  00FD               	movwf	_GLOBAL_sub_patterns_column_index	;volatile
  2893  038C  2BFF               	goto	i1l64
  2894  038D                     i1l1910:	
  2895                           
  2896                           ;interrupts.c: 78: else {
  2897                           ;interrupts.c: 79: if (GLOBAL_sub_patterns_column_index > (7 - 1))
  2898  038D  3007               	movlw	7
  2899  038E  027D               	subwf	_GLOBAL_sub_patterns_column_index,w	;volatile
  2900  038F  1C03               	skipc
  2901  0390  2BFF               	goto	i1l64
  2902                           
  2903                           ;interrupts.c: 80: {
  2904                           ;interrupts.c: 82: if (GLOBAL_combo_patterns_index_copy != GLOBAL_combo_patterns_index)
  2905  0391  083F               	movf	_GLOBAL_combo_patterns_index_copy,w	;volatile
  2906  0392  067A               	xorwf	_GLOBAL_combo_patterns_index,w	;volatile
  2907  0393  1903               	skipnz
  2908  0394  2B98               	goto	i1l1918
  2909                           
  2910                           ;interrupts.c: 83: {
  2911                           ;interrupts.c: 84: GLOBAL_combo_patterns_column_index = 0;
  2912  0395  01F9               	clrf	_GLOBAL_combo_patterns_column_index	;volatile
  2913                           
  2914                           ;interrupts.c: 85: GLOBAL_combo_patterns_index_copy = GLOBAL_combo_patterns_index;
  2915  0396  087A               	movf	_GLOBAL_combo_patterns_index,w	;volatile
  2916  0397  00BF               	movwf	_GLOBAL_combo_patterns_index_copy	;volatile
  2917  0398                     i1l1918:	
  2918                           
  2919                           ;interrupts.c: 86: }
  2920                           ;interrupts.c: 88: if (bGLOBAL_END_OF_CYCLE_COND1)
  2921  0398  083E               	movf	_bGLOBAL_END_OF_CYCLE_COND1,w	;volatile
  2922  0399  1903               	btfsc	3,2
  2923  039A  2B9D               	goto	i1l1922
  2924                           
  2925                           ;interrupts.c: 89: bGLOBAL_END_OF_CYCLE_COND2 = 1;
  2926  039B  3001               	movlw	1
  2927  039C  00BD               	movwf	_bGLOBAL_END_OF_CYCLE_COND2	;volatile
  2928  039D                     i1l1922:	
  2929                           
  2930                           ;interrupts.c: 91: if (bGLOBAL_InPhase)
  2931  039D  083C               	movf	_bGLOBAL_InPhase,w	;volatile
  2932  039E  1903               	btfsc	3,2
  2933  039F  2BA2               	goto	i1l1926
  2934                           
  2935                           ;interrupts.c: 92: GLOBAL_sub_patterns_index = ROM_COMBO_Patterns[GLOBAL_combo_patterns_
      +                          index][GLOBAL_combo_patterns_column_index];
  2936  03A0  0879               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  2937  03A1  2BB0               	goto	L4
  2938  03A2                     i1l1926:	
  2939                           
  2940                           ;interrupts.c: 93: else
  2941                           ;interrupts.c: 94: {
  2942                           ;interrupts.c: 95: temp_data1 = GLOBAL_combo_patterns_column_index & 0x01;
  2943  03A2  0879               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  2944  03A3  00F7               	movwf	isr@temp_data1	;volatile
  2945  03A4  3001               	movlw	1
  2946  03A5  05F7               	andwf	isr@temp_data1,f	;volatile
  2947                           
  2948                           ;interrupts.c: 96: if (temp_data1)
  2949  03A6  0877               	movf	isr@temp_data1,w	;volatile
  2950  03A7  1903               	btfsc	3,2
  2951  03A8  2BAC               	goto	i1l1934
  2952                           
  2953                           ;interrupts.c: 97: temp_data1 = GLOBAL_combo_patterns_column_index - 1;
  2954  03A9  0879               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  2955  03AA  3EFF               	addlw	255
  2956  03AB  2BAE               	goto	L5
  2957  03AC                     i1l1934:	
  2958                           
  2959                           ;interrupts.c: 98: else
  2960                           ;interrupts.c: 99: temp_data1 = GLOBAL_combo_patterns_column_index + 1;
  2961  03AC  0879               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  2962  03AD  3E01               	addlw	1
  2963  03AE                     L5:	
  2964  03AE  00F7               	movwf	isr@temp_data1	;volatile
  2965                           
  2966                           ;interrupts.c: 100: GLOBAL_sub_patterns_index = ROM_COMBO_Patterns[GLOBAL_combo_patterns
      +                          _index][temp_data1];
  2967  03AF  0877               	movf	isr@temp_data1,w	;volatile
  2968  03B0                     L4:	
  2969  03B0  00C4               	movwf	??_isr
  2970  03B1  01C5               	clrf	??_isr+1
  2971  03B2  087A               	movf	_GLOBAL_combo_patterns_index,w	;volatile
  2972  03B3  00F1               	movwf	___wmul@multiplier
  2973  03B4  3016               	movlw	22
  2974  03B5  01F2               	clrf	___wmul@multiplier+1
  2975  03B6  00F3               	movwf	___wmul@multiplicand
  2976  03B7  01F4               	clrf	___wmul@multiplicand+1
  2977  03B8  266C               	fcall	___wmul
  2978  03B9  3012               	movlw	low (_ROM_COMBO_Patterns| (0+32768))
  2979  03BA  00C6               	movwf	??_isr+2
  2980  03BB  3081               	movlw	high (_ROM_COMBO_Patterns| (0+32768))
  2981  03BC  00C7               	movwf	??_isr+3
  2982  03BD  0871               	movf	?___wmul,w
  2983  03BE  0746               	addwf	??_isr+2,w
  2984  03BF  00C8               	movwf	??_isr+4
  2985  03C0  0872               	movf	?___wmul+1,w
  2986  03C1  1803               	skipnc
  2987  03C2  0A72               	incf	?___wmul+1,w
  2988  03C3  0747               	addwf	??_isr+3,w
  2989  03C4  00C9               	movwf	??_isr+5
  2990  03C5  0844               	movf	??_isr,w
  2991  03C6  0748               	addwf	??_isr+4,w
  2992  03C7  0084               	movwf	4
  2993  03C8  0845               	movf	??_isr+1,w
  2994  03C9  1803               	skipnc
  2995  03CA  0A45               	incf	??_isr+1,w
  2996  03CB  0749               	addwf	??_isr+5,w
  2997  03CC  00FF               	movwf	127
  2998  03CD  2100               	fcall	stringtab
  2999  03CE  00FC               	movwf	_GLOBAL_sub_patterns_index	;volatile
  3000                           
  3001                           ;interrupts.c: 101: }
  3002                           ;interrupts.c: 102: GLOBAL_combo_patterns_column_index++;
  3003  03CF  0AF9               	incf	_GLOBAL_combo_patterns_column_index,f	;volatile
  3004                           
  3005                           ;interrupts.c: 103: if ((GLOBAL_combo_patterns_column_index > (22 - 1)) || (ROM_COMBO_Pa
      +                          tterns[GLOBAL_combo_patterns_index][GLOBAL_combo_patterns_column_index] == 99))
  3006  03D0  3016               	movlw	22
  3007  03D1  0279               	subwf	_GLOBAL_combo_patterns_column_index,w	;volatile
  3008  03D2  1803               	skipnc
  3009  03D3  2BF6               	goto	i1l1944
  3010  03D4  0879               	movf	_GLOBAL_combo_patterns_column_index,w	;volatile
  3011  03D5  00C4               	movwf	??_isr
  3012  03D6  01C5               	clrf	??_isr+1
  3013  03D7  087A               	movf	_GLOBAL_combo_patterns_index,w	;volatile
  3014  03D8  00F1               	movwf	___wmul@multiplier
  3015  03D9  3016               	movlw	22
  3016  03DA  01F2               	clrf	___wmul@multiplier+1
  3017  03DB  00F3               	movwf	___wmul@multiplicand
  3018  03DC  01F4               	clrf	___wmul@multiplicand+1
  3019  03DD  266C               	fcall	___wmul
  3020  03DE  3012               	movlw	low (_ROM_COMBO_Patterns| (0+32768))
  3021  03DF  00C6               	movwf	??_isr+2
  3022  03E0  3081               	movlw	high (_ROM_COMBO_Patterns| (0+32768))
  3023  03E1  00C7               	movwf	??_isr+3
  3024  03E2  0871               	movf	?___wmul,w
  3025  03E3  0746               	addwf	??_isr+2,w
  3026  03E4  00C8               	movwf	??_isr+4
  3027  03E5  0872               	movf	?___wmul+1,w
  3028  03E6  1803               	skipnc
  3029  03E7  0A72               	incf	?___wmul+1,w
  3030  03E8  0747               	addwf	??_isr+3,w
  3031  03E9  00C9               	movwf	??_isr+5
  3032  03EA  0844               	movf	??_isr,w
  3033  03EB  0748               	addwf	??_isr+4,w
  3034  03EC  0084               	movwf	4
  3035  03ED  0845               	movf	??_isr+1,w
  3036  03EE  1803               	skipnc
  3037  03EF  0A45               	incf	??_isr+1,w
  3038  03F0  0749               	addwf	??_isr+5,w
  3039  03F1  00FF               	movwf	127
  3040  03F2  2100               	fcall	stringtab
  3041  03F3  3A63               	xorlw	99
  3042  03F4  1D03               	skipz
  3043  03F5  2BFE               	goto	i1l1952
  3044  03F6                     i1l1944:	
  3045                           
  3046                           ;interrupts.c: 104: {
  3047                           ;interrupts.c: 105: if (bGLOBAL_STEADY_ON)
  3048  03F6  0842               	movf	_bGLOBAL_STEADY_ON,w	;volatile
  3049  03F7  1903               	btfsc	3,2
  3050  03F8  2BFB               	goto	i1l1948
  3051                           
  3052                           ;interrupts.c: 106: GLOBAL_combo_patterns_column_index--;
  3053  03F9  03F9               	decf	_GLOBAL_combo_patterns_column_index,f	;volatile
  3054  03FA  2BFE               	goto	i1l1952
  3055  03FB                     i1l1948:	
  3056                           
  3057                           ;interrupts.c: 107: else
  3058                           ;interrupts.c: 108: {
  3059                           ;interrupts.c: 109: GLOBAL_combo_patterns_column_index = 0;
  3060  03FB  01F9               	clrf	_GLOBAL_combo_patterns_column_index	;volatile
  3061                           
  3062                           ;interrupts.c: 110: bGLOBAL_END_OF_CYCLE_COND1 = 1;
  3063  03FC  3001               	movlw	1
  3064  03FD  00BE               	movwf	_bGLOBAL_END_OF_CYCLE_COND1	;volatile
  3065  03FE                     i1l1952:	
  3066                           
  3067                           ;interrupts.c: 111: }
  3068                           ;interrupts.c: 112: }
  3069                           ;interrupts.c: 113: GLOBAL_sub_patterns_column_index = 0;
  3070  03FE  01FD               	clrf	_GLOBAL_sub_patterns_column_index	;volatile
  3071  03FF                     i1l64:	
  3072                           
  3073                           ;interrupts.c: 114: }
  3074                           ;interrupts.c: 115: }
  3075                           ;interrupts.c: 117: if ((GLOBAL_sub_patterns_timer < 6) && bGLOBAL_END_OF_CYCLE_COND1 &&
      +                           (GPIObits.GP4) && (GLOBAL_SYNC_PULSE_Counter == 0) && bGLOBAL_END_OF_CYCLE_COND2)
  3076  03FF  3006               	movlw	6
  3077  0400  0241               	subwf	_GLOBAL_sub_patterns_timer,w	;volatile
  3078  0401  1803               	skipnc
  3079  0402  2C14               	goto	i1l1966
  3080  0403  083E               	movf	_bGLOBAL_END_OF_CYCLE_COND1,w	;volatile
  3081  0404  1D03               	btfss	3,2
  3082  0405  1E05               	btfss	5,4	;volatile
  3083  0406  2C14               	goto	i1l1966
  3084  0407  0878               	movf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  3085  0408  1D03               	btfss	3,2
  3086  0409  2C14               	goto	i1l1966
  3087  040A  083D               	movf	_bGLOBAL_END_OF_CYCLE_COND2,w	;volatile
  3088  040B  1903               	btfsc	3,2
  3089  040C  2C14               	goto	i1l1966
  3090                           
  3091                           ;interrupts.c: 118: {
  3092                           ;interrupts.c: 119: OUTPUT_BUFFER = OUTPUT_BUFFER | 0x20;
  3093  040D  087B               	movf	_OUTPUT_BUFFER,w	;volatile
  3094  040E  3820               	iorlw	32
  3095  040F  00FB               	movwf	_OUTPUT_BUFFER	;volatile
  3096                           
  3097                           ;interrupts.c: 120: bGLOBAL_SYNC_SENT = 1;
  3098  0410  3001               	movlw	1
  3099  0411  00BB               	movwf	_bGLOBAL_SYNC_SENT	;volatile
  3100                           
  3101                           ;interrupts.c: 121: bGLOBAL_END_OF_CYCLE_COND1 = 0;
  3102  0412  01BE               	clrf	_bGLOBAL_END_OF_CYCLE_COND1	;volatile
  3103                           
  3104                           ;interrupts.c: 122: bGLOBAL_END_OF_CYCLE_COND2 = 0;
  3105  0413  01BD               	clrf	_bGLOBAL_END_OF_CYCLE_COND2	;volatile
  3106  0414                     i1l1966:	
  3107                           
  3108                           ;interrupts.c: 123: }
  3109                           ;interrupts.c: 125: if (!bGLOBAL_SYNC_SENT)
  3110  0414  083B               	movf	_bGLOBAL_SYNC_SENT,w	;volatile
  3111  0415  1903               	btfsc	3,2
  3112                           
  3113                           ;interrupts.c: 126: {
  3114                           ;interrupts.c: 127: if ((!(GPIObits.GP4)) && (GLOBAL_SYNC_PULSE_Counter < 200))
  3115  0416  1A05               	btfsc	5,4	;volatile
  3116  0417  2C1D               	goto	i1l1974
  3117  0418  30C8               	movlw	200
  3118  0419  0278               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  3119  041A  1803               	skipnc
  3120  041B  2C1D               	goto	i1l1974
  3121                           
  3122                           ;interrupts.c: 128: GLOBAL_SYNC_PULSE_Counter++;
  3123  041C  0AF8               	incf	_GLOBAL_SYNC_PULSE_Counter,f	;volatile
  3124  041D                     i1l1974:	
  3125                           
  3126                           ;interrupts.c: 129: }
  3127                           ;interrupts.c: 131: if ((GLOBAL_sub_patterns_timer < 3) && bGLOBAL_SYNC_SENT)
  3128  041D  3003               	movlw	3
  3129  041E  0241               	subwf	_GLOBAL_sub_patterns_timer,w	;volatile
  3130  041F  1803               	skipnc
  3131  0420  2C26               	goto	i1l1982
  3132  0421  083B               	movf	_bGLOBAL_SYNC_SENT,w	;volatile
  3133  0422  1903               	btfsc	3,2
  3134  0423  2C26               	goto	i1l1982
  3135                           
  3136                           ;interrupts.c: 132: {
  3137                           ;interrupts.c: 133: OUTPUT_BUFFER = OUTPUT_BUFFER & 0xDF;
  3138  0424  12FB               	bcf	_OUTPUT_BUFFER,5	;volatile
  3139                           
  3140                           ;interrupts.c: 134: bGLOBAL_SYNC_SENT = 0;
  3141  0425  01BB               	clrf	_bGLOBAL_SYNC_SENT	;volatile
  3142  0426                     i1l1982:	
  3143                           
  3144                           ;interrupts.c: 135: }
  3145                           ;interrupts.c: 137: if ((GLOBAL_SYNC_PULSE_Counter > 1) && (GLOBAL_SYNC_PULSE_Counter < 
      +                          7) && (GPIObits.GP4) && !bGLOBAL_STEADY_ON)
  3146  0426  3002               	movlw	2
  3147  0427  0278               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  3148  0428  1C03               	skipc
  3149  0429  2C39               	goto	i1l2002
  3150  042A  3007               	movlw	7
  3151  042B  0278               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  3152  042C  1C03               	btfss	3,0
  3153  042D  1E05               	btfss	5,4	;volatile
  3154  042E  2C39               	goto	i1l2002
  3155  042F  0842               	movf	_bGLOBAL_STEADY_ON,w	;volatile
  3156  0430  1D03               	btfss	3,2
  3157  0431  2C39               	goto	i1l2002
  3158                           
  3159                           ;interrupts.c: 138: {
  3160                           ;interrupts.c: 139: GLOBAL_sub_patterns_column_index = 7;
  3161  0432  3007               	movlw	7
  3162  0433  00FD               	movwf	_GLOBAL_sub_patterns_column_index	;volatile
  3163                           
  3164                           ;interrupts.c: 140: GLOBAL_sub_patterns_timer =0;
  3165  0434  01C1               	clrf	_GLOBAL_sub_patterns_timer	;volatile
  3166                           
  3167                           ;interrupts.c: 141: GLOBAL_combo_patterns_column_index = 0;
  3168  0435  01F9               	clrf	_GLOBAL_combo_patterns_column_index	;volatile
  3169                           
  3170                           ;interrupts.c: 142: GLOBAL_SYNC_PULSE_Counter = 0;
  3171  0436  01F8               	clrf	_GLOBAL_SYNC_PULSE_Counter	;volatile
  3172                           
  3173                           ;interrupts.c: 143: bGLOBAL_END_OF_CYCLE_COND1 = 0;
  3174  0437  01BE               	clrf	_bGLOBAL_END_OF_CYCLE_COND1	;volatile
  3175                           
  3176                           ;interrupts.c: 144: bGLOBAL_END_OF_CYCLE_COND2 = 0;
  3177  0438  01BD               	clrf	_bGLOBAL_END_OF_CYCLE_COND2	;volatile
  3178  0439                     i1l2002:	
  3179                           
  3180                           ;interrupts.c: 145: }
  3181                           ;interrupts.c: 147: if ((GPIObits.GP4) && ((GLOBAL_SYNC_PULSE_Counter > 6) || (GLOBAL_SY
      +                          NC_PULSE_Counter < 2)))
  3182  0439  1E05               	btfss	5,4	;volatile
  3183  043A  2C44               	goto	i1l2010
  3184  043B  3007               	movlw	7
  3185  043C  0278               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  3186  043D  1803               	skipnc
  3187  043E  2C43               	goto	i1l2008
  3188  043F  3002               	movlw	2
  3189  0440  0278               	subwf	_GLOBAL_SYNC_PULSE_Counter,w	;volatile
  3190  0441  1803               	skipnc
  3191  0442  2C44               	goto	i1l2010
  3192  0443                     i1l2008:	
  3193                           
  3194                           ;interrupts.c: 148: GLOBAL_SYNC_PULSE_Counter = 0;
  3195  0443  01F8               	clrf	_GLOBAL_SYNC_PULSE_Counter	;volatile
  3196  0444                     i1l2010:	
  3197                           
  3198                           ;interrupts.c: 150: if ((OUTPUT_BUFFER_COPY - OUTPUT_BUFFER) != 0)
  3199  0444  083A               	movf	_OUTPUT_BUFFER_COPY,w	;volatile
  3200  0445  00C4               	movwf	??_isr
  3201  0446  01C5               	clrf	??_isr+1
  3202  0447  0845               	movf	??_isr+1,w
  3203  0448  00C7               	movwf	??_isr+3
  3204  0449  087B               	movf	_OUTPUT_BUFFER,w	;volatile
  3205  044A  0244               	subwf	??_isr,w
  3206  044B  00C6               	movwf	??_isr+2
  3207  044C  1C03               	skipc
  3208  044D  03C7               	decf	??_isr+3,f
  3209  044E  0447               	iorwf	??_isr+3,w
  3210  044F  1903               	btfsc	3,2
  3211  0450  2C53               	goto	i1l85
  3212                           
  3213                           ;interrupts.c: 151: bGLOBAL_OUTPUT_BUFFER_CHANGED = 1;
  3214  0451  3001               	movlw	1
  3215  0452  00C3               	movwf	_bGLOBAL_OUTPUT_BUFFER_CHANGED	;volatile
  3216  0453                     i1l85:	
  3217                           
  3218                           ;interrupts.c: 152: OUTPUT_BUFFER_COPY = OUTPUT_BUFFER;
  3219  0453  087B               	movf	_OUTPUT_BUFFER,w	;volatile
  3220  0454  00BA               	movwf	_OUTPUT_BUFFER_COPY	;volatile
  3221                           
  3222                           ;interrupts.c: 153: GLOBAL_Dummy_Counter++;
  3223  0455  0AB9               	incf	_GLOBAL_Dummy_Counter,f	;volatile
  3224                           
  3225                           ;interrupts.c: 154: GLOBAL_Dummy_Counter2++;
  3226  0456  0AB8               	incf	_GLOBAL_Dummy_Counter2,f	;volatile
  3227                           
  3228                           ;interrupts.c: 155: if (GLOBAL_sub_patterns_timer > 0)
  3229  0457  0841               	movf	_GLOBAL_sub_patterns_timer,w	;volatile
  3230  0458  1D03               	btfss	3,2
  3231                           
  3232                           ;interrupts.c: 156: GLOBAL_sub_patterns_timer--;
  3233  0459  03C1               	decf	_GLOBAL_sub_patterns_timer,f	;volatile
  3234                           
  3235                           ;interrupts.c: 157: Read_Mode_Input();
  3236  045A  2607               	fcall	_Read_Mode_Input
  3237                           
  3238                           ;interrupts.c: 158: INTCONbits.TMR0IF = 0;
  3239  045B  110B               	bcf	11,2	;volatile
  3240  045C                     i1l87:	
  3241  045C  084D               	movf	??_isr+9,w
  3242  045D  00FF               	movwf	127
  3243  045E  084C               	movf	??_isr+8,w
  3244  045F  008A               	movwf	10
  3245  0460  084B               	movf	??_isr+7,w
  3246  0461  0084               	movwf	4
  3247  0462  0E4A               	swapf	(??_isr+6)^0,w
  3248  0463  0083               	movwf	3
  3249  0464  0EFE               	swapf	126,f
  3250  0465  0E7E               	swapf	126,w
  3251  0466  0009               	retfie
  3252  0467                     __end_of_isr:	
  3253                           
  3254                           	psect	intentry
  3255  0004                     __pintentry:	
  3256                           ;incstack = 0
  3257                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3258                           
  3259  0004                     interrupt_function:	
  3260  007E                     saved_w	set	btemp
  3261  0004  00FE               	movwf	btemp
  3262  0005  0E03               	swapf	3,w
  3263  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3264  0007  00CA               	movwf	??_isr+6
  3265  0008  0804               	movf	4,w
  3266  0009  00CB               	movwf	??_isr+7
  3267  000A  080A               	movf	10,w
  3268  000B  00CC               	movwf	??_isr+8
  3269  000C  087F               	movf	btemp+1,w
  3270  000D  00CD               	movwf	??_isr+9
  3271  000E  2B34               	ljmp	_isr
  3272                           
  3273                           	psect	text16
  3274  0518                     __ptext16:	
  3275 ;; *************** function i1_SetOUTPUT *****************
  3276 ;; Defined at:
  3277 ;;		line 306 in file "main.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;		None
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;  SetOUTPUT       1    1[COMMON] unsigned char 
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      void 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0
  3286 ;; Tracked objects:
  3287 ;;		On entry : 100/0
  3288 ;;		On exit  : 100/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMMON   BANK0   BANK1
  3291 ;;      Params:         0       0       0
  3292 ;;      Locals:         1       0       0
  3293 ;;      Temps:          1       0       0
  3294 ;;      Totals:         2       0       0
  3295 ;;Total ram usage:        2 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_isr
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           
  3305                           ;psect for function i1_SetOUTPUT
  3306  0518                     i1_SetOUTPUT:	
  3307                           
  3308                           ;main.c: 308: unsigned char temporaryGPIO = 0x00;
  3309                           
  3310                           ;incstack = 0
  3311                           ; Regs used in i1_SetOUTPUT: [wreg+status,2+status,0]
  3312  0518  01F2               	clrf	i1SetOUTPUT@temporaryGPIO
  3313                           
  3314                           ;main.c: 310: if (bGLOBAL_ENABLE_LEDS)
  3315  0519  0827               	movf	_bGLOBAL_ENABLE_LEDS,w	;volatile
  3316  051A  1903               	btfsc	3,2
  3317  051B  2D31               	goto	i1l1542
  3318                           
  3319                           ;main.c: 311: {
  3320                           ;main.c: 312: temporaryGPIO = OUTPUT_BUFFER & GLOBAL_CHANNELS_EN;
  3321  051C  087B               	movf	_OUTPUT_BUFFER,w	;volatile
  3322  051D  00F2               	movwf	i1SetOUTPUT@temporaryGPIO
  3323  051E  082D               	movf	_GLOBAL_CHANNELS_EN,w	;volatile
  3324  051F  05F2               	andwf	i1SetOUTPUT@temporaryGPIO,f
  3325                           
  3326                           ;main.c: 314: if((temporaryGPIO & 0x03) == 0x01 || (temporaryGPIO & 0x03) == 0x02)
  3327  0520  3003               	movlw	3
  3328  0521  0572               	andwf	i1SetOUTPUT@temporaryGPIO,w
  3329  0522  00F1               	movwf	??i1_SetOUTPUT
  3330  0523  0371               	decf	??i1_SetOUTPUT,w
  3331  0524  3003               	movlw	3
  3332  0525  1903               	btfsc	3,2
  3333  0526  2D2D               	goto	L6
  3334  0527  0572               	andwf	i1SetOUTPUT@temporaryGPIO,w
  3335  0528  00F1               	movwf	??i1_SetOUTPUT
  3336  0529  3A02               	xorlw	2
  3337  052A  1D03               	btfss	3,2
  3338  052B  2D2E               	goto	i1l1540
  3339                           
  3340                           ;main.c: 315: temporaryGPIO ^= 0x03;
  3341  052C  3003               	movlw	3
  3342  052D                     L6:	
  3343  052D  06F2               	xorwf	i1SetOUTPUT@temporaryGPIO,f
  3344  052E                     i1l1540:	
  3345                           
  3346                           ;main.c: 317: GPIO = temporaryGPIO;
  3347  052E  0872               	movf	i1SetOUTPUT@temporaryGPIO,w
  3348  052F  0085               	movwf	5	;volatile
  3349                           
  3350                           ;main.c: 318: }
  3351  0530  0008               	return
  3352  0531                     i1l1542:	
  3353                           
  3354                           ;main.c: 319: else
  3355                           ;main.c: 320: {
  3356                           ;main.c: 321: if (bGLOBAL_IS_PROGRAMMING)
  3357  0531  0828               	movf	_bGLOBAL_IS_PROGRAMMING,w	;volatile
  3358  0532  1903               	btfsc	3,2
  3359  0533  2D40               	goto	i1l1552
  3360                           
  3361                           ;main.c: 322: {
  3362                           ;main.c: 323: if (!bGLOBAL_CHANGING_PATTERN)
  3363  0534  082A               	movf	_bGLOBAL_CHANGING_PATTERN,w	;volatile
  3364  0535  1D03               	btfss	3,2
  3365  0536  0008               	return
  3366                           
  3367                           ;main.c: 324: {
  3368                           ;main.c: 325: if (bGLOBAL_InPhase)
  3369  0537  083C               	movf	_bGLOBAL_InPhase,w	;volatile
  3370  0538  1903               	btfsc	3,2
  3371  0539  2D3D               	goto	i1l1550
  3372                           
  3373                           ;main.c: 326: GPIO = 0x23;
  3374  053A  3023               	movlw	35
  3375  053B  0085               	movwf	5	;volatile
  3376  053C  0008               	return
  3377  053D                     i1l1550:	
  3378                           
  3379                           ;main.c: 327: else
  3380                           ;main.c: 328: GPIO = 0x21;
  3381  053D  3021               	movlw	33
  3382  053E  0085               	movwf	5	;volatile
  3383  053F  0008               	return
  3384  0540                     i1l1552:	
  3385                           
  3386                           ;main.c: 331: {
  3387                           ;main.c: 332: GPIO = 0;
  3388  0540  0185               	clrf	5	;volatile
  3389  0541  0008               	return
  3390  0542                     __end_ofi1_SetOUTPUT:	
  3391                           
  3392                           	psect	text17
  3393  066C                     __ptext17:	
  3394 ;; *************** function ___wmul *****************
  3395 ;; Defined at:
  3396 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  multiplier      2    0[COMMON] unsigned int 
  3399 ;;  multiplicand    2    2[COMMON] unsigned int 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  product         2    4[COMMON] unsigned int 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  2    0[COMMON] unsigned int 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0
  3406 ;; Tracked objects:
  3407 ;;		On entry : 100/0
  3408 ;;		On exit  : 100/0
  3409 ;;		Unchanged: 100/0
  3410 ;; Data sizes:     COMMON   BANK0   BANK1
  3411 ;;      Params:         4       0       0
  3412 ;;      Locals:         2       0       0
  3413 ;;      Temps:          0       0       0
  3414 ;;      Totals:         6       0       0
  3415 ;;Total ram usage:        6 bytes
  3416 ;; Hardware stack levels used:    1
  3417 ;; This function calls:
  3418 ;;		Nothing
  3419 ;; This function is called by:
  3420 ;;		_isr
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           
  3425                           ;psect for function ___wmul
  3426  066C                     ___wmul:	
  3427                           
  3428                           ;incstack = 0
  3429                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3430  066C  01F5               	clrf	___wmul@product
  3431  066D  01F6               	clrf	___wmul@product+1
  3432  066E                     i1l1810:	
  3433  066E  1C71               	btfss	___wmul@multiplier,0
  3434  066F  2E76               	goto	i1l1814
  3435  0670  0873               	movf	___wmul@multiplicand,w
  3436  0671  07F5               	addwf	___wmul@product,f
  3437  0672  1803               	skipnc
  3438  0673  0AF6               	incf	___wmul@product+1,f
  3439  0674  0874               	movf	___wmul@multiplicand+1,w
  3440  0675  07F6               	addwf	___wmul@product+1,f
  3441  0676                     i1l1814:	
  3442  0676  1003               	clrc
  3443  0677  0DF3               	rlf	___wmul@multiplicand,f
  3444  0678  0DF4               	rlf	___wmul@multiplicand+1,f
  3445  0679  1003               	clrc
  3446  067A  0CF2               	rrf	___wmul@multiplier+1,f
  3447  067B  0CF1               	rrf	___wmul@multiplier,f
  3448  067C  0871               	movf	___wmul@multiplier,w
  3449  067D  0472               	iorwf	___wmul@multiplier+1,w
  3450  067E  1D03               	btfss	3,2
  3451  067F  2E6E               	goto	i1l1810
  3452  0680  0876               	movf	___wmul@product+1,w
  3453  0681  00F2               	movwf	?___wmul+1
  3454  0682  0875               	movf	___wmul@product,w
  3455  0683  00F1               	movwf	?___wmul
  3456  0684  0008               	return
  3457  0685                     __end_of___wmul:	
  3458                           
  3459                           	psect	text18
  3460  0542                     __ptext18:	
  3461 ;; *************** function ___bmul *****************
  3462 ;; Defined at:
  3463 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  multiplier      1    wreg     unsigned char 
  3466 ;;  multiplicand    1    0[COMMON] unsigned char 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  multiplier      1    2[COMMON] unsigned char 
  3469 ;;  product         1    1[COMMON] unsigned char 
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  1    wreg      unsigned char 
  3472 ;; Registers used:
  3473 ;;		wreg, status,2, status,0
  3474 ;; Tracked objects:
  3475 ;;		On entry : 100/0
  3476 ;;		On exit  : 100/0
  3477 ;;		Unchanged: 100/0
  3478 ;; Data sizes:     COMMON   BANK0   BANK1
  3479 ;;      Params:         1       0       0
  3480 ;;      Locals:         2       0       0
  3481 ;;      Temps:          0       0       0
  3482 ;;      Totals:         3       0       0
  3483 ;;Total ram usage:        3 bytes
  3484 ;; Hardware stack levels used:    1
  3485 ;; This function calls:
  3486 ;;		Nothing
  3487 ;; This function is called by:
  3488 ;;		_isr
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           
  3493                           ;psect for function ___bmul
  3494  0542                     ___bmul:	
  3495                           
  3496                           ;incstack = 0
  3497                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3498                           ;___bmul@multiplier stored from wreg
  3499  0542  00F3               	movwf	___bmul@multiplier
  3500  0543  01F2               	clrf	___bmul@product
  3501  0544  0871               	movf	___bmul@multiplicand,w
  3502  0545  1873               	btfsc	___bmul@multiplier,0
  3503  0546  07F2               	addwf	___bmul@product,f
  3504  0547  1003               	clrc
  3505  0548  0DF1               	rlf	___bmul@multiplicand,f
  3506  0549  0871               	movf	___bmul@multiplicand,w
  3507  054A  18F3               	btfsc	___bmul@multiplier,1
  3508  054B  07F2               	addwf	___bmul@product,f
  3509  054C  1003               	clrc
  3510  054D  0DF1               	rlf	___bmul@multiplicand,f
  3511  054E  0871               	movf	___bmul@multiplicand,w
  3512  054F  1973               	btfsc	___bmul@multiplier,2
  3513  0550  07F2               	addwf	___bmul@product,f
  3514  0551  1003               	clrc
  3515  0552  0DF1               	rlf	___bmul@multiplicand,f
  3516  0553  0871               	movf	___bmul@multiplicand,w
  3517  0554  19F3               	btfsc	___bmul@multiplier,3
  3518  0555  07F2               	addwf	___bmul@product,f
  3519  0556  1003               	clrc
  3520  0557  0DF1               	rlf	___bmul@multiplicand,f
  3521  0558  0871               	movf	___bmul@multiplicand,w
  3522  0559  1A73               	btfsc	___bmul@multiplier,4
  3523  055A  07F2               	addwf	___bmul@product,f
  3524  055B  1003               	clrc
  3525  055C  0DF1               	rlf	___bmul@multiplicand,f
  3526  055D  0871               	movf	___bmul@multiplicand,w
  3527  055E  1AF3               	btfsc	___bmul@multiplier,5
  3528  055F  07F2               	addwf	___bmul@product,f
  3529  0560  1003               	clrc
  3530  0561  0DF1               	rlf	___bmul@multiplicand,f
  3531  0562  0871               	movf	___bmul@multiplicand,w
  3532  0563  1B73               	btfsc	___bmul@multiplier,6
  3533  0564  07F2               	addwf	___bmul@product,f
  3534  0565  1003               	clrc
  3535  0566  0DF1               	rlf	___bmul@multiplicand,f
  3536  0567  0871               	movf	___bmul@multiplicand,w
  3537  0568  1BF3               	btfsc	___bmul@multiplier,7
  3538  0569  07F2               	addwf	___bmul@product,f
  3539  056A  0872               	movf	___bmul@product,w
  3540  056B  0008               	return
  3541  056C                     __end_of___bmul:	
  3542                           
  3543                           	psect	text19
  3544  0607                     __ptext19:	
  3545 ;; *************** function _Read_Mode_Input *****************
  3546 ;; Defined at:
  3547 ;;		line 402 in file "main.c"
  3548 ;; Parameters:    Size  Location     Type
  3549 ;;		None
  3550 ;; Auto vars:     Size  Location     Type
  3551 ;;		None
  3552 ;; Return value:  Size  Location     Type
  3553 ;;                  1    wreg      void 
  3554 ;; Registers used:
  3555 ;;		wreg, status,2, status,0
  3556 ;; Tracked objects:
  3557 ;;		On entry : 100/0
  3558 ;;		On exit  : 100/0
  3559 ;;		Unchanged: 0/0
  3560 ;; Data sizes:     COMMON   BANK0   BANK1
  3561 ;;      Params:         0       0       0
  3562 ;;      Locals:         0       0       0
  3563 ;;      Temps:          0       0       0
  3564 ;;      Totals:         0       0       0
  3565 ;;Total ram usage:        0 bytes
  3566 ;; Hardware stack levels used:    1
  3567 ;; This function calls:
  3568 ;;		Nothing
  3569 ;; This function is called by:
  3570 ;;		_isr
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574                           
  3575                           ;psect for function _Read_Mode_Input
  3576  0607                     _Read_Mode_Input:	
  3577                           
  3578                           ;main.c: 404: if ((GPIObits.GP2))
  3579                           
  3580                           ;incstack = 0
  3581                           ; Regs used in _Read_Mode_Input: [wreg+status,2+status,0]
  3582  0607  1D05               	btfss	5,2	;volatile
  3583  0608  2E13               	goto	i1l1418
  3584                           
  3585                           ;main.c: 405: { GLOBAL_MODE1_LOW_counter = 0;
  3586  0609  01B0               	clrf	_GLOBAL_MODE1_LOW_counter	;volatile
  3587                           
  3588                           ;main.c: 406: if (GLOBAL_MODE1_counter < 4) GLOBAL_MODE1_counter++;
  3589  060A  3004               	movlw	4
  3590  060B  0233               	subwf	_GLOBAL_MODE1_counter,w	;volatile
  3591  060C  1803               	skipnc
  3592  060D  2E10               	goto	i1l1416
  3593  060E  0AB3               	incf	_GLOBAL_MODE1_counter,f	;volatile
  3594  060F  2E1B               	goto	i1l1426
  3595  0610                     i1l1416:	
  3596                           
  3597                           ;main.c: 407: else bGLOBAL_MODE1_PRESSED = 1;
  3598  0610  3001               	movlw	1
  3599  0611  00A6               	movwf	_bGLOBAL_MODE1_PRESSED	;volatile
  3600  0612  2E1B               	goto	i1l1426
  3601  0613                     i1l1418:	
  3602                           
  3603                           ;main.c: 409: GLOBAL_MODE1_counter = 0;
  3604  0613  01B3               	clrf	_GLOBAL_MODE1_counter	;volatile
  3605                           
  3606                           ;main.c: 410: if (GLOBAL_MODE1_LOW_counter < 4) GLOBAL_MODE1_LOW_counter++;
  3607  0614  3004               	movlw	4
  3608  0615  0230               	subwf	_GLOBAL_MODE1_LOW_counter,w	;volatile
  3609  0616  1803               	skipnc
  3610  0617  2E1A               	goto	i1l1424
  3611  0618  0AB0               	incf	_GLOBAL_MODE1_LOW_counter,f	;volatile
  3612  0619  2E1B               	goto	i1l1426
  3613  061A                     i1l1424:	
  3614                           
  3615                           ;main.c: 411: else bGLOBAL_MODE1_PRESSED = 0;
  3616  061A  01A6               	clrf	_bGLOBAL_MODE1_PRESSED	;volatile
  3617  061B                     i1l1426:	
  3618                           
  3619                           ;main.c: 412: }
  3620                           ;main.c: 422: if (!(GPIObits.GP4))
  3621  061B  1A05               	btfsc	5,4	;volatile
  3622  061C  2E23               	goto	i1l1434
  3623                           
  3624                           ;main.c: 423: { GLOBAL_SYNC_Line_LOW_counter = 0;
  3625  061D  01AF               	clrf	_GLOBAL_SYNC_Line_LOW_counter	;volatile
  3626                           
  3627                           ;main.c: 424: if (GLOBAL_SYNC_Line_counter < 9+0) GLOBAL_SYNC_Line_counter++;
  3628  061E  3009               	movlw	9
  3629  061F  0232               	subwf	_GLOBAL_SYNC_Line_counter,w	;volatile
  3630  0620  1C03               	btfss	3,0
  3631  0621  0AB2               	incf	_GLOBAL_SYNC_Line_counter,f	;volatile
  3632  0622  0008               	return
  3633  0623                     i1l1434:	
  3634                           
  3635                           ;main.c: 427: GLOBAL_SYNC_Line_counter = 0;
  3636  0623  01B2               	clrf	_GLOBAL_SYNC_Line_counter	;volatile
  3637                           
  3638                           ;main.c: 428: if (GLOBAL_SYNC_Line_LOW_counter < 7) GLOBAL_SYNC_Line_LOW_counter++;
  3639  0624  3007               	movlw	7
  3640  0625  022F               	subwf	_GLOBAL_SYNC_Line_LOW_counter,w	;volatile
  3641  0626  1803               	skipnc
  3642  0627  2E2A               	goto	i1l1440
  3643  0628  0AAF               	incf	_GLOBAL_SYNC_Line_LOW_counter,f	;volatile
  3644  0629  0008               	return
  3645  062A                     i1l1440:	
  3646                           
  3647                           ;main.c: 429: else bGLOBAL_SYNC_Line_PRESSED = 0;
  3648  062A  01A4               	clrf	_bGLOBAL_SYNC_Line_PRESSED	;volatile
  3649  062B  0008               	return
  3650  062C                     __end_of_Read_Mode_Input:	
  3651  007E                     btemp	set	126	;btemp
  3652  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    546
    Data        0
    BSS         47
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      7      13
    BANK0            69     21      57
    BANK1            32      0       0

Pointer List with Targets:

    __ctoee@addr	PTR eeprom void  size(1) Largest target is 2
		 -> EEprom_InPhase(EEDATA[2]), EEprom_mode(EEDATA[2]), EEprom_Written_Flag(EEDATA[1]), 

    __eetoc@addr	PTR eeprom void  size(1) Largest target is 2
		 -> EEprom_InPhase(EEDATA[2]), EEprom_mode(EEDATA[2]), EEprom_Written_Flag(EEDATA[1]), 

    memcpyee@to	PTR eeprom unsigned char  size(1) Largest target is 2
		 -> EEprom_InPhase(EEDATA[2]), EEprom_mode(EEDATA[2]), EEprom_Written_Flag(EEDATA[1]), 

    memcpyee@from	PTR const unsigned char  size(1) Largest target is 4
		 -> __fltoee@data(COMMON[3]), __fttoee@data(COMMON[3]), __ltoee@data(COMMON[4]), __mtoee@data(COMMON[3]), 
		 -> __itoee@data(COMMON[2]), __ctoee@data(BANK0[1]), 

    memcpyee@ptr	PTR const unsigned char  size(1) Largest target is 4
		 -> __fltoee@data(COMMON[3]), __fttoee@data(COMMON[3]), __ltoee@data(COMMON[4]), __mtoee@data(COMMON[3]), 
		 -> __itoee@data(COMMON[2]), __ctoee@data(BANK0[1]), 

    eecpymem@from	PTR eeprom unsigned char  size(1) Largest target is 2
		 -> EEprom_InPhase(EEDATA[2]), EEprom_mode(EEDATA[2]), EEprom_Written_Flag(EEDATA[1]), 

    eecpymem@to	PTR volatile unsigned char  size(1) Largest target is 4
		 -> __eetofl@data(COMMON[3]), __eetoft@data(COMMON[3]), __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), 
		 -> __eetoi@data(COMMON[2]), __eetoc@data(BANK0[1]), 

    eecpymem@cp	PTR volatile unsigned char  size(1) Largest target is 4
		 -> __eetofl@data(COMMON[3]), __eetoft@data(COMMON[3]), __eetol@data(COMMON[4]), __eetom@data(COMMON[3]), 
		 -> __eetoi@data(COMMON[2]), __eetoc@data(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___wmul

Critical Paths under _main in BANK0

    _main->_Initial_Start
    _WriteEEPROMDefaults->_ReWriteEEPROM
    ___eetoc->_eecpymem
    _InitApp->_WaitForSYNC_PU
    _INC_EEPROM_MODE->_ReWriteEEPROM
    _ReWriteEEPROM->___ctoee
    ___ctoee->_memcpyee

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    5566
                                             20 BANK0      1     1      0
                _ConfigureOscillator
                    _INC_EEPROM_MODE
                            _InitApp
                      _Initial_Start
                      _ReWriteEEPROM
                          _SetOUTPUT
             _Update_Input_Mode_Type
 ---------------------------------------------------------------------------------
 (1) _SetOUTPUT                                            2     2      0      69
                                             10 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Initial_Start                                        3     3      0    3072
                                             17 BANK0      3     3      0
          _Update_ComboPattern_Index
             _Update_Input_Mode_Type
                _WriteEEPROMDefaults
                            ___eetoc
 ---------------------------------------------------------------------------------
 (2) _WriteEEPROMDefaults                                  0     0      0    2035
                      _ReWriteEEPROM
                            ___eetoc
 ---------------------------------------------------------------------------------
 (2) ___eetoc                                              2     2      0     880
                                             14 BANK0      2     2      0
                           _eecpymem
 ---------------------------------------------------------------------------------
 (3) _eecpymem                                             4     2      2     758
                                             10 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Update_Input_Mode_Type                               0     0      0       0
          _Update_ComboPattern_Index
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0      25
                     _WaitForSYNC_PU
 ---------------------------------------------------------------------------------
 (2) _WaitForSYNC_PU                                       1     1      0      25
                                             10 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _INC_EEPROM_MODE                                      1     1      0    1200
                                             17 BANK0      1     1      0
                      _ReWriteEEPROM
          _Update_ComboPattern_Index
 ---------------------------------------------------------------------------------
 (2) _Update_ComboPattern_Index                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReWriteEEPROM                                        1     1      0    1155
                                             16 BANK0      1     1      0
                            ___ctoee
 ---------------------------------------------------------------------------------
 (2) ___ctoee                                              2     1      1    1021
                                             14 BANK0      2     1      1
                           _memcpyee
 ---------------------------------------------------------------------------------
 (3) _memcpyee                                             4     2      2     758
                                             10 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                 11    11      0     189
                                              6 COMMON     1     1      0
                                              0 BANK0     10    10      0
                    _Read_Mode_Input
                             ___bmul
                             ___wmul
                        i1_SetOUTPUT
 ---------------------------------------------------------------------------------
 (7) i1_SetOUTPUT                                          2     2      0      69
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4      22
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___bmul                                               3     2      1      26
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (7) _Read_Mode_Input                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _INC_EEPROM_MODE
     _ReWriteEEPROM
       ___ctoee
         _memcpyee
     _Update_ComboPattern_Index
   _InitApp
     _WaitForSYNC_PU
   _Initial_Start
     _Update_ComboPattern_Index
     _Update_Input_Mode_Type
       _Update_ComboPattern_Index
     _WriteEEPROMDefaults
       _ReWriteEEPROM
         ___ctoee
           _memcpyee
       ___eetoc
         _eecpymem
     ___eetoc
       _eecpymem
   _ReWriteEEPROM
     ___ctoee
       _memcpyee
   _SetOUTPUT
   _Update_Input_Mode_Type
     _Update_ComboPattern_Index

 _isr (ROOT)
   _Read_Mode_Input
   ___bmul
   ___wmul
   i1_SetOUTPUT

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       5       0        2.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      7       D       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            45      0       0       3        0.0%
BANK0               45     15      39       4       82.6%
BANK1               20      0       0       5        0.0%
ABS                  0      0      46       6        0.0%
BITBANK1            20      0       0       7        0.0%
DATA                 0      0      46       8        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Feb 04 10:05:28 2019

                        __CFG_CP$ON 0000                                   pc 0002  
                  _ROM_Sub_Patterns 0246                      ___bmul@product 0072  
            _Update_Input_Mode_Type 0685                                  _RD 04E0  
                       __CFG_CPD$ON 0000                                  _WR 04E1  
                                fsr 0004                 ___wmul@multiplicand 0073  
            Initial_Start@read_data 0056                                 l305 06E0  
                               l217 06BB                                 l255 068C  
                               l360 062F                                 l282 04AD  
                               l275 0487                                 l372 04ED  
                               l365 063B                                 l377 04FB  
                               _GIE 005F                        ___ctoee@addr 0053  
                               _WPU 0095                        ___ctoee@data 0052  
                               _isr 0334                                 fsr0 0004  
                               indf 0000                  _GLOBAL_CHANNELS_EN 002D  
    _GLOBAL_sub_patterns_index_copy 0040                                l1304 0636  
                              l1404 0590                                l1318 0651  
                              l1334 06A9                                l1326 069A  
                              l1406 0593                                l1336 06AA  
                              l1354 06BE                                l1292 04F6  
                              l1460 0605                                l1452 05F6  
                              l1348 06BC                                l1470 059C  
                              l1710 046C                                l1376 0691  
                              l1482 05B6                                l1394 0581  
                              l1476 059D                                l1396 0584  
                              l1732 0483                                l1734 0489  
                              l1726 047B                                l1752 04A9  
                              l1754 04AF                                l1748 04A3  
                              l1764 04B9                                l1768 04C1  
                              l1794 04DD                                l1778 04CB  
                              l1788 04D6                                l1798 04E1  
                              ?_isr 0071                        __CFG_WDTE$ON 0000  
                              u1470 0497                                u1480 0498  
                              _GPIO 0005                                i1l64 03FF  
                              i1l85 0453                                i1l87 045C  
                              _TMR0 0001                                _WREN 04E2  
            __size_of_ReWriteEEPROM 0020                       __CFG_FCMEN$ON 0000  
          __size_of_Read_Mode_Input 0025                                _main 0467  
                              btemp 007E                       __CFG_BOREN$ON 0000  
            __size_of_Initial_Start 0027                                start 000F  
                     __CFG_IESO$OFF 0000                   ___bmul@multiplier 0073  
       _GLOBAL_Selected_Mode_Number 0036                     __end_of_InitApp 05E2  
                             ??_isr 0044                      _WaitForSYNC_PU 06BC  
  _GLOBAL_sub_patterns_column_index 007D                               ?_main 0071  
                   __end_of___eetoc 06D6                               _EEADR 009B  
                   __end_of___ctoee 06DD                               _CARRY 0018  
                             _ANSEL 009F    _GLOBAL_combo_patterns_index_copy 003F  
               _ConfigureOscillator 06DD             __end_of_INC_EEPROM_MODE 0607  
      _GLOBAL_SYNC_Line_LOW_counter 002F                        main@tempvar1 0058  
                             pclath 000A            _GLOBAL_MODE1_LOW_counter 0030  
                             status 0003                               wtemp0 007E  
              ?_ConfigureOscillator 0071                      ReWriteEEPROM@i 0054  
                    __CFG_MCLRE$OFF 0000                     __initialization 0010  
            __end_of_WaitForSYNC_PU 06C6                        __end_of_main 04EA  
       ??_Update_ComboPattern_Index 004E                       _ReWriteEEPROM 064C  
                            ??_main 0058              SetOUTPUT@temporaryGPIO 004F  
                     _Initial_Start 0595                      Initial_Start@i 0057  
                            _EEDATA 009A                              _EECON1 009C  
                            _EECON2 009D                              _CMCON0 0019  
                            i1l2010 0444                              i1l2002 0439  
                            i1l2008 0443                              i1l1440 062A  
                            i1l1424 061A                              i1l1416 0610  
                            i1l1434 0623                              i1l1426 061B  
                            i1l1418 0613                              i1l1540 052E  
                            i1l1550 053D                              i1l1542 0531  
                            i1l1552 0540                              i1l1810 066E  
                            i1l1900 034E                              i1l1814 0676  
                            i1l1910 038D                              i1l1922 039D  
                            i1l1934 03AC                              i1l1926 03A2  
                            i1l1918 0398                              i1l1952 03FE  
                            i1l1944 03F6                              i1l1890 0340  
                            i1l1948 03FB                              i1l1982 0426  
                            i1l1974 041D                              i1l1966 0414  
                            _INTCON 000B            _GLOBAL_MODE2_LOW_counter 002E  
                            _OSCCON 008F           _bGLOBAL_SYNC_Line_PRESSED 0024  
                            _WDTCON 0018                              _TRISIO 0085  
                 _bGLOBAL_STEADY_ON 0042                           ??_InitApp 004F  
             ??_ConfigureOscillator 004E                    _GLOBAL_Mode_copy 0022  
                    __CFG_PWRTE$OFF 0000                    __end_of_eecpymem 064C  
                __size_of_SetOUTPUT 0029         __end_of_WriteEEPROMDefaults 06BC  
                 ??_Read_Mode_Input 0071                              ___bmul 0542  
                   ?_WaitForSYNC_PU 0071                              ___wmul 066C  
                         ??___eetoc 0052                           ??___ctoee 0053  
                       memcpyee@ptr 0050                      ?_ReWriteEEPROM 0071  
                  __end_of_memcpyee 0518                   _bGLOBAL_SYNC_SENT 003B  
                    ?_Initial_Start 0071            _bGLOBAL_CHANGING_PATTERN 002A  
                      ?i1_SetOUTPUT 0071                              saved_w 007E  
                  ?_INC_EEPROM_MODE 0071            __end_of_ROM_Sub_Patterns 02BD  
         _Update_ComboPattern_Index 069A             __end_of__initialization 0019  
             _ROM_Sub_Patterns_Time 02BD                      _EEprom_InPhase 0000  
               ___bmul@multiplicand 0071             ?_Update_Input_Mode_Type 0071  
                    __pcstackCOMMON 0071                      _OPTION_REGbits 0081  
                 __end_of_SetOUTPUT 0595                          __pbssBANK0 0020  
    __end_of_Update_Input_Mode_Type 069A    _bGLOBAL_CHANGING_PATTERN_Enforce 0029  
                        __pmaintext 0467                     ??_ReWriteEEPROM 0054  
                           ?___bmul 0071                             ?___wmul 0071  
                        __pintentry 0004                     ??_Initial_Start 0055  
     _bGLOBAL_OUTPUT_BUFFER_CHANGED 0043                           ?_eecpymem 004E  
     INC_EEPROM_MODE@Temp_Mode_Data 0055           _GLOBAL_Selected_Mode_Type 0035  
             _bGLOBAL_MODE1_PRESSED 0026               _bGLOBAL_MODE2_PRESSED 0025  
                        __stringtab 0100                           ?_memcpyee 004E  
                           _InitApp 05BC                     __size_of___bmul 002A  
                           ___eetoc 06CE                             ___ctoee 06D6  
                   __size_of___wmul 0019          _bGLOBAL_END_OF_CYCLE_COND1 003E  
        _bGLOBAL_END_OF_CYCLE_COND2 003D                        memcpyee@from 004E  
                           __ptext1 056C                             __ptext2 0595  
                           __ptext3 06AF                             __ptext4 06CE  
                           __ptext5 062C                             __ptext6 0685  
                           __ptext7 05BC                             __ptext8 06BC  
                           __ptext9 05E2                        memcpyee@size 004F  
                      __size_of_isr 0133                          ??_eecpymem 0050  
              __size_ofi1_SetOUTPUT 002A                             clrloop0 06C7  
              end_of_initialization 0019                     _Read_Mode_Input 0607  
               _bGLOBAL_ENABLE_LEDS 0027                          ??_memcpyee 0050  
                  ??_WaitForSYNC_PU 004E                          eecpymem@cp 0050  
                        eecpymem@to 0051  __size_of_Update_ComboPattern_Index 0015  
         _GLOBAL_sub_patterns_index 007C           _GLOBAL_sub_patterns_timer 0041  
                      __pstringtext 0100         _GLOBAL_combo_patterns_index 007A  
       __end_of_ConfigureOscillator 06E4       _GLOBAL_combo_patterns_counter 0037  
                    __end_of___bmul 056C                      __end_of___wmul 0685  
      __size_of_WriteEEPROMDefaults 000D                 start_initialization 0010  
           __end_of_Read_Mode_Input 062C                         __end_of_isr 0467  
                         _SetOUTPUT 056C            __size_of_INC_EEPROM_MODE 0025  
                          ??___bmul 0072                          memcpyee@to 0051  
                          ??___wmul 0075                         __pbssEEDATA 0000  
                       __pbssCOMMON 0078                           ___latbits 0000  
                     __pcstackBANK0 0044                   __size_of_eecpymem 0020  
                        ?_SetOUTPUT 0071                            ?_InitApp 0071  
                 __size_of_memcpyee 002E                            ?___eetoc 0071  
                          ?___ctoee 0052               __end_of_ReWriteEEPROM 066C  
             __end_of_Initial_Start 05BC          __end_of_ROM_COMBO_Patterns 0246  
                  ?_Read_Mode_Input 0071   _bGLOBAL_DISABLE_SYNC_Line_PRESSED 002B  
                 interrupt_function 0004                      ___wmul@product 0075  
                          _GPIObits 0005                           clear_ram0 06C6  
                 ??_INC_EEPROM_MODE 0055            _GLOBAL_SYNC_Line_counter 0032  
                       __stringbase 0112                   ___wmul@multiplier 0071  
    _GLOBAL_Selected_Mode_Type_copy 0034                       ??i1_SetOUTPUT 0071  
            _bGLOBAL_IS_PROGRAMMING 0028                         ??_SetOUTPUT 004E  
          ??_Update_Input_Mode_Type 004E                 _WriteEEPROMDefaults 06AF  
         _GLOBAL_SYNC_PULSE_Counter 0078                    __size_of_InitApp 0026  
                     isr@temp_data1 0077                    __size_of___eetoc 0008  
                   _bGLOBAL_InPhase 003C                    __size_of___ctoee 0007  
              ?_WriteEEPROMDefaults 0071                  __end_of__stringtab 0112  
                      eecpymem@from 004E                            _eecpymem 062C  
                      eecpymem@size 004F                            __ptext10 069A  
                          __ptext11 064C                            __ptext12 06D6  
                          __ptext13 04EA                            __ptext14 06DD  
                          __ptext15 0334                            __ptext16 0518  
                          __ptext17 066C                            __ptext18 0542  
                          __ptext19 0607                 __end_ofi1_SetOUTPUT 0542  
                          _memcpyee 04EA                       __size_of_main 0083  
      __size_of_ConfigureOscillator 0007            i1SetOUTPUT@temporaryGPIO 0072  
        ?_Update_ComboPattern_Index 0071             __size_of_WaitForSYNC_PU 000A  
             ??_WriteEEPROMDefaults 0055                          _INTCONbits 000B  
_GLOBAL_combo_patterns_column_index 0079                       _OUTPUT_BUFFER 007B  
     __end_of_ROM_Sub_Patterns_Time 0334                            intlevel1 0000  
                       _EEprom_mode 0002     __size_of_Update_Input_Mode_Type 0015  
                         stringcode 010A                 _EEprom_Written_Flag 0004  
                        _OSCCONbits 008F               WaitForSYNC_PU@temp001 004E  
 __end_of_Update_ComboPattern_Index 06AF               _GLOBAL_Dummy_Counter2 0038  
                _OUTPUT_BUFFER_COPY 003A                         i1_SetOUTPUT 0518  
                          stringtab 0100                _bGLOBAL_InPhase_copy 0020  
              _GLOBAL_Dummy_Counter 0039             _GLOBAL_CHANNELS_EN_copy 002C  
                __CFG_FOSC$INTOSCIO 0000                     _INC_EEPROM_MODE 05E2  
                _ROM_COMBO_Patterns 0112                          _TRISIObits 0085  
              _GLOBAL_MODE1_counter 0033                        ___eetoc@addr 0052  
                      ___eetoc@data 0053                _GLOBAL_MODE2_counter 0031  
